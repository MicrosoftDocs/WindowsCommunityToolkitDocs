<Type Name="HashCode&lt;T&gt;" FullName="CommunityToolkit.HighPerformance.Helpers.HashCode&lt;T&gt;">
  <TypeSignature Language="C#" Value="public struct HashCode&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashCode`1&lt;T&gt; extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.HighPerformance.Helpers.HashCode`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashCode(Of T)" />
  <TypeSignature Language="F#" Value="type HashCode&lt;'T&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type of values to hash.</typeparam>
    <summary>
            Combines the hash code of sequences of <typeparamref name="T" /> values into a single hash code.
            </summary>
    <remarks>
            The hash codes returned by the <see cref="M:CommunityToolkit.HighPerformance.Helpers.HashCode`1.Combine(System.ReadOnlySpan{`0})" /> method are only guaranteed to be repeatable for
            the current execution session, just like with the available <see cref="T:System.HashCode" /> APIs.In other words,
            hashing the same <see cref="T:System.ReadOnlySpan`1" /> collection multiple times in the same process will always
            result in the same hash code, while the same collection being hashed again from another process
            (or another instance of the same process) is not guaranteed to result in the same final value.
            For more info, see <see href="https://docs.microsoft.com/en-us/dotnet/api/system.object.gethashcode#remarks" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static int Combine (ReadOnlySpan&lt;T&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine(valuetype System.ReadOnlySpan`1&lt;!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.HighPerformance.Helpers.HashCode`1.Combine(System.ReadOnlySpan{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (span As ReadOnlySpan(Of T)) As Integer" />
      <MemberSignature Language="F#" Value="static member Combine : ReadOnlySpan&lt;'T&gt; -&gt; int" Usage="CommunityToolkit.HighPerformance.Helpers.HashCode&lt;'T&gt;.Combine span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="span">The input <see cref="T:System.ReadOnlySpan`1" /> instance</param>
        <summary>
            Gets a content hash from the input <see cref="T:System.ReadOnlySpan`1" /> instance using the xxHash32 algorithm.
            </summary>
        <returns>The xxHash32 value for the input <see cref="T:System.ReadOnlySpan`1" /> instance</returns>
        <remarks>The xxHash32 is only guaranteed to be deterministic within the scope of a single app execution</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
