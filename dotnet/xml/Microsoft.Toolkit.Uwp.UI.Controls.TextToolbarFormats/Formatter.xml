<Type Name="Formatter" FullName="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter">
  <TypeSignature Language="C#" Value="public abstract class Formatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Formatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Formatter" />
  <TypeSignature Language="F#" Value="type Formatter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Manipulates Selected Text into an applied format according to default buttons.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.#ctor(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (model As TextToolbar)" />
      <MemberSignature Language="F#" Value="new Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar -&gt; Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter" Usage="new Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter model" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-6.1" />
      </Parameters>
      <Docs>
        <param name="model">The <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" />where Formatter is used</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonActions">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.ButtonActions ButtonActions { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.ButtonActions ButtonActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.ButtonActions" />
      <MemberSignature Language="VB.NET" Value="Public Property ButtonActions As ButtonActions" />
      <MemberSignature Language="F#" Value="member this.ButtonActions : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.ButtonActions with get, set" Usage="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.ButtonActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.ButtonActions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a map of the Actions taken when a button is pressed. Required for Common Button actions (Unless you override both Activation and ShiftActivation)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButtons">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ButtonMap DefaultButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ButtonMap DefaultButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.DefaultButtons" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultButtons As ButtonMap" />
      <MemberSignature Language="F#" Value="member this.DefaultButtons : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ButtonMap" Usage="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.DefaultButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarButtons.ButtonMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the default list of buttons
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureAtNewLine">
      <MemberSignature Language="C#" Value="public virtual void EnsureAtNewLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureAtNewLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.EnsureAtNewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureAtNewLine ()" />
      <MemberSignature Language="F#" Value="abstract member EnsureAtNewLine : unit -&gt; unit&#xA;override this.EnsureAtNewLine : unit -&gt; unit" Usage="formatter.EnsureAtNewLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Determines the Position of the Selector, if not at a New Line, it will move the Selector to a new line.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureAtStartOfCurrentLine">
      <MemberSignature Language="C#" Value="public virtual void EnsureAtStartOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureAtStartOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.EnsureAtStartOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureAtStartOfCurrentLine ()" />
      <MemberSignature Language="F#" Value="abstract member EnsureAtStartOfCurrentLine : unit -&gt; unit&#xA;override this.EnsureAtStartOfCurrentLine : unit -&gt; unit" Usage="formatter.EnsureAtStartOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Decrements the selected position until it is at the start of the current line.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastLine">
      <MemberSignature Language="C#" Value="public virtual string GetLastLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLastLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.GetLastLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLastLine () As String" />
      <MemberSignature Language="F#" Value="abstract member GetLastLine : unit -&gt; string&#xA;override this.GetLastLine : unit -&gt; string" Usage="formatter.GetLastLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the last line (Skips last Carriage Return)
            </summary>
        <returns>Last line text</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLine">
      <MemberSignature Language="C#" Value="public virtual string GetLine (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLine(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.GetLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLine (index As Integer) As String" />
      <MemberSignature Language="F#" Value="abstract member GetLine : int -&gt; string&#xA;override this.GetLine : int -&gt; string" Usage="formatter.GetLine index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>
            Gets the line from the index provided (Skips last Carriage Return)
            </summary>
        <returns>Last line text</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLines">
      <MemberSignature Language="C#" Value="public virtual string[] GetLines ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetLines() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.GetLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLines () As String()" />
      <MemberSignature Language="F#" Value="abstract member GetLines : unit -&gt; string[]&#xA;override this.GetLines : unit -&gt; string[]" Usage="formatter.GetLines " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an array of the Lines of Text in the Editor.
            </summary>
        <returns>Text Array</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As TextToolbar" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" Usage="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the source Toolbar
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model_EditorChanged">
      <MemberSignature Language="C#" Value="protected virtual void Model_EditorChanged (object sender, Microsoft.Toolkit.Uwp.UI.Controls.EditorChangedArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Model_EditorChanged(object sender, class Microsoft.Toolkit.Uwp.UI.Controls.EditorChangedArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Model_EditorChanged(System.Object,Microsoft.Toolkit.Uwp.UI.Controls.EditorChangedArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Model_EditorChanged (sender As Object, e As EditorChangedArgs)" />
      <MemberSignature Language="F#" Value="abstract member Model_EditorChanged : obj * Microsoft.Toolkit.Uwp.UI.Controls.EditorChangedArgs -&gt; unit&#xA;override this.Model_EditorChanged : obj * Microsoft.Toolkit.Uwp.UI.Controls.EditorChangedArgs -&gt; unit" Usage="formatter.Model_EditorChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="Microsoft.Toolkit.Uwp.UI.Controls.EditorChangedArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" /> invoking the event</param>
        <param name="e">
          <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.EditorChangedArgs" />
        </param>
        <summary>
            Called when text editor has changed
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public virtual string NewLineChars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NewLineChars As String" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string" Usage="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Characters used to indicate a New Line
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="public virtual void OnSelectionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSelectionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.OnSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSelectionChanged ()" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : unit -&gt; unit&#xA;override this.OnSelectionChanged : unit -&gt; unit" Usage="formatter.OnSelectionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called after the Selected Text changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="protected const string Return;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string Return" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Return" />
      <MemberSignature Language="VB.NET" Value="Protected Const Return As String " />
      <MemberSignature Language="F#" Value="val mutable Return : string" Usage="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Return" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Shortcut to Carriage Return
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public Windows.UI.Text.ITextSelection Selected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.UI.Text.ITextSelection Selected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Selected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selected As ITextSelection" />
      <MemberSignature Language="F#" Value="member this.Selected : Windows.UI.Text.ITextSelection" Usage="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.UI.Text.ITextSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current Editor Selection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetModel">
      <MemberSignature Language="C#" Value="public virtual void SetModel (Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetModel(class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.SetModel(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetModel (model As TextToolbar)" />
      <MemberSignature Language="F#" Value="abstract member SetModel : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar -&gt; unit&#xA;override this.SetModel : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar -&gt; unit" Usage="formatter.SetModel model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0;win-comm-toolkit-dotnet-7.1" />
      </Parameters>
      <Docs>
        <param name="model">The <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" /> where Formatter is used</param>
        <summary>
            Sets the <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" /> where the Formatter is used
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the formatted version of the Editor's Text
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsetModel">
      <MemberSignature Language="C#" Value="public virtual void UnsetModel (Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnsetModel(class Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.UnsetModel(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnsetModel (model As TextToolbar)" />
      <MemberSignature Language="F#" Value="abstract member UnsetModel : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar -&gt; unit&#xA;override this.UnsetModel : Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar -&gt; unit" Usage="formatter.UnsetModel model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Controls.Core</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0;win-comm-toolkit-dotnet-7.1" />
      </Parameters>
      <Docs>
        <param name="model">The old <see cref="T:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar" /> the Formatter was associated with</param>
        <summary>
            This method is called to unset event handlers that might have been registers by <see cref="M:Microsoft.Toolkit.Uwp.UI.Controls.TextToolbarFormats.Formatter.SetModel(Microsoft.Toolkit.Uwp.UI.Controls.TextToolbar)" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
