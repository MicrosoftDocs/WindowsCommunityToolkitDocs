<Type Name="CacheBase&lt;T&gt;" FullName="Microsoft.Toolkit.Uwp.UI.CacheBase&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class CacheBase&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CacheBase`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.CacheBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CacheBase(Of T)" />
  <TypeSignature Language="F#" Value="type CacheBase&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Generic type as supplied by consumer of the class</typeparam>
    <summary>
            Provides methods and tools to cache files in a folder
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Uwp.UI.CacheBase`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public TimeSpan CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CacheDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : TimeSpan with get, set" Usage="Microsoft.Toolkit.Uwp.UI.CacheBase&lt;'T&gt;.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the life duration of every cache entry.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ClearAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ClearAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.ClearAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.ClearAsync : unit -&gt; System.Threading.Tasks.Task" Usage="cacheBase.ClearAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears all files in the cache
            </summary>
        <returns>awaitable task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ClearAsync (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ClearAsync(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.ClearAsync(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearAsync (duration As TimeSpan) As Task" />
      <MemberSignature Language="F#" Value="member this.ClearAsync : TimeSpan -&gt; System.Threading.Tasks.Task" Usage="cacheBase.ClearAsync duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration">timespan to compute whether file has expired or not</param>
        <summary>
            Clears file if it has expired
            </summary>
        <returns>awaitable task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileFromCacheAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; GetFileFromCacheAsync (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; GetFileFromCacheAsync(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.GetFileFromCacheAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileFromCacheAsync (uri As Uri) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="member this.GetFileFromCacheAsync : Uri -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="cacheBase.GetFileFromCacheAsync uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Uri of the item.</param>
        <summary>
            Gets the StorageFile containing cached item for given Uri
            </summary>
        <returns>a StorageFile</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromCacheAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; GetFromCacheAsync (Uri uri, bool throwOnError = false, System.Threading.CancellationToken cancellationToken = default, System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; initializerKeyValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!T&gt; GetFromCacheAsync(class System.Uri uri, bool throwOnError, valuetype System.Threading.CancellationToken cancellationToken, class System.Collections.Generic.List`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; initializerKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.GetFromCacheAsync(System.Uri,System.Boolean,System.Threading.CancellationToken,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFromCacheAsync (uri As Uri, Optional throwOnError As Boolean = false, Optional cancellationToken As CancellationToken = Nothing, Optional initializerKeyValues As List(Of KeyValuePair(Of String, Object)) = Nothing) As Task(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetFromCacheAsync : Uri * bool * System.Threading.CancellationToken * System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="cacheBase.GetFromCacheAsync (uri, throwOnError, cancellationToken, initializerKeyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="initializerKeyValues" Type="System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="uri">Uri of the item.</param>
        <param name="throwOnError">Indicates whether or not exception should be thrown if item cannot be found / downloaded.</param>
        <param name="cancellationToken">instance of <see cref="T:System.Threading.CancellationToken" /></param>
        <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
        <summary>
            Retrieves item represented by Uri from the cache. If the item is not found in the cache, it will try to downloaded and saved before returning it to the caller.
            </summary>
        <returns>an instance of Generic type</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromMemoryCache">
      <MemberSignature Language="C#" Value="public T GetFromMemoryCache (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetFromMemoryCache(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.GetFromMemoryCache(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFromMemoryCache (uri As Uri) As T" />
      <MemberSignature Language="F#" Value="member this.GetFromMemoryCache : Uri -&gt; 'T" Usage="cacheBase.GetFromMemoryCache uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Uri of the item.</param>
        <summary>
            Retrieves item represented by Uri from the in-memory cache if it exists and is not out of date. If item is not found or is out of date, default instance of the generic type is returned.
            </summary>
        <returns>an instance of Generic type</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpClient">
      <MemberSignature Language="C#" Value="protected System.Net.Http.HttpClient HttpClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpClient HttpClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.HttpClient" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HttpClient As HttpClient" />
      <MemberSignature Language="F#" Value="member this.HttpClient : System.Net.Http.HttpClient" Usage="Microsoft.Toolkit.Uwp.UI.CacheBase&lt;'T&gt;.HttpClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets instance of <see cref="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.HttpClient" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task InitializeAsync (Windows.Storage.StorageFolder folder = default, string folderName = default, System.Net.Http.HttpMessageHandler httpMessageHandler = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task InitializeAsync(class Windows.Storage.StorageFolder folder, string folderName, class System.Net.Http.HttpMessageHandler httpMessageHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.InitializeAsync(Windows.Storage.StorageFolder,System.String,System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InitializeAsync (Optional folder As StorageFolder = Nothing, Optional folderName As String = Nothing, Optional httpMessageHandler As HttpMessageHandler = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member InitializeAsync : Windows.Storage.StorageFolder * string * System.Net.Http.HttpMessageHandler -&gt; System.Threading.Tasks.Task&#xA;override this.InitializeAsync : Windows.Storage.StorageFolder * string * System.Net.Http.HttpMessageHandler -&gt; System.Threading.Tasks.Task" Usage="cacheBase.InitializeAsync (folder, folderName, httpMessageHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="Windows.Storage.StorageFolder" />
        <Parameter Name="folderName" Type="System.String" />
        <Parameter Name="httpMessageHandler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="folder">Folder that is used as root for cache</param>
        <param name="folderName">Cache folder name</param>
        <param name="httpMessageHandler">instance of <see cref="T:System.Net.Http.HttpMessageHandler" /></param>
        <summary>
            Initializes FileCache and provides root folder and cache folder name
            </summary>
        <returns>awaitable task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTypeAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;T&gt; InitializeTypeAsync (System.IO.Stream stream, System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; initializerKeyValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!T&gt; InitializeTypeAsync(class System.IO.Stream stream, class System.Collections.Generic.List`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; initializerKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.InitializeTypeAsync(System.IO.Stream,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function InitializeTypeAsync (stream As Stream, Optional initializerKeyValues As List(Of KeyValuePair(Of String, Object)) = Nothing) As Task(Of T)" />
      <MemberSignature Language="F#" Value="abstract member InitializeTypeAsync : System.IO.Stream * System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="cacheBase.InitializeTypeAsync (stream, initializerKeyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="initializerKeyValues" Type="System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="stream">input stream</param>
        <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
        <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
        <returns>awaitable task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTypeAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;T&gt; InitializeTypeAsync (Windows.Storage.StorageFile baseFile, System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; initializerKeyValues = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!T&gt; InitializeTypeAsync(class Windows.Storage.StorageFile baseFile, class System.Collections.Generic.List`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; initializerKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.InitializeTypeAsync(Windows.Storage.StorageFile,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function InitializeTypeAsync (baseFile As StorageFile, Optional initializerKeyValues As List(Of KeyValuePair(Of String, Object)) = Nothing) As Task(Of T)" />
      <MemberSignature Language="F#" Value="abstract member InitializeTypeAsync : Windows.Storage.StorageFile * System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="cacheBase.InitializeTypeAsync (baseFile, initializerKeyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseFile" Type="Windows.Storage.StorageFile" />
        <Parameter Name="initializerKeyValues" Type="System.Collections.Generic.List&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="baseFile">storage file</param>
        <param name="initializerKeyValues">key value pairs used when initializing instance of generic type</param>
        <summary>
            Cache specific hooks to process items from HTTP response
            </summary>
        <returns>awaitable task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileOutOfDateAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; IsFileOutOfDateAsync (Windows.Storage.StorageFile file, TimeSpan duration, bool treatNullFileAsOutOfDate = true);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsFileOutOfDateAsync(class Windows.Storage.StorageFile file, valuetype System.TimeSpan duration, bool treatNullFileAsOutOfDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.IsFileOutOfDateAsync(Windows.Storage.StorageFile,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsFileOutOfDateAsync (file As StorageFile, duration As TimeSpan, Optional treatNullFileAsOutOfDate As Boolean = true) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsFileOutOfDateAsync : Windows.Storage.StorageFile * TimeSpan * bool -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsFileOutOfDateAsync : Windows.Storage.StorageFile * TimeSpan * bool -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="cacheBase.IsFileOutOfDateAsync (file, duration, treatNullFileAsOutOfDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Windows.Storage.StorageFile" />
        <Parameter Name="duration" Type="System.TimeSpan" />
        <Parameter Name="treatNullFileAsOutOfDate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file">storage file</param>
        <param name="duration">cache duration</param>
        <param name="treatNullFileAsOutOfDate">option to mark uninitialized file as expired</param>
        <summary>
            Override-able method that checks whether file is valid or not.
            </summary>
        <returns>bool indicate whether file has expired or not</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMemoryCacheCount">
      <MemberSignature Language="C#" Value="public int MaxMemoryCacheCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxMemoryCacheCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.MaxMemoryCacheCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxMemoryCacheCount As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxMemoryCacheCount : int with get, set" Usage="Microsoft.Toolkit.Uwp.UI.CacheBase&lt;'T&gt;.MaxMemoryCacheCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets max in-memory item storage count
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreCacheAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PreCacheAsync (Uri uri, bool throwOnError = false, bool storeToMemoryCache = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PreCacheAsync(class System.Uri uri, bool throwOnError, bool storeToMemoryCache, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.PreCacheAsync(System.Uri,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreCacheAsync (uri As Uri, Optional throwOnError As Boolean = false, Optional storeToMemoryCache As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.PreCacheAsync : Uri * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="cacheBase.PreCacheAsync (uri, throwOnError, storeToMemoryCache, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="storeToMemoryCache" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uri">Uri of the item</param>
        <param name="throwOnError">Indicates whether or not exception should be thrown if item cannot be cached</param>
        <param name="storeToMemoryCache">Indicates if item should be loaded into the in-memory storage</param>
        <param name="cancellationToken">instance of <see cref="T:System.Threading.CancellationToken" /></param>
        <summary>
            Assures that item represented by Uri is cached.
            </summary>
        <returns>Awaitable Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveAsync (System.Collections.Generic.IEnumerable&lt;Uri&gt; uriForCachedItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveAsync(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; uriForCachedItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.RemoveAsync(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAsync (uriForCachedItems As IEnumerable(Of Uri)) As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveAsync : seq&lt;Uri&gt; -&gt; System.Threading.Tasks.Task" Usage="cacheBase.RemoveAsync uriForCachedItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriForCachedItems" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="uriForCachedItems">Enumerable uri list</param>
        <summary>
            Removed items based on uri list passed
            </summary>
        <returns>awaitable Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveExpiredAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveExpiredAsync (TimeSpan? duration = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveExpiredAsync(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.CacheBase`1.RemoveExpiredAsync(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveExpiredAsync (Optional duration As Nullable(Of TimeSpan) = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveExpiredAsync : Nullable&lt;TimeSpan&gt; -&gt; System.Threading.Tasks.Task" Usage="cacheBase.RemoveExpiredAsync duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="duration">Optional timespan to compute whether file has expired or not. If no value is supplied, <see cref="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.CacheDuration" /> is used.</param>
        <summary>
            Removes cached files that have expired
            </summary>
        <returns>awaitable task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCount">
      <MemberSignature Language="C#" Value="public uint RetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 RetryCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.CacheBase`1.RetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCount As UInteger" />
      <MemberSignature Language="F#" Value="member this.RetryCount : uint32 with get, set" Usage="Microsoft.Toolkit.Uwp.UI.CacheBase&lt;'T&gt;.RetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of retries trying to ensure the file is cached.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
