<Type Name="Vector4Node" FullName="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node">
  <TypeSignature Language="C#" Value="public sealed class Vector4Node : CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Vector4Node extends CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Vector4Node&#xA;Inherits ExpressionNode" />
  <TypeSignature Language="F#" Value="type Vector4Node = class&#xA;    inherit ExpressionNode" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class Vector4Node. This class cannot be inherited.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode" />
  </Docs>
  <Members>
    <Member MemberName="GetSubchannels">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode GetSubchannels (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode GetSubchannels(valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.GetSubchannels(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubchannels (s As Vector4Node.Subchannel) As ScalarNode" />
      <MemberSignature Language="F#" Value="member this.GetSubchannels : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="vector4Node.GetSubchannels s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
      </Parameters>
      <Docs>
        <param name="s">The subchannel.</param>
        <summary>
            Create a new type by re-arranging the Vector subchannels.
            </summary>
        <returns>ScalarNode</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubchannels">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node GetSubchannels (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s1, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node GetSubchannels(valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s1, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s2) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.GetSubchannels(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubchannels (s1 As Vector4Node.Subchannel, s2 As Vector4Node.Subchannel) As Vector2Node" />
      <MemberSignature Language="F#" Value="member this.GetSubchannels : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node" Usage="vector4Node.GetSubchannels (s1, s2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s2" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
      </Parameters>
      <Docs>
        <param name="s1">The first subchannel.</param>
        <param name="s2">The second subchannel.</param>
        <summary>
            Create a new type by re-arranging the Vector subchannels.
            </summary>
        <returns>Vector2Node</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubchannels">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node GetSubchannels (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s1, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s2, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node GetSubchannels(valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s1, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s2, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s3) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.GetSubchannels(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubchannels (s1 As Vector4Node.Subchannel, s2 As Vector4Node.Subchannel, s3 As Vector4Node.Subchannel) As Vector3Node" />
      <MemberSignature Language="F#" Value="member this.GetSubchannels : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node" Usage="vector4Node.GetSubchannels (s1, s2, s3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s2" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s3" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
      </Parameters>
      <Docs>
        <param name="s1">The first subchannel.</param>
        <param name="s2">The second subchannel.</param>
        <param name="s3">The third subchannel.</param>
        <summary>
            Create a new type by re-arranging the Vector subchannels.
            </summary>
        <returns>Vector3Node</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubchannels">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node GetSubchannels (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s1, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s2, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s3, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node GetSubchannels(valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s1, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s2, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s3, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s4) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.GetSubchannels(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubchannels (s1 As Vector4Node.Subchannel, s2 As Vector4Node.Subchannel, s3 As Vector4Node.Subchannel, s4 As Vector4Node.Subchannel) As Vector4Node" />
      <MemberSignature Language="F#" Value="member this.GetSubchannels : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="vector4Node.GetSubchannels (s1, s2, s3, s4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s2" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s3" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s4" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
      </Parameters>
      <Docs>
        <param name="s1">The first subchannel.</param>
        <param name="s2">The second subchannel.</param>
        <param name="s3">The third subchannel.</param>
        <param name="s4">The fourth subchannel.</param>
        <summary>
            Create a new type by re-arranging the Vector subchannels.
            </summary>
        <returns>Vector4Node</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubchannels">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix3x2Node GetSubchannels (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s1, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s2, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s3, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s4, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s5, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix3x2Node GetSubchannels(valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s1, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s2, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s3, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s4, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s5, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s6) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.GetSubchannels(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubchannels (s1 As Vector4Node.Subchannel, s2 As Vector4Node.Subchannel, s3 As Vector4Node.Subchannel, s4 As Vector4Node.Subchannel, s5 As Vector4Node.Subchannel, s6 As Vector4Node.Subchannel) As Matrix3x2Node" />
      <MemberSignature Language="F#" Value="member this.GetSubchannels : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix3x2Node" Usage="vector4Node.GetSubchannels (s1, s2, s3, s4, s5, s6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix3x2Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s2" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s3" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s4" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s5" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s6" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
      </Parameters>
      <Docs>
        <param name="s1">The first subchannel.</param>
        <param name="s2">The second subchannel.</param>
        <param name="s3">The third subchannel.</param>
        <param name="s4">The fourth subchannel.</param>
        <param name="s5">The fifth subchannel.</param>
        <param name="s6">The sixth subchannel.</param>
        <summary>
            Create a new type by re-arranging the Vector subchannels.
            </summary>
        <returns>Matrix3x2Node</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubchannels">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node GetSubchannels (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s1, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s2, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s3, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s4, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s5, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s6, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s7, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s8, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s9, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s10, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s11, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s12, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s13, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s14, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s15, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel s16);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node GetSubchannels(valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s1, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s2, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s3, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s4, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s5, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s6, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s7, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s8, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s9, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s10, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s11, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s12, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s13, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s14, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s15, valuetype CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node/Subchannel s16) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.GetSubchannels(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubchannels (s1 As Vector4Node.Subchannel, s2 As Vector4Node.Subchannel, s3 As Vector4Node.Subchannel, s4 As Vector4Node.Subchannel, s5 As Vector4Node.Subchannel, s6 As Vector4Node.Subchannel, s7 As Vector4Node.Subchannel, s8 As Vector4Node.Subchannel, s9 As Vector4Node.Subchannel, s10 As Vector4Node.Subchannel, s11 As Vector4Node.Subchannel, s12 As Vector4Node.Subchannel, s13 As Vector4Node.Subchannel, s14 As Vector4Node.Subchannel, s15 As Vector4Node.Subchannel, s16 As Vector4Node.Subchannel) As Matrix4x4Node" />
      <MemberSignature Language="F#" Value="member this.GetSubchannels : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Subchannel -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node" Usage="vector4Node.GetSubchannels (s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s1" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s2" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s3" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s4" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s5" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s6" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s7" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s8" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s9" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s10" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s11" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s12" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s13" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s14" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s15" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
        <Parameter Name="s16" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node+Subchannel" />
      </Parameters>
      <Docs>
        <param name="s1">The first subchannel.</param>
        <param name="s2">The second subchannel.</param>
        <param name="s3">The third subchannel.</param>
        <param name="s4">The fourth subchannel.</param>
        <param name="s5">The fifth subchannel.</param>
        <param name="s6">The sixth subchannel.</param>
        <param name="s7">The seventh subchannel.</param>
        <param name="s8">The eighth subchannel.</param>
        <param name="s9">The ninth subchannel.</param>
        <param name="s10">The tenth subchannel.</param>
        <param name="s11">The eleventh subchannel.</param>
        <param name="s12">The twelfth subchannel.</param>
        <param name="s13">The thirteenth subchannel.</param>
        <param name="s14">The fourteenth subchannel.</param>
        <param name="s15">The fifteenth subchannel.</param>
        <param name="s16">The sixteenth subchannel.</param>
        <summary>
            Create a new type by re-arranging the Vector subchannels.
            </summary>
        <returns>Matrix4x4Node</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected internal override string GetValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.GetValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetValue () As String" />
      <MemberSignature Language="F#" Value="override this.GetValue : unit -&gt; string" Usage="vector4Node.GetValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the value.
            </summary>
        <returns>System.String.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator + (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Addition(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Addition(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As Vector4Node, right As Vector4Node) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( + ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the + operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator / (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Division(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Division(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Vector4Node, right As Vector4Node) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( / ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="left / right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the / operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator == (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_Equality(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Equality(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Vector4Node, right As Vector4Node) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member ( = ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the == operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node (System.Numerics.Vector4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Implicit(valuetype System.Numerics.Vector4 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Implicit(System.Numerics.Vector4)~CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Vector4) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Numerics.Vector4 -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector4" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
            Performs an implicit conversion from <see cref="T:System.Numerics.Vector4" /> to <see cref="T:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />.
            </summary>
        <returns>The result of the conversion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator != (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_Inequality(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Inequality(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Vector4Node, right As Vector4Node) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member op_Inequality : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the != operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator % (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Modulus(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Modulus(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (left As Vector4Node, right As Vector4Node) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( % ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="left % right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the % operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator * (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Multiply(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Multiply(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector4Node, right As ScalarNode) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( * ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the * operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator * (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Multiply(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Multiply(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector4Node, right As Vector4Node) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( * ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the * operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator - (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Subtraction(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_Subtraction(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As Vector4Node, right As Vector4Node) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( - ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the - operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator - (CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_UnaryNegation(class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.op_UnaryNegation(CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As Vector4Node) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
            Implements the - operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="W">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode W { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode W" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.W" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W As ScalarNode" />
      <MemberSignature Language="F#" Value="member this.W : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.W" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the w channel.
            </summary>
        <value>The w.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode X" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As ScalarNode" />
      <MemberSignature Language="F#" Value="member this.X : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the x channel.
            </summary>
        <value>The x.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XY">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node XY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node XY" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.XY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XY As Vector2Node" />
      <MemberSignature Language="F#" Value="member this.XY : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.XY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the x and y channels.
            </summary>
        <value>The xy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYZ">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node XYZ { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node XYZ" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.XYZ" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XYZ As Vector3Node" />
      <MemberSignature Language="F#" Value="member this.XYZ : CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.XYZ" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the x, y, and z channels.
            </summary>
        <value>The xyz.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode Y" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As ScalarNode" />
      <MemberSignature Language="F#" Value="member this.Y : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the y channel.
            </summary>
        <value>The y.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode Z { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode Z" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Z" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Z As ScalarNode" />
      <MemberSignature Language="F#" Value="member this.Z : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node.Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the z channel.
            </summary>
        <value>The z.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
