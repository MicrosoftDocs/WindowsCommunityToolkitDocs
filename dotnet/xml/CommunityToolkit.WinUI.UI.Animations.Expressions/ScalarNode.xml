<Type Name="ScalarNode" FullName="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode">
  <TypeSignature Language="C#" Value="public sealed class ScalarNode : CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScalarNode extends CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScalarNode&#xA;Inherits ExpressionNode" />
  <TypeSignature Language="F#" Value="type ScalarNode = class&#xA;    inherit ExpressionNode" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class ScalarNode. This class cannot be inherited.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:CommunityToolkit.WinUI.UI.Animations.Expressions.ExpressionNode" />
  </Docs>
  <Members>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected internal override string GetValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.GetValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetValue () As String" />
      <MemberSignature Language="F#" Value="override this.GetValue : unit -&gt; string" Usage="scalarNode.GetValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the value.
            </summary>
        <returns>System.String.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode operator + (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_Addition(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Addition(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As ScalarNode, right As ScalarNode) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member ( + ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the + operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode operator / (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_Division(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Division(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As ScalarNode, right As ScalarNode) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member ( / ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="left / right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the / operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator == (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_Equality(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Equality(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ScalarNode, right As ScalarNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member ( = ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the == operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator &gt; (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_GreaterThan(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_GreaterThan(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ScalarNode, right As ScalarNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the &gt; operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator &gt;= (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_GreaterThanOrEqual(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_GreaterThanOrEqual(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ScalarNode, right As ScalarNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the &gt;= operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Implicit(System.Int32)~CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
            Performs an implicit conversion from <see cref="T:System.Int32" /> to <see cref="T:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />.
            </summary>
        <returns>The result of the conversion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_Implicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Implicit(System.Single)~CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Single) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member op_Implicit : single -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
            Performs an implicit conversion from <see cref="T:System.Single" /> to <see cref="T:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />.
            </summary>
        <returns>The result of the conversion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator != (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_Inequality(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Inequality(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ScalarNode, right As ScalarNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member op_Inequality : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the != operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator &lt; (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_LessThan(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_LessThan(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ScalarNode, right As ScalarNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the &lt; operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode operator &lt;= (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode op_LessThanOrEqual(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_LessThanOrEqual(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ScalarNode, right As ScalarNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the &lt;= operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode operator % (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_Modulus(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Modulus(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (left As ScalarNode, right As ScalarNode) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member ( % ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="left % right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the % operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node operator * (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node op_Multiply(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Multiply(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As ScalarNode, right As Matrix4x4Node) As Matrix4x4Node" />
      <MemberSignature Language="F#" Value="static member ( * ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Matrix4x4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the * operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode operator * (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_Multiply(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Multiply(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As ScalarNode, right As ScalarNode) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member ( * ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the * operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node operator * (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node op_Multiply(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Multiply(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As ScalarNode, right As Vector2Node) As Vector2Node" />
      <MemberSignature Language="F#" Value="static member ( * ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector2Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the * operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node operator * (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node op_Multiply(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Multiply(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As ScalarNode, right As Vector3Node) As Vector3Node" />
      <MemberSignature Language="F#" Value="static member ( * ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector3Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the * operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node operator * (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node op_Multiply(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Multiply(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As ScalarNode, right As Vector4Node) As Vector4Node" />
      <MemberSignature Language="F#" Value="static member ( * ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.Vector4Node" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the * operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode operator - (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_Subtraction(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode left, class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_Subtraction(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode,CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As ScalarNode, right As ScalarNode) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member ( - ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode * CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the - operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode operator - (CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode op_UnaryNegation(class CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode.op_UnaryNegation(CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As ScalarNode) As ScalarNode" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode -&gt; CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="CommunityToolkit.WinUI.UI.Animations.Expressions.ScalarNode" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
            Implements the - operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
