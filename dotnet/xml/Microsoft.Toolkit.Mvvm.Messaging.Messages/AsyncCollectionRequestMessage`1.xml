<Type Name="AsyncCollectionRequestMessage&lt;T&gt;" FullName="Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class AsyncCollectionRequestMessage&lt;T&gt; : System.Collections.Generic.IAsyncEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncCollectionRequestMessage`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncCollectionRequestMessage(Of T)&#xA;Implements IAsyncEnumerable(Of T)" />
  <TypeSignature Language="F#" Value="type AsyncCollectionRequestMessage&lt;'T&gt; = class&#xA;    interface IAsyncEnumerable&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">The type of request to make.</typeparam>
    <summary>
            A <see langword="class" /> for request messages that can receive multiple replies, which can either be used directly or through derived classes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncCollectionRequestMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage&lt;'T&gt;.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Threading.CancellationToken" /> instance that will be linked to the
            one used to asynchronously enumerate the received responses. This can be used to cancel asynchronous
            replies that are still being processed, if no new items are needed from this request message.
            Consider the following example, where we define a message to retrieve the currently opened documents:
            <code>
            public class OpenDocumentsRequestMessage : AsyncCollectionRequestMessage&lt;XmlDocument&gt; { }
            </code>
            We can then request and enumerate the results like so:
            <code>
            await foreach (var document in Messenger.Default.Send&lt;OpenDocumentsRequestMessage&gt;())
            {
                // Process each document here...
            }
            </code>
            If we also want to control the cancellation of the token passed to each subscriber to the message,
            we can do so by passing a token we control to the returned message before starting the enumeration
            (<see cref="M:System.Threading.Tasks.TaskAsyncEnumerableExtensions.WithCancellation``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)" />).
            The previous snippet with this additional change looks as follows:
            <code>
            await foreach (var document in Messenger.Default.Send&lt;OpenDocumentsRequestMessage&gt;().WithCancellation(cts.Token))
            {
                // Process each document here...
            }
            </code>
            When no more new items are needed (or for any other reason depending on the situation), the token
            passed to the enumerator can be canceled (by calling <see cref="M:System.Threading.CancellationTokenSource.Cancel" />),
            and that will also notify the remaining tasks in the request message. The token exposed by the message
            itself will automatically be linked and canceled with the one passed to the enumerator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerator&lt;T&gt; GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;!T&gt; GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1.GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsyncEnumerator (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;&#xA;override this.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;" Usage="asyncCollectionRequestMessage.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1/&lt;GetAsyncEnumerator&gt;d__8))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1/&lt;GetAsyncEnumerator&gt;d__8))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponsesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;T&gt;&gt; GetResponsesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;&gt; GetResponsesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1.GetResponsesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponsesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of IReadOnlyCollection(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetResponsesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;'T&gt;&gt;" Usage="asyncCollectionRequestMessage.GetResponsesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyCollection&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> value to stop the operation.</param>
        <summary>
            Gets the collection of received response items.
            </summary>
        <returns>The collection of received response items.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt; response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reply(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;!T&gt;&gt; response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1.Reply(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply (response As Func(Of CancellationToken, Task(Of T)))" />
      <MemberSignature Language="F#" Value="member this.Reply : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;'T&gt;&gt; -&gt; unit" Usage="asyncCollectionRequestMessage.Reply response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="response">The response to use to reply to the request message.</param>
        <summary>
            Replies to the current request message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply (System.Threading.Tasks.Task&lt;T&gt; response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reply(class System.Threading.Tasks.Task`1&lt;!T&gt; response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1.Reply(System.Threading.Tasks.Task{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply (response As Task(Of T))" />
      <MemberSignature Language="F#" Value="member this.Reply : System.Threading.Tasks.Task&lt;'T&gt; -&gt; unit" Usage="asyncCollectionRequestMessage.Reply response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Threading.Tasks.Task&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="response">The response to use to reply to the request message.</param>
        <summary>
            Replies to the current request message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply (T response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reply(!T response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Mvvm.Messaging.Messages.AsyncCollectionRequestMessage`1.Reply(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply (response As T)" />
      <MemberSignature Language="F#" Value="member this.Reply : 'T -&gt; unit" Usage="asyncCollectionRequestMessage.Reply response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Mvvm</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="T" />
      </Parameters>
      <Docs>
        <param name="response">The response to use to reply to the request message.</param>
        <summary>
            Replies to the current request message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
