<Type Name="WindowsXamlHostBase" FullName="Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase">
  <TypeSignature Language="C#" Value="public abstract class WindowsXamlHostBase : System.Windows.Interop.HwndHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WindowsXamlHostBase extends System.Windows.Interop.HwndHost" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WindowsXamlHostBase&#xA;Inherits HwndHost" />
  <TypeSignature Language="F#" Value="type WindowsXamlHostBase = class&#xA;    inherit HwndHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Interop.HwndHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            WindowsXamlHost control hosts UWP XAML content inside the Windows Presentation Foundation
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsXamlHostBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase" /> class.
            </summary>
        <remarks>
            Default constructor is required for use in WPF markup. When the default constructor is called,
            object properties have not been set. Put WPF logic in OnInitialized.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsXamlHostBase (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase : string -&gt; Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase" Usage="new Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">UWP XAML Type name</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase" /> class.
            </summary>
        <remarks>
            Constructor is required for use in WPF markup. When the default constructor is called,
            object properties have not been set. Put WPF logic in OnInitialized.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (finalSize As Size) As Size" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="windowsXamlHostBase.ArrangeOverride finalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize">Final Size</param>
        <summary>
            Arranges wrapped UWP XAML content using passed in size constraint
            </summary>
        <returns>Size</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (string propertyName, System.Windows.DependencyProperty wpfProperty, Windows.UI.Xaml.DependencyProperty uwpProperty, object converter = default, System.ComponentModel.BindingDirection direction = System.ComponentModel.BindingDirection.TwoWay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(string propertyName, class System.Windows.DependencyProperty wpfProperty, class Windows.UI.Xaml.DependencyProperty uwpProperty, object converter, valuetype System.ComponentModel.BindingDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.Bind(System.String,System.Windows.DependencyProperty,Windows.UI.Xaml.DependencyProperty,System.Object,System.ComponentModel.BindingDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind (propertyName As String, wpfProperty As DependencyProperty, uwpProperty As DependencyProperty, Optional converter As Object = Nothing, Optional direction As BindingDirection = System.ComponentModel.BindingDirection.TwoWay)" />
      <MemberSignature Language="F#" Value="member this.Bind : string * System.Windows.DependencyProperty * Windows.UI.Xaml.DependencyProperty * obj * System.ComponentModel.BindingDirection -&gt; unit" Usage="windowsXamlHostBase.Bind (propertyName, wpfProperty, uwpProperty, converter, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="wpfProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="uwpProperty" Type="Windows.UI.Xaml.DependencyProperty" />
        <Parameter Name="converter" Type="System.Object" />
        <Parameter Name="direction" Type="System.ComponentModel.BindingDirection" />
      </Parameters>
      <Docs>
        <param name="propertyName">the registered name of the dependency property</param>
        <param name="wpfProperty">the DependencyProperty of the wrapper</param>
        <param name="uwpProperty">the related DependencyProperty of the UWP control</param>
        <param name="converter">a converter, if one's needed</param>
        <param name="direction">indicates that the binding should be one or two directional.  If one way, the Uwp control is only updated from the wrapper.</param>
        <summary>
            Binds this wrapper object's exposed WPF DependencyProperty with the wrapped UWP object's DependencyProperty
            for what effectively works as a regular one- or two-way binding.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildWindowCore">
      <MemberSignature Language="C#" Value="protected override System.Runtime.InteropServices.HandleRef BuildWindowCore (System.Runtime.InteropServices.HandleRef hwndParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwndParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BuildWindowCore (hwndParent As HandleRef) As HandleRef" />
      <MemberSignature Language="F#" Value="override this.BuildWindowCore : System.Runtime.InteropServices.HandleRef -&gt; System.Runtime.InteropServices.HandleRef" Usage="windowsXamlHostBase.BuildWindowCore hwndParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndParent" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwndParent">Parent window handle</param>
        <summary>
            Creates <see cref="T:Windows.UI.Xaml.Application" /> object, wrapped <see cref="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource" /> instance; creates and
            sets root UWP XAML element on <see cref="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource" />.
            </summary>
        <returns>Handle to XAML window</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ChildChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ChildChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.ChildChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ChildChanged As EventHandler " />
      <MemberSignature Language="F#" Value="member this.ChildChanged : EventHandler " Usage="member this.ChildChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Fired when WindowsXamlHost root UWP XAML content has been updated
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildInternal">
      <MemberSignature Language="C#" Value="protected Windows.UI.Xaml.UIElement ChildInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.UI.Xaml.UIElement ChildInternal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.ChildInternal" />
      <MemberSignature Language="VB.NET" Value="Protected Property ChildInternal As UIElement" />
      <MemberSignature Language="F#" Value="member this.ChildInternal : Windows.UI.Xaml.UIElement with get, set" Usage="Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.ChildInternal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.UI.Xaml.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the root UWP XAML element displayed in the WPF control instance.
            </summary>
        <value>The <see cref="T:Windows.UI.Xaml.UIElement" /> child.</value>
        <remarks>This UWP XAML element is the root element of the wrapped <see cref="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyWindowCore">
      <MemberSignature Language="C#" Value="protected override void DestroyWindowCore (System.Runtime.InteropServices.HandleRef hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DestroyWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DestroyWindowCore (hwnd As HandleRef)" />
      <MemberSignature Language="F#" Value="override this.DestroyWindowCore : System.Runtime.InteropServices.HandleRef -&gt; unit" Usage="windowsXamlHostBase.DestroyWindowCore hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwnd">Handle of window to be destroyed</param>
        <summary>
            WPF framework request to destroy control window.  Cleans up the HwndIslandSite created by DesktopWindowXamlSource
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="windowsXamlHostBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Is disposing?</param>
        <summary>
            WindowsXamlHost Dispose
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUwpInternalObject">
      <MemberSignature Language="C#" Value="public object GetUwpInternalObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetUwpInternalObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.GetUwpInternalObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUwpInternalObject () As Object" />
      <MemberSignature Language="F#" Value="member this.GetUwpInternalObject : unit -&gt; obj" Usage="windowsXamlHostBase.GetUwpInternalObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Exposes ChildInternal without exposing its actual Type.
            </summary>
        <returns>the underlying UWP child object</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected override bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="F#" Value="override this.HasFocusWithinCore : unit -&gt; bool" Usage="windowsXamlHostBase.HasFocusWithinCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this wrapper control instance been disposed
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="windowsXamlHostBase.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">Available Size</param>
        <summary>
            Measures wrapped UWP XAML content using passed in size constraint
            </summary>
        <returns>XAML DesiredSize</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataContainer">
      <MemberSignature Language="C#" Value="protected static Microsoft.Toolkit.Win32.UI.XamlHost.IXamlMetadataContainer MetadataContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Toolkit.Win32.UI.XamlHost.IXamlMetadataContainer MetadataContainer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.MetadataContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property MetadataContainer As IXamlMetadataContainer" />
      <MemberSignature Language="F#" Value="static member MetadataContainer : Microsoft.Toolkit.Win32.UI.XamlHost.IXamlMetadataContainer" Usage="Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.MetadataContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Win32.UI.XamlHost.IXamlMetadataContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current instance of <seealso cref="T:Microsoft.Toolkit.Win32.UI.XamlHost.XamlApplication" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.OnChildChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildChanged ()" />
      <MemberSignature Language="F#" Value="abstract member OnChildChanged : unit -&gt; unit&#xA;override this.OnChildChanged : unit -&gt; unit" Usage="windowsXamlHostBase.OnChildChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called when the property <seealso cref="P:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.ChildInternal" /> has changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="windowsXamlHostBase.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">RoutedEventArgs</param>
        <summary>
            Override for OnGotFocus that passes NavigateFocus on to the DesktopXamlSource instance
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="windowsXamlHostBase.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetContent">
      <MemberSignature Language="C#" Value="protected virtual void SetContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.SetContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetContent ()" />
      <MemberSignature Language="F#" Value="abstract member SetContent : unit -&gt; unit&#xA;override this.SetContent : unit -&gt; unit" Usage="windowsXamlHostBase.SetContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The default implementation of SetContent applies ChildInternal to desktopWindowXamSource.Content.
            Override this method if that shouldn't be the case.
            For example, override if your control should be a child of another WindowsXamlHostBase-based control.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected override bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool" Usage="windowsXamlHostBase.TabIntoCore request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <see cref="T:System.Windows.Input.TraversalRequest" /> that contains requested navigation direction</param>
        <summary>
            Process Tab from host framework
            </summary>
        <returns>Did handle tab</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override IntPtr WndProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int WndProc(native int hwnd, int32 msg, native int wParam, native int lParam, bool&amp; handled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Wpf.UI.XamlHost.WindowsXamlHostBase.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function WndProc (hwnd As IntPtr, msg As Integer, wParam As IntPtr, lParam As IntPtr, ByRef handled As Boolean) As IntPtr" />
      <MemberSignature Language="F#" Value="override this.WndProc : nativeint * int * nativeint * nativeint * bool -&gt; nativeint" Usage="windowsXamlHostBase.WndProc (hwnd, msg, wParam, lParam, handled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
        <Parameter Name="handled" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hwnd">To be added.</param>
        <param name="msg">To be added.</param>
        <param name="wParam">To be added.</param>
        <param name="lParam">To be added.</param>
        <param name="handled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
