<Type Name="MsalProvider" FullName="Microsoft.Toolkit.Graph.Providers.MsalProvider">
  <TypeSignature Language="C#" Value="public class MsalProvider : Microsoft.Graph.IAuthenticationProvider, Microsoft.Toolkit.Graph.Providers.IProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MsalProvider extends System.Object implements class Microsoft.Graph.IAuthenticationProvider, class Microsoft.Toolkit.Graph.Providers.IProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Graph.Providers.MsalProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MsalProvider&#xA;Implements IAuthenticationProvider, IProvider" />
  <TypeSignature Language="F#" Value="type MsalProvider = class&#xA;    interface IProvider&#xA;    interface IAuthenticationProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Graph.IAuthenticationProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Toolkit.Graph.Providers.IProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <a href="https://github.com/AzureAD/microsoft-authentication-library-for-dotnet">MSAL.NET</a> provider helper for tracking authentication state using an <see cref="T:Microsoft.Graph.IAuthenticationProvider" /> class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateRequestAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateRequestAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Graph.Providers.MsalProvider.AuthenticateRequestAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthenticateRequestAsync (request As HttpRequestMessage) As Task" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateRequestAsync : System.Net.Http.HttpRequestMessage -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateRequestAsync : System.Net.Http.HttpRequestMessage -&gt; System.Threading.Tasks.Task" Usage="msalProvider.AuthenticateRequestAsync request" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Graph.IAuthenticationProvider.AuthenticateRequestAsync(System.Net.Http.HttpRequestMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="protected Microsoft.Identity.Client.IPublicClientApplication Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Identity.Client.IPublicClientApplication Client" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Graph.Providers.MsalProvider.Client" />
      <MemberSignature Language="VB.NET" Value="Protected Property Client As IPublicClientApplication" />
      <MemberSignature Language="F#" Value="member this.Client : Microsoft.Identity.Client.IPublicClientApplication with get, set" Usage="Microsoft.Toolkit.Graph.Providers.MsalProvider.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.IPublicClientApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the MSAL.NET Client used to authenticate the user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Graph.Providers.MsalProvider&gt; CreateAsync (Microsoft.Identity.Client.IPublicClientApplication client, Microsoft.Graph.IAuthenticationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Graph.Providers.MsalProvider&gt; CreateAsync(class Microsoft.Identity.Client.IPublicClientApplication client, class Microsoft.Graph.IAuthenticationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Graph.Providers.MsalProvider.CreateAsync(Microsoft.Identity.Client.IPublicClientApplication,Microsoft.Graph.IAuthenticationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAsync (client As IPublicClientApplication, provider As IAuthenticationProvider) As Task(Of MsalProvider)" />
      <MemberSignature Language="F#" Value="static member CreateAsync : Microsoft.Identity.Client.IPublicClientApplication * Microsoft.Graph.IAuthenticationProvider -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Graph.Providers.MsalProvider&gt;" Usage="Microsoft.Toolkit.Graph.Providers.MsalProvider.CreateAsync (client, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Graph.Providers.MsalProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Identity.Client.IPublicClientApplication" />
        <Parameter Name="provider" Type="Microsoft.Graph.IAuthenticationProvider" />
      </Parameters>
      <Docs>
        <param name="client">Existing <see cref="T:Microsoft.Identity.Client.IPublicClientApplication" /> instance.</param>
        <param name="provider">Existing <see cref="T:Microsoft.Graph.IAuthenticationProvider" /> instance.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Graph.Providers.MsalProvider" /> class.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> returning a <see cref="T:Microsoft.Toolkit.Graph.Providers.MsalProvider" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Graph">
      <MemberSignature Language="C#" Value="public Microsoft.Graph.GraphServiceClient Graph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Graph.GraphServiceClient Graph" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Graph.Providers.MsalProvider.Graph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graph As GraphServiceClient" />
      <MemberSignature Language="F#" Value="member this.Graph : Microsoft.Graph.GraphServiceClient" Usage="Microsoft.Toolkit.Graph.Providers.MsalProvider.Graph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Graph.GraphServiceClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.Graph.GraphServiceClient" /> object to access the Microsoft Graph APIs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoginAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoginAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Graph.Providers.MsalProvider.LoginAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoginAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member LoginAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.LoginAsync : unit -&gt; System.Threading.Tasks.Task" Usage="msalProvider.LoginAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Toolkit.Graph.Providers.IProvider.LoginAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Login the user.
            </summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogoutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LogoutAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LogoutAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Graph.Providers.MsalProvider.LogoutAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LogoutAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member LogoutAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.LogoutAsync : unit -&gt; System.Threading.Tasks.Task" Usage="msalProvider.LogoutAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Toolkit.Graph.Providers.IProvider.LogoutAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Logout the user.
            </summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="protected Microsoft.Graph.IAuthenticationProvider Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Graph.IAuthenticationProvider Provider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Graph.Providers.MsalProvider.Provider" />
      <MemberSignature Language="VB.NET" Value="Protected Property Provider As IAuthenticationProvider" />
      <MemberSignature Language="F#" Value="member this.Provider : Microsoft.Graph.IAuthenticationProvider with get, set" Usage="Microsoft.Toolkit.Graph.Providers.MsalProvider.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Graph.IAuthenticationProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the provider used by the graph to manage requests.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Graph.Providers.ProviderState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Toolkit.Graph.Providers.ProviderState State" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Graph.Providers.MsalProvider.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As ProviderState" />
      <MemberSignature Language="F#" Value="member this.State : Microsoft.Toolkit.Graph.Providers.ProviderState" Usage="Microsoft.Toolkit.Graph.Providers.MsalProvider.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Graph.Providers.ProviderState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current login state of the provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.Toolkit.Graph.Providers.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Graph.Providers.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Graph.Providers.MsalProvider.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;Microsoft.Toolkit.Graph.Providers.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;Microsoft.Toolkit.Graph.Providers.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:Microsoft.Toolkit.Graph.Providers.IProvider.StateChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Graph.Providers.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event called when the login <see cref="P:Microsoft.Toolkit.Graph.Providers.IProvider.State" /> changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySilentSignInAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TrySilentSignInAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task TrySilentSignInAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Graph.Providers.MsalProvider.TrySilentSignInAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySilentSignInAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.TrySilentSignInAsync : unit -&gt; System.Threading.Tasks.Task" Usage="msalProvider.TrySilentSignInAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Graph</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Tries to check if the user is logged in without prompting to login.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
