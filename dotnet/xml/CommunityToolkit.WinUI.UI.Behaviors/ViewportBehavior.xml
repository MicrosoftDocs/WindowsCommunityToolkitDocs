<Type Name="ViewportBehavior" FullName="CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior">
  <TypeSignature Language="C#" Value="public class ViewportBehavior : CommunityToolkit.WinUI.UI.Behaviors.BehaviorBase&lt;Microsoft.UI.Xaml.FrameworkElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ViewportBehavior extends CommunityToolkit.WinUI.UI.Behaviors.BehaviorBase`1&lt;class Microsoft.UI.Xaml.FrameworkElement&gt;" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ViewportBehavior&#xA;Inherits BehaviorBase(Of FrameworkElement)" />
  <TypeSignature Language="F#" Value="type ViewportBehavior = class&#xA;    inherit BehaviorBase&lt;FrameworkElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.WinUI.UI.Behaviors.BehaviorBase&lt;Microsoft.UI.Xaml.FrameworkElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.UI.Xaml.FrameworkElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class for listening element enter or exit the ScrollViewer viewport
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewportBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnteredViewport">
      <MemberSignature Language="C#" Value="public event EventHandler EnteredViewport;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnteredViewport" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.EnteredViewport" />
      <MemberSignature Language="VB.NET" Value="Public Event EnteredViewport As EventHandler " />
      <MemberSignature Language="F#" Value="member this.EnteredViewport : EventHandler " Usage="member this.EnteredViewport : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Associated element fully enter the ScrollViewer viewport event
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnteringViewport">
      <MemberSignature Language="C#" Value="public event EventHandler EnteringViewport;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnteringViewport" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.EnteringViewport" />
      <MemberSignature Language="VB.NET" Value="Public Event EnteringViewport As EventHandler " />
      <MemberSignature Language="F#" Value="member this.EnteringViewport : EventHandler " Usage="member this.EnteringViewport : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Associated element enter the ScrollViewer viewport event
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitedViewport">
      <MemberSignature Language="C#" Value="public event EventHandler ExitedViewport;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ExitedViewport" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.ExitedViewport" />
      <MemberSignature Language="VB.NET" Value="Public Event ExitedViewport As EventHandler " />
      <MemberSignature Language="F#" Value="member this.ExitedViewport : EventHandler " Usage="member this.ExitedViewport : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Associated element fully exit the ScrollViewer viewport event
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitingViewport">
      <MemberSignature Language="C#" Value="public event EventHandler ExitingViewport;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ExitingViewport" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.ExitingViewport" />
      <MemberSignature Language="VB.NET" Value="Public Event ExitingViewport As EventHandler " />
      <MemberSignature Language="F#" Value="member this.ExitingViewport : EventHandler " Usage="member this.ExitingViewport : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Associated element exit the ScrollViewer viewport event
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysOn">
      <MemberSignature Language="C#" Value="public bool IsAlwaysOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlwaysOn" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsAlwaysOn" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAlwaysOn As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAlwaysOn : bool with get, set" Usage="CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsAlwaysOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this behavior will remain attached after the associated element enters the viewport. When false, the behavior will remove itself after entering.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysOnProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty IsAlwaysOnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty IsAlwaysOnProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsAlwaysOnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsAlwaysOnProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable IsAlwaysOnProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsAlwaysOnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The IsAlwaysOn value of the associated element
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyInViewport">
      <MemberSignature Language="C#" Value="public bool IsFullyInViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyInViewport" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsFullyInViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyInViewport As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFullyInViewport : bool" Usage="CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsFullyInViewport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether associated element is fully in the ScrollViewer viewport
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyInViewportProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty IsFullyInViewportProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty IsFullyInViewportProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsFullyInViewportProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFullyInViewportProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable IsFullyInViewportProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsFullyInViewportProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The IsFullyInViewport value of the associated element
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInViewport">
      <MemberSignature Language="C#" Value="public bool IsInViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInViewport" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsInViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInViewport As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsInViewport : bool" Usage="CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsInViewport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether associated element is in the ScrollViewer viewport
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInViewportProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty IsInViewportProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty IsInViewportProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsInViewportProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInViewportProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable IsInViewportProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.IsInViewportProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The IsInViewport value of the associated element
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttached">
      <MemberSignature Language="C#" Value="protected override void OnAttached ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAttached() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.OnAttached" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAttached ()" />
      <MemberSignature Language="F#" Value="override this.OnAttached : unit -&gt; unit" Usage="viewportBehavior.OnAttached " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called after the behavior is attached to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
        <remarks>
            Override this to hook up functionality to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDetaching">
      <MemberSignature Language="C#" Value="protected override void OnDetaching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDetaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Behaviors.ViewportBehavior.OnDetaching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDetaching ()" />
      <MemberSignature Language="F#" Value="override this.OnDetaching : unit -&gt; unit" Usage="viewportBehavior.OnDetaching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called when the behavior is being detached from its <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
        <remarks>
            Override this to unhook functionality from the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" /></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
