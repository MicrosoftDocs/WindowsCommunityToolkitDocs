<Type Name="MarkdownRenderedEventArgs" FullName="CommunityToolkit.WinUI.UI.Controls.MarkdownRenderedEventArgs">
  <TypeSignature Language="C#" Value="public class MarkdownRenderedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MarkdownRenderedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.UI.Controls.MarkdownRenderedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MarkdownRenderedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="F#" Value="type MarkdownRenderedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Markdown</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Arguments for the OnMarkdownRendered event which indicates when the markdown has been
            rendered.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Controls.MarkdownRenderedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="CommunityToolkit.WinUI.UI.Controls.MarkdownRenderedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Markdown</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the exception if there was one. If the exception is null there was no error.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
