<Type Name="InfiniteCanvas" FullName="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas">
  <TypeSignature Language="C#" Value="public class InfiniteCanvas : Microsoft.UI.Xaml.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InfiniteCanvas extends Microsoft.UI.Xaml.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas" />
  <TypeSignature Language="VB.NET" Value="Public Class InfiniteCanvas&#xA;Inherits Control" />
  <TypeSignature Language="F#" Value="type InfiniteCanvas = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.UI.Xaml.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxTools", Type=typeof(Microsoft.UI.Xaml.Controls.StackPanel))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxTools", Type=typeof(Microsoft.UI.Xaml.Controls.StackPanel))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxColorPicker", Type=typeof(Microsoft.UI.Xaml.Controls.ColorPicker))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxColorPicker", Type=typeof(Microsoft.UI.Xaml.Controls.ColorPicker))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="CanvasComboBoxFontSizeTextBox", Type=typeof(Microsoft.UI.Xaml.Controls.TextBox))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="CanvasComboBoxFontSizeTextBox", Type=typeof(Microsoft.UI.Xaml.Controls.TextBox))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxItalicButton", Type=typeof(Microsoft.UI.Xaml.Controls.Primitives.ToggleButton))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxItalicButton", Type=typeof(Microsoft.UI.Xaml.Controls.Primitives.ToggleButton))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxBoldButton", Type=typeof(Microsoft.UI.Xaml.Controls.Primitives.ToggleButton))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBoxBoldButton", Type=typeof(Microsoft.UI.Xaml.Controls.Primitives.ToggleButton))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="DrawingSurfaceRenderer", Type=typeof(CommunityToolkit.WinUI.UI.Controls.InfiniteCanvasVirtualDrawingSurface))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="DrawingSurfaceRenderer", Type=typeof(CommunityToolkit.WinUI.UI.Controls.InfiniteCanvasVirtualDrawingSurface))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="MainContainer", Type=typeof(Microsoft.UI.Xaml.Controls.Canvas))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="MainContainer", Type=typeof(Microsoft.UI.Xaml.Controls.Canvas))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="InfiniteCanvasScrollViewer", Type=typeof(Microsoft.UI.Xaml.Controls.ScrollViewer))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="InfiniteCanvasScrollViewer", Type=typeof(Microsoft.UI.Xaml.Controls.ScrollViewer))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="EraseAllButton", Type=typeof(Microsoft.UI.Xaml.Controls.Button))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="EraseAllButton", Type=typeof(Microsoft.UI.Xaml.Controls.Button))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBox", Type=typeof(CommunityToolkit.WinUI.UI.Controls.InfiniteCanvasTextBox))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="CanvasTextBox", Type=typeof(CommunityToolkit.WinUI.UI.Controls.InfiniteCanvasTextBox))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="CanvasToolbarContainer", Type=typeof(Microsoft.UI.Xaml.Controls.StackPanel))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="CanvasToolbarContainer", Type=typeof(Microsoft.UI.Xaml.Controls.StackPanel))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="UndoButton", Type=typeof(Microsoft.UI.Xaml.Controls.Button))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="UndoButton", Type=typeof(Microsoft.UI.Xaml.Controls.Button))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="RedoButton", Type=typeof(Microsoft.UI.Xaml.Controls.Button))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="RedoButton", Type=typeof(Microsoft.UI.Xaml.Controls.Button))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.UI.Xaml.TemplatePart(Name="FontColorIcon", Type=typeof(Microsoft.UI.Xaml.Controls.FontIcon))]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.UI.Xaml.TemplatePart(Name="FontColorIcon", Type=typeof(Microsoft.UI.Xaml.Controls.FontIcon))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            InfiniteCanvas is a canvas that supports Ink, Text, Format Text, Zoom in/out, Redo, Undo, Export canvas data, Import canvas data.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InfiniteCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasHeight">
      <MemberSignature Language="C#" Value="public double CanvasHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CanvasHeight" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property CanvasHeight As Double" />
      <MemberSignature Language="F#" Value="member this.CanvasHeight : double with get, set" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the height of the canvas, default value is the max value 2097152
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty CanvasHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty CanvasHeightProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanvasHeightProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable CanvasHeightProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Identifies the <see cref="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasHeight" /> dependency property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasWidth">
      <MemberSignature Language="C#" Value="public double CanvasWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CanvasWidth" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property CanvasWidth As Double" />
      <MemberSignature Language="F#" Value="member this.CanvasWidth : double with get, set" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the width of the canvas, default value is the max value 2097152
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty CanvasWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty CanvasWidthProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanvasWidthProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable CanvasWidthProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Identifies the <see cref="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.CanvasWidth" /> dependency property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsJson">
      <MemberSignature Language="C#" Value="public string ExportAsJson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExportAsJson() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.ExportAsJson" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportAsJson () As String" />
      <MemberSignature Language="F#" Value="member this.ExportAsJson : unit -&gt; string" Usage="infiniteCanvas.ExportAsJson " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Export the InfinitCanvas as json string.
            </summary>
        <returns>json string</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInkStrokes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;Windows.UI.Input.Inking.InkStroke&gt; ExportInkStrokes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class Windows.UI.Input.Inking.InkStroke&gt; ExportInkStrokes() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.ExportInkStrokes" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInkStrokes () As List(Of InkStroke)" />
      <MemberSignature Language="F#" Value="member this.ExportInkStrokes : unit -&gt; System.Collections.Generic.List&lt;Windows.UI.Input.Inking.InkStroke&gt;" Usage="infiniteCanvas.ExportInkStrokes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Windows.UI.Input.Inking.InkStroke&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Export the InfiniteCanvas ink strokes.
            </summary>
        <returns>list of InkStrokes</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportText">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExportText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;string&gt; ExportText() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.ExportText" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportText () As List(Of String)" />
      <MemberSignature Language="F#" Value="member this.ExportText : unit -&gt; System.Collections.Generic.List&lt;string&gt;" Usage="infiniteCanvas.ExportText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Export the InfiniteCanvas raw text.
            </summary>
        <returns>list of strings</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportFromJson">
      <MemberSignature Language="C#" Value="public void ImportFromJson (string json);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportFromJson(string json) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.ImportFromJson(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportFromJson (json As String)" />
      <MemberSignature Language="F#" Value="member this.ImportFromJson : string -&gt; unit" Usage="infiniteCanvas.ImportFromJson json" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="json">InfiniteCanvas json representation</param>
        <summary>
            Import InfiniteCanvas from json string and render the new canvas, this function will empty the Redo/Undo queue.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsToolbarVisible">
      <MemberSignature Language="C#" Value="public bool IsToolbarVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsToolbarVisible" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.IsToolbarVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsToolbarVisible As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsToolbarVisible : bool with get, set" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.IsToolbarVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the toolbar is visible or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsToolbarVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty IsToolbarVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty IsToolbarVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.IsToolbarVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsToolbarVisibleProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable IsToolbarVisibleProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.IsToolbarVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Identifies the <see cref="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.IsToolbarVisible" /> dependency property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxZoomFactor">
      <MemberSignature Language="C#" Value="public double MaxZoomFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxZoomFactor" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MaxZoomFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxZoomFactor As Double" />
      <MemberSignature Language="F#" Value="member this.MaxZoomFactor : double with get, set" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MaxZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the MaxZoomFactor for the canvas, range between 1 to 10 and the default value is 4
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxZoomFactorProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty MaxZoomFactorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty MaxZoomFactorProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MaxZoomFactorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxZoomFactorProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable MaxZoomFactorProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MaxZoomFactorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Identifies the <see cref="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MaxZoomFactor" /> dependency property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinZoomFactor">
      <MemberSignature Language="C#" Value="public double MinZoomFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinZoomFactor" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MinZoomFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property MinZoomFactor As Double" />
      <MemberSignature Language="F#" Value="member this.MinZoomFactor : double with get, set" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MinZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the MinZoomFactor for the canvas, range between .1 to 1 the default value is .25
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinZoomFactorProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty MinZoomFactorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty MinZoomFactorProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MinZoomFactorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinZoomFactorProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable MinZoomFactorProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MinZoomFactorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Identifies the <see cref="P:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.MinZoomFactor" /> dependency property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="protected override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="infiniteCanvas.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (Microsoft.UI.Xaml.Input.KeyRoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class Microsoft.UI.Xaml.Input.KeyRoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.OnKeyDown(Microsoft.UI.Xaml.Input.KeyRoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyRoutedEventArgs)" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : Microsoft.UI.Xaml.Input.KeyRoutedEventArgs -&gt; unit" Usage="infiniteCanvas.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.UI.Xaml.Input.KeyRoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public void Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redo ()" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; unit" Usage="infiniteCanvas.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Redo the last action.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReRenderCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler ReRenderCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReRenderCompleted" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.ReRenderCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event ReRenderCompleted As EventHandler " />
      <MemberSignature Language="F#" Value="member this.ReRenderCompleted : EventHandler " Usage="member this.ReRenderCompleted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This event triggered after each render happened because of any change in the canvas elements.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveBitmapAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SaveBitmapAsync (Windows.Storage.Streams.IRandomAccessStream stream, CommunityToolkit.WinUI.UI.Controls.BitmapFileFormat bitmapFileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SaveBitmapAsync(class Windows.Storage.Streams.IRandomAccessStream stream, valuetype CommunityToolkit.WinUI.UI.Controls.BitmapFileFormat bitmapFileFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.SaveBitmapAsync(Windows.Storage.Streams.IRandomAccessStream,CommunityToolkit.WinUI.UI.Controls.BitmapFileFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveBitmapAsync (stream As IRandomAccessStream, bitmapFileFormat As BitmapFileFormat) As Task" />
      <MemberSignature Language="F#" Value="member this.SaveBitmapAsync : Windows.Storage.Streams.IRandomAccessStream * CommunityToolkit.WinUI.UI.Controls.BitmapFileFormat -&gt; System.Threading.Tasks.Task" Usage="infiniteCanvas.SaveBitmapAsync (stream, bitmapFileFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="Windows.Storage.Streams.IRandomAccessStream" />
        <Parameter Name="bitmapFileFormat" Type="CommunityToolkit.WinUI.UI.Controls.BitmapFileFormat" />
      </Parameters>
      <Docs>
        <param name="stream">The target stream.</param>
        <param name="bitmapFileFormat">the specified format.</param>
        <summary>
            This method exports the max possible view of the InfiniteCanvas drawings as offScreen drawings that can be converted to image.
            Max is calculated using CanvasDevice.MaximumBitmapSizeInPixels
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Controls.InfiniteCanvas.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="infiniteCanvas.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Controls.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Undo the last action.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
