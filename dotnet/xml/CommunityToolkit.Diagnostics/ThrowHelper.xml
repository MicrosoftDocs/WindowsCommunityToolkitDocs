<Type Name="ThrowHelper" FullName="CommunityToolkit.Diagnostics.ThrowHelper">
  <TypeSignature Language="C#" Value="public static class ThrowHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ThrowHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Diagnostics.ThrowHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class ThrowHelper" />
  <TypeSignature Language="F#" Value="type ThrowHelper = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper methods to efficiently throw exceptions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ThrowArgumentException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentException ()" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentException (string? name, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentException(string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentException (name As String, message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException (name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentException (string? name, string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentException(string name, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentException (name As String, message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string * string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException (name, message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentException&lt;T&gt; (string? name, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentException&lt;T&gt;(string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentException(Of T) (name As String, message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException (name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentException&lt;T&gt; (string? name, string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentException&lt;T&gt;(string name, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException``1(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentException(Of T) (name As String, message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentException : string * string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentException (name, message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentNullException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentNullException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentNullException ()" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentNullException (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentNullException(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentNullException (name As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentNullException (string? name, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentNullException(string name, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentNullException (name As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException (name, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentNullException (string? name, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentNullException(string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentNullException (name As String, message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : string * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException (name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentNullException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentNullException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentNullException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentNullException&lt;T&gt; (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentNullException&lt;T&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentNullException(Of T) (name As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentNullException&lt;T&gt; (string? name, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentNullException&lt;T&gt;(string name, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentNullException(Of T) (name As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException (name, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentNullException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentNullException&lt;T&gt; (string? name, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentNullException&lt;T&gt;(string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentNullException(Of T) (name As String, message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentNullException : string * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentNullException (name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentNullException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentOutOfRangeException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentOutOfRangeException ()" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentOutOfRangeException (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentOutOfRangeException(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentOutOfRangeException (name As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentOutOfRangeException (string? name, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentOutOfRangeException(string name, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentOutOfRangeException (name As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException (name, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentOutOfRangeException (string? name, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentOutOfRangeException(string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentOutOfRangeException (name As String, message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException (name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException">
      <MemberSignature Language="C#" Value="public static void ThrowArgumentOutOfRangeException (string? name, object? value, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArgumentOutOfRangeException(string name, object value, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArgumentOutOfRangeException (name As String, value As Object, message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string * obj * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException (name, value, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The argument name.</param>
        <param name="value">The current argument value.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentOutOfRangeException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentOutOfRangeException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentOutOfRangeException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentOutOfRangeException&lt;T&gt; (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentOutOfRangeException&lt;T&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentOutOfRangeException(Of T) (name As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentOutOfRangeException&lt;T&gt; (string? name, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentOutOfRangeException&lt;T&gt;(string name, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentOutOfRangeException(Of T) (name As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException (name, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentOutOfRangeException&lt;T&gt; (string? name, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentOutOfRangeException&lt;T&gt;(string name, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentOutOfRangeException(Of T) (name As String, message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException (name, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArgumentOutOfRangeException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArgumentOutOfRangeException&lt;T&gt; (string? name, object? value, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArgumentOutOfRangeException&lt;T&gt;(string name, object value, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException``1(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArgumentOutOfRangeException(Of T) (name As String, value As Object, message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArgumentOutOfRangeException : string * obj * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArgumentOutOfRangeException (name, value, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="name">The argument name.</param>
        <param name="value">The current argument value.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArgumentOutOfRangeException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArrayTypeMismatchException">
      <MemberSignature Language="C#" Value="public static void ThrowArrayTypeMismatchException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArrayTypeMismatchException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArrayTypeMismatchException ()" />
      <MemberSignature Language="F#" Value="static member ThrowArrayTypeMismatchException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.ArrayTypeMismatchException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArrayTypeMismatchException">
      <MemberSignature Language="C#" Value="public static void ThrowArrayTypeMismatchException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArrayTypeMismatchException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArrayTypeMismatchException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowArrayTypeMismatchException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArrayTypeMismatchException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArrayTypeMismatchException">
      <MemberSignature Language="C#" Value="public static void ThrowArrayTypeMismatchException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowArrayTypeMismatchException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowArrayTypeMismatchException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowArrayTypeMismatchException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArrayTypeMismatchException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArrayTypeMismatchException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArrayTypeMismatchException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArrayTypeMismatchException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArrayTypeMismatchException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowArrayTypeMismatchException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.ArrayTypeMismatchException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArrayTypeMismatchException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArrayTypeMismatchException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArrayTypeMismatchException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArrayTypeMismatchException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArrayTypeMismatchException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ArrayTypeMismatchException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowArrayTypeMismatchException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowArrayTypeMismatchException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowArrayTypeMismatchException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowArrayTypeMismatchException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowArrayTypeMismatchException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowArrayTypeMismatchException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ArrayTypeMismatchException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException">
      <MemberSignature Language="C#" Value="public static void ThrowCOMException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowCOMException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowCOMException ()" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with no paarameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException">
      <MemberSignature Language="C#" Value="public static void ThrowCOMException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowCOMException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowCOMException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException">
      <MemberSignature Language="C#" Value="public static void ThrowCOMException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowCOMException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowCOMException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException">
      <MemberSignature Language="C#" Value="public static void ThrowCOMException (string? message, int error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowCOMException(string message, int32 error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowCOMException (message As String, error As Integer)" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : string * int -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException (message, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">The argument name.</param>
        <param name="error">The HRESULT of the errror to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowCOMException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowCOMException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowCOMException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowCOMException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowCOMException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowCOMException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowCOMException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowCOMException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowCOMException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowCOMException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowCOMException&lt;T&gt; (string? message, int error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowCOMException&lt;T&gt;(string message, int32 error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException``1(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowCOMException(Of T) (message As String, error As Integer) As T" />
      <MemberSignature Language="F#" Value="static member ThrowCOMException : string * int -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowCOMException (message, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The argument name.</param>
        <param name="error">The HRESULT of the errror to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.COMException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException">
      <MemberSignature Language="C#" Value="public static void ThrowExternalException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExternalException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExternalException ()" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException">
      <MemberSignature Language="C#" Value="public static void ThrowExternalException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExternalException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExternalException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException">
      <MemberSignature Language="C#" Value="public static void ThrowExternalException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExternalException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExternalException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException">
      <MemberSignature Language="C#" Value="public static void ThrowExternalException (string? message, int error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExternalException(string message, int32 error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExternalException (message As String, error As Integer)" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : string * int -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException (message, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">The argument name.</param>
        <param name="error">The HRESULT of the errror to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowExternalException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowExternalException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowExternalException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowExternalException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowExternalException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowExternalException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowExternalException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowExternalException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowExternalException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The argument name.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowExternalException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowExternalException&lt;T&gt; (string? message, int error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowExternalException&lt;T&gt;(string message, int32 error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException``1(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowExternalException(Of T) (message As String, error As Integer) As T" />
      <MemberSignature Language="F#" Value="static member ThrowExternalException : string * int -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowExternalException (message, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The argument name.</param>
        <param name="error">The HRESULT of the errror to include.</param>
        <summary>
            Throws a new <see cref="T:System.Runtime.InteropServices.ExternalException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowFormatException">
      <MemberSignature Language="C#" Value="public static void ThrowFormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowFormatException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowFormatException ()" />
      <MemberSignature Language="F#" Value="static member ThrowFormatException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.FormatException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowFormatException">
      <MemberSignature Language="C#" Value="public static void ThrowFormatException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowFormatException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowFormatException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowFormatException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.FormatException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowFormatException">
      <MemberSignature Language="C#" Value="public static void ThrowFormatException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowFormatException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowFormatException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowFormatException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.FormatException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowFormatException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowFormatException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowFormatException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowFormatException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowFormatException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.FormatException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowFormatException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowFormatException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowFormatException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowFormatException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowFormatException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.FormatException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowFormatException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowFormatException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowFormatException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowFormatException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowFormatException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowFormatException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.FormatException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInsufficientMemoryException">
      <MemberSignature Language="C#" Value="public static void ThrowInsufficientMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInsufficientMemoryException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInsufficientMemoryException ()" />
      <MemberSignature Language="F#" Value="static member ThrowInsufficientMemoryException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.InsufficientMemoryException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InsufficientMemoryException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInsufficientMemoryException">
      <MemberSignature Language="C#" Value="public static void ThrowInsufficientMemoryException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInsufficientMemoryException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInsufficientMemoryException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowInsufficientMemoryException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.InsufficientMemoryException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InsufficientMemoryException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInsufficientMemoryException">
      <MemberSignature Language="C#" Value="public static void ThrowInsufficientMemoryException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInsufficientMemoryException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInsufficientMemoryException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowInsufficientMemoryException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.InsufficientMemoryException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InsufficientMemoryException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInsufficientMemoryException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInsufficientMemoryException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInsufficientMemoryException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInsufficientMemoryException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowInsufficientMemoryException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.InsufficientMemoryException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InsufficientMemoryException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInsufficientMemoryException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInsufficientMemoryException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInsufficientMemoryException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInsufficientMemoryException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowInsufficientMemoryException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.InsufficientMemoryException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InsufficientMemoryException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInsufficientMemoryException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInsufficientMemoryException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInsufficientMemoryException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInsufficientMemoryException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowInsufficientMemoryException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInsufficientMemoryException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.InsufficientMemoryException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InsufficientMemoryException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidDataException">
      <MemberSignature Language="C#" Value="public static void ThrowInvalidDataException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInvalidDataException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInvalidDataException ()" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidDataException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.IO.InvalidDataException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.InvalidDataException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidDataException">
      <MemberSignature Language="C#" Value="public static void ThrowInvalidDataException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInvalidDataException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInvalidDataException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidDataException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.IO.InvalidDataException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.InvalidDataException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidDataException">
      <MemberSignature Language="C#" Value="public static void ThrowInvalidDataException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInvalidDataException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInvalidDataException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidDataException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.IO.InvalidDataException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.InvalidDataException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidDataException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInvalidDataException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInvalidDataException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInvalidDataException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidDataException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.IO.InvalidDataException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.InvalidDataException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidDataException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInvalidDataException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInvalidDataException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInvalidDataException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidDataException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.IO.InvalidDataException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.InvalidDataException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidDataException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInvalidDataException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInvalidDataException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInvalidDataException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidDataException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidDataException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.IO.InvalidDataException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.InvalidDataException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidOperationException">
      <MemberSignature Language="C#" Value="public static void ThrowInvalidOperationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInvalidOperationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInvalidOperationException ()" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidOperationException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.InvalidOperationException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidOperationException">
      <MemberSignature Language="C#" Value="public static void ThrowInvalidOperationException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInvalidOperationException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInvalidOperationException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidOperationException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.InvalidOperationException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidOperationException">
      <MemberSignature Language="C#" Value="public static void ThrowInvalidOperationException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowInvalidOperationException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowInvalidOperationException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidOperationException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.InvalidOperationException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidOperationException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInvalidOperationException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInvalidOperationException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInvalidOperationException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidOperationException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.InvalidOperationException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidOperationException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInvalidOperationException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInvalidOperationException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInvalidOperationException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidOperationException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.InvalidOperationException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowInvalidOperationException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowInvalidOperationException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowInvalidOperationException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowInvalidOperationException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowInvalidOperationException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowInvalidOperationException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.InvalidOperationException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowLockRecursionException">
      <MemberSignature Language="C#" Value="public static void ThrowLockRecursionException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowLockRecursionException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowLockRecursionException ()" />
      <MemberSignature Language="F#" Value="static member ThrowLockRecursionException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.Threading.LockRecursionException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.LockRecursionException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowLockRecursionException">
      <MemberSignature Language="C#" Value="public static void ThrowLockRecursionException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowLockRecursionException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowLockRecursionException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowLockRecursionException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.LockRecursionException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.LockRecursionException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowLockRecursionException">
      <MemberSignature Language="C#" Value="public static void ThrowLockRecursionException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowLockRecursionException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowLockRecursionException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowLockRecursionException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.LockRecursionException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.LockRecursionException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowLockRecursionException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowLockRecursionException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowLockRecursionException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowLockRecursionException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowLockRecursionException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.Threading.LockRecursionException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.LockRecursionException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowLockRecursionException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowLockRecursionException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowLockRecursionException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowLockRecursionException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowLockRecursionException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.LockRecursionException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.LockRecursionException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowLockRecursionException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowLockRecursionException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowLockRecursionException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowLockRecursionException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowLockRecursionException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowLockRecursionException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.LockRecursionException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.LockRecursionException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingFieldException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingFieldException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingFieldException ()" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingFieldException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingFieldException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingFieldException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingFieldException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingFieldException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingFieldException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingFieldException (string? className, string? fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingFieldException(string className, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingFieldException (className As String, fieldName As String)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : string * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException (className, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">The target class being inspected.</param>
        <param name="fieldName">The target field being retrieved.</param>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingFieldException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingFieldException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingFieldException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingFieldException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingFieldException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingFieldException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingFieldException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingFieldException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingFieldException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingFieldException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingFieldException&lt;T&gt; (string? className, string? fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingFieldException&lt;T&gt;(string className, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingFieldException(Of T) (className As String, fieldName As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingFieldException : string * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingFieldException (className, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="className">The target class being inspected.</param>
        <param name="fieldName">The target field being retrieved.</param>
        <summary>
            Throws a new <see cref="T:System.MissingFieldException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingFieldException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMemberException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMemberException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMemberException ()" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMemberException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMemberException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMemberException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMemberException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMemberException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMemberException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMemberException (string? className, string? memberName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMemberException(string className, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMemberException (className As String, memberName As String)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : string * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException (className, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">The target class being inspected.</param>
        <param name="memberName">The target member being retrieved.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMemberException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMemberException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMemberException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMemberException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMemberException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMemberException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMemberException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMemberException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMemberException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMemberException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMemberException&lt;T&gt; (string? className, string? memberName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMemberException&lt;T&gt;(string className, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMemberException(Of T) (className As String, memberName As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMemberException : string * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMemberException (className, memberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="className">The target class being inspected.</param>
        <param name="memberName">The target member being retrieved.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMemberException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMemberException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMethodException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMethodException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMethodException ()" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMethodException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMethodException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMethodException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMethodException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMethodException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMethodException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException">
      <MemberSignature Language="C#" Value="public static void ThrowMissingMethodException (string? className, string? methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowMissingMethodException(string className, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowMissingMethodException (className As String, methodName As String)" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : string * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException (className, methodName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">The target class being inspected.</param>
        <param name="methodName">The target method being retrieved.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMethodException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMethodException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMethodException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMethodException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMethodException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMethodException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMethodException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMethodException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMethodException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowMissingMethodException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowMissingMethodException&lt;T&gt; (string? className, string? methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowMissingMethodException&lt;T&gt;(string className, string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowMissingMethodException(Of T) (className As String, methodName As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowMissingMethodException : string * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowMissingMethodException (className, methodName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="className">The target class being inspected.</param>
        <param name="methodName">The target method being retrieved.</param>
        <summary>
            Throws a new <see cref="T:System.MissingMethodException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowNotSupportedException">
      <MemberSignature Language="C#" Value="public static void ThrowNotSupportedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowNotSupportedException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowNotSupportedException ()" />
      <MemberSignature Language="F#" Value="static member ThrowNotSupportedException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.NotSupportedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowNotSupportedException">
      <MemberSignature Language="C#" Value="public static void ThrowNotSupportedException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowNotSupportedException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowNotSupportedException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowNotSupportedException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.NotSupportedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowNotSupportedException">
      <MemberSignature Language="C#" Value="public static void ThrowNotSupportedException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowNotSupportedException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowNotSupportedException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowNotSupportedException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.NotSupportedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowNotSupportedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowNotSupportedException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowNotSupportedException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowNotSupportedException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowNotSupportedException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.NotSupportedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowNotSupportedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowNotSupportedException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowNotSupportedException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowNotSupportedException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowNotSupportedException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.NotSupportedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowNotSupportedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowNotSupportedException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowNotSupportedException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowNotSupportedException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowNotSupportedException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowNotSupportedException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.NotSupportedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowObjectDisposedException">
      <MemberSignature Language="C#" Value="public static void ThrowObjectDisposedException (string? objectName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowObjectDisposedException(string objectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowObjectDisposedException (objectName As String)" />
      <MemberSignature Language="F#" Value="static member ThrowObjectDisposedException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException objectName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectName">The name of the disposed object.</param>
        <summary>
            Throws a new <see cref="T:System.ObjectDisposedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowObjectDisposedException">
      <MemberSignature Language="C#" Value="public static void ThrowObjectDisposedException (string? objectName, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowObjectDisposedException(string objectName, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowObjectDisposedException (objectName As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowObjectDisposedException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException (objectName, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectName" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="objectName">The name of the disposed object.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ObjectDisposedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowObjectDisposedException">
      <MemberSignature Language="C#" Value="public static void ThrowObjectDisposedException (string? objectName, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowObjectDisposedException(string objectName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowObjectDisposedException (objectName As String, message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowObjectDisposedException : string * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException (objectName, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectName">The name of the disposed object.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ObjectDisposedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowObjectDisposedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowObjectDisposedException&lt;T&gt; (string? objectName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowObjectDisposedException&lt;T&gt;(string objectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowObjectDisposedException(Of T) (objectName As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowObjectDisposedException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException objectName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="objectName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="objectName">The name of the disposed object.</param>
        <summary>
            Throws a new <see cref="T:System.ObjectDisposedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowObjectDisposedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowObjectDisposedException&lt;T&gt; (string? objectName, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowObjectDisposedException&lt;T&gt;(string objectName, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowObjectDisposedException(Of T) (objectName As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowObjectDisposedException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException (objectName, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="objectName" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="objectName">The name of the disposed object.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ObjectDisposedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowObjectDisposedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowObjectDisposedException&lt;T&gt; (string? objectName, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowObjectDisposedException&lt;T&gt;(string objectName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowObjectDisposedException(Of T) (objectName As String, message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowObjectDisposedException : string * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowObjectDisposedException (objectName, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="objectName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="objectName">The name of the disposed object.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ObjectDisposedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException">
      <MemberSignature Language="C#" Value="public static void ThrowOperationCanceledException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowOperationCanceledException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowOperationCanceledException ()" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException">
      <MemberSignature Language="C#" Value="public static void ThrowOperationCanceledException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowOperationCanceledException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowOperationCanceledException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException">
      <MemberSignature Language="C#" Value="public static void ThrowOperationCanceledException (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowOperationCanceledException(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowOperationCanceledException (token As CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : System.Threading.CancellationToken -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> in use.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException">
      <MemberSignature Language="C#" Value="public static void ThrowOperationCanceledException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowOperationCanceledException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowOperationCanceledException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException">
      <MemberSignature Language="C#" Value="public static void ThrowOperationCanceledException (string? message, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowOperationCanceledException(string message, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowOperationCanceledException (message As String, token As CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string * System.Threading.CancellationToken -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException (message, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> in use.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException">
      <MemberSignature Language="C#" Value="public static void ThrowOperationCanceledException (string? message, Exception? innerException, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowOperationCanceledException(string message, class System.Exception innerException, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException(System.String,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowOperationCanceledException (message As String, innerException As Exception, token As CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string * Exception * System.Threading.CancellationToken -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException (message, innerException, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> in use.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowOperationCanceledException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowOperationCanceledException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowOperationCanceledException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowOperationCanceledException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowOperationCanceledException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowOperationCanceledException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowOperationCanceledException&lt;T&gt; (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowOperationCanceledException&lt;T&gt;(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException``1(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowOperationCanceledException(Of T) (token As CancellationToken) As T" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : System.Threading.CancellationToken -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> in use.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowOperationCanceledException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowOperationCanceledException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowOperationCanceledException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowOperationCanceledException&lt;T&gt; (string? message, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowOperationCanceledException&lt;T&gt;(string message, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException``1(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowOperationCanceledException(Of T) (message As String, token As CancellationToken) As T" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string * System.Threading.CancellationToken -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException (message, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> in use.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowOperationCanceledException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowOperationCanceledException&lt;T&gt; (string? message, Exception? innerException, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowOperationCanceledException&lt;T&gt;(string message, class System.Exception innerException, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException``1(System.String,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowOperationCanceledException(Of T) (message As String, innerException As Exception, token As CancellationToken) As T" />
      <MemberSignature Language="F#" Value="static member ThrowOperationCanceledException : string * Exception * System.Threading.CancellationToken -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowOperationCanceledException (message, innerException, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <param name="token">The <see cref="T:System.Threading.CancellationToken" /> in use.</param>
        <summary>
            Throws a new <see cref="T:System.OperationCanceledException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">Thrown with the specified parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowPlatformNotSupportedException">
      <MemberSignature Language="C#" Value="public static void ThrowPlatformNotSupportedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowPlatformNotSupportedException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowPlatformNotSupportedException ()" />
      <MemberSignature Language="F#" Value="static member ThrowPlatformNotSupportedException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.PlatformNotSupportedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowPlatformNotSupportedException">
      <MemberSignature Language="C#" Value="public static void ThrowPlatformNotSupportedException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowPlatformNotSupportedException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowPlatformNotSupportedException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowPlatformNotSupportedException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.PlatformNotSupportedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowPlatformNotSupportedException">
      <MemberSignature Language="C#" Value="public static void ThrowPlatformNotSupportedException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowPlatformNotSupportedException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowPlatformNotSupportedException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowPlatformNotSupportedException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.PlatformNotSupportedException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowPlatformNotSupportedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowPlatformNotSupportedException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowPlatformNotSupportedException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowPlatformNotSupportedException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowPlatformNotSupportedException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.PlatformNotSupportedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowPlatformNotSupportedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowPlatformNotSupportedException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowPlatformNotSupportedException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowPlatformNotSupportedException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowPlatformNotSupportedException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.PlatformNotSupportedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowPlatformNotSupportedException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowPlatformNotSupportedException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowPlatformNotSupportedException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowPlatformNotSupportedException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowPlatformNotSupportedException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowPlatformNotSupportedException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.PlatformNotSupportedException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowSynchronizationLockException">
      <MemberSignature Language="C#" Value="public static void ThrowSynchronizationLockException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowSynchronizationLockException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowSynchronizationLockException ()" />
      <MemberSignature Language="F#" Value="static member ThrowSynchronizationLockException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.Threading.SynchronizationLockException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.SynchronizationLockException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowSynchronizationLockException">
      <MemberSignature Language="C#" Value="public static void ThrowSynchronizationLockException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowSynchronizationLockException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowSynchronizationLockException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowSynchronizationLockException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.SynchronizationLockException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.SynchronizationLockException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowSynchronizationLockException">
      <MemberSignature Language="C#" Value="public static void ThrowSynchronizationLockException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowSynchronizationLockException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowSynchronizationLockException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowSynchronizationLockException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.SynchronizationLockException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.SynchronizationLockException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowSynchronizationLockException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowSynchronizationLockException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowSynchronizationLockException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowSynchronizationLockException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowSynchronizationLockException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.Threading.SynchronizationLockException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.SynchronizationLockException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowSynchronizationLockException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowSynchronizationLockException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowSynchronizationLockException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowSynchronizationLockException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowSynchronizationLockException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.SynchronizationLockException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.SynchronizationLockException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowSynchronizationLockException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowSynchronizationLockException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowSynchronizationLockException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowSynchronizationLockException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowSynchronizationLockException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowSynchronizationLockException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.Threading.SynchronizationLockException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Threading.SynchronizationLockException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowTimeoutException">
      <MemberSignature Language="C#" Value="public static void ThrowTimeoutException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowTimeoutException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowTimeoutException ()" />
      <MemberSignature Language="F#" Value="static member ThrowTimeoutException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.TimeoutException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TimeoutException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowTimeoutException">
      <MemberSignature Language="C#" Value="public static void ThrowTimeoutException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowTimeoutException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowTimeoutException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowTimeoutException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.TimeoutException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TimeoutException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowTimeoutException">
      <MemberSignature Language="C#" Value="public static void ThrowTimeoutException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowTimeoutException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowTimeoutException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowTimeoutException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.TimeoutException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TimeoutException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowTimeoutException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowTimeoutException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowTimeoutException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowTimeoutException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowTimeoutException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.TimeoutException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TimeoutException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowTimeoutException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowTimeoutException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowTimeoutException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowTimeoutException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowTimeoutException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.TimeoutException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TimeoutException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowTimeoutException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowTimeoutException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowTimeoutException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowTimeoutException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowTimeoutException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowTimeoutException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.TimeoutException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TimeoutException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowUnauthorizedAccessException">
      <MemberSignature Language="C#" Value="public static void ThrowUnauthorizedAccessException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowUnauthorizedAccessException() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowUnauthorizedAccessException ()" />
      <MemberSignature Language="F#" Value="static member ThrowUnauthorizedAccessException : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.UnauthorizedAccessException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowUnauthorizedAccessException">
      <MemberSignature Language="C#" Value="public static void ThrowUnauthorizedAccessException (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowUnauthorizedAccessException(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowUnauthorizedAccessException (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowUnauthorizedAccessException : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.UnauthorizedAccessException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowUnauthorizedAccessException">
      <MemberSignature Language="C#" Value="public static void ThrowUnauthorizedAccessException (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowUnauthorizedAccessException(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowUnauthorizedAccessException (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowUnauthorizedAccessException : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.UnauthorizedAccessException" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowUnauthorizedAccessException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowUnauthorizedAccessException&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowUnauthorizedAccessException&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowUnauthorizedAccessException(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowUnauthorizedAccessException : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.UnauthorizedAccessException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowUnauthorizedAccessException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowUnauthorizedAccessException&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowUnauthorizedAccessException&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowUnauthorizedAccessException(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowUnauthorizedAccessException : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.UnauthorizedAccessException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowUnauthorizedAccessException&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowUnauthorizedAccessException&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowUnauthorizedAccessException&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowUnauthorizedAccessException(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowUnauthorizedAccessException : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowUnauthorizedAccessException (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.UnauthorizedAccessException" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception">
      <MemberSignature Language="C#" Value="public static void ThrowWin32Exception ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowWin32Exception() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowWin32Exception ()" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : unit -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception">
      <MemberSignature Language="C#" Value="public static void ThrowWin32Exception (int error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowWin32Exception(int32 error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowWin32Exception (error As Integer)" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : int -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="error">The Win32 error code associated with this exception.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception">
      <MemberSignature Language="C#" Value="public static void ThrowWin32Exception (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowWin32Exception(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowWin32Exception (message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception">
      <MemberSignature Language="C#" Value="public static void ThrowWin32Exception (int error, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowWin32Exception(int32 error, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowWin32Exception (error As Integer, message As String)" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : int * string -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception (error, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error">The Win32 error code associated with this exception.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception">
      <MemberSignature Language="C#" Value="public static void ThrowWin32Exception (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowWin32Exception(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowWin32Exception (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : string * Exception -&gt; unit" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowWin32Exception&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowWin32Exception&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowWin32Exception(Of T) () As T" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : unit -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with no parameters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowWin32Exception&lt;T&gt; (int error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowWin32Exception&lt;T&gt;(int32 error) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowWin32Exception(Of T) (error As Integer) As T" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : int -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="error">The Win32 error code associated with this exception.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowWin32Exception&lt;T&gt; (string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowWin32Exception&lt;T&gt;(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowWin32Exception(Of T) (message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowWin32Exception&lt;T&gt; (int error, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowWin32Exception&lt;T&gt;(int32 error, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception``1(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowWin32Exception(Of T) (error As Integer, message As String) As T" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : int * string -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception (error, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="error" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="error">The Win32 error code associated with this exception.</param>
        <param name="message">The message to include in the exception.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowWin32Exception&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ThrowWin32Exception&lt;T&gt; (string? message, Exception? innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ThrowWin32Exception&lt;T&gt;(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception``1(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ThrowWin32Exception(Of T) (message As String, innerException As Exception) As T" />
      <MemberSignature Language="F#" Value="static member ThrowWin32Exception : string * Exception -&gt; 'T" Usage="CommunityToolkit.Diagnostics.ThrowHelper.ThrowWin32Exception (message, innerException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Diagnostics</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DoesNotReturn]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DoesNotReturn&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of expected result.</typeparam>
        <param name="message">The message to include in the exception.</param>
        <param name="innerException">The inner <see cref="T:System.Exception" /> to include.</param>
        <summary>
            Throws a new <see cref="T:System.ComponentModel.Win32Exception" />.
            </summary>
        <returns>This method always throws, so it actually never returns a value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Thrown with the specified parameter.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
