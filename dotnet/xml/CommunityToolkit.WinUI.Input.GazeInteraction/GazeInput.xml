<Type Name="GazeInput" FullName="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput">
  <TypeSignature Language="C#" Value="public class GazeInput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GazeInput extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput" />
  <TypeSignature Language="VB.NET" Value="Public Class GazeInput" />
  <TypeSignature Language="F#" Value="type GazeInput = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Windows.Foundation.Metadata.WebHostHidden]</AttributeName>
      <AttributeName Language="F#">[&lt;Windows.Foundation.Metadata.WebHostHidden&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Static class primarily providing access to attached properties controlling gaze behavior.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GazeInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorRadius">
      <MemberSignature Language="C#" Value="see GetCursorRadius, and SetCursorRadius" />
      <MemberSignature Language="ILAsm" Value="see GetCursorRadius, and SetCursorRadius" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.CursorRadius" />
      <MemberSignature Language="VB.NET" Value="see GetCursorRadius, and SetCursorRadius" />
      <MemberSignature Language="F#" Value="see GetCursorRadius, and SetCursorRadius" Usage="see GetCursorRadius, and SetCursorRadius" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorRadiusProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty CursorRadiusProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty CursorRadiusProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.CursorRadiusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CursorRadiusProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member CursorRadiusProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.CursorRadiusProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the CursorRadius dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellDuration">
      <MemberSignature Language="C#" Value="see GetDwellDuration, and SetDwellDuration" />
      <MemberSignature Language="ILAsm" Value="see GetDwellDuration, and SetDwellDuration" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellDuration" />
      <MemberSignature Language="VB.NET" Value="see GetDwellDuration, and SetDwellDuration" />
      <MemberSignature Language="F#" Value="see GetDwellDuration, and SetDwellDuration" Usage="see GetDwellDuration, and SetDwellDuration" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellDurationProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty DwellDurationProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty DwellDurationProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellDurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DwellDurationProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member DwellDurationProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellDurationProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the DwellDuration dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellFeedbackCompleteBrush">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Brush DwellFeedbackCompleteBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.Media.Brush DwellFeedbackCompleteBrush" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellFeedbackCompleteBrush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DwellFeedbackCompleteBrush As Brush" />
      <MemberSignature Language="F#" Value="static member DwellFeedbackCompleteBrush : Microsoft.UI.Xaml.Media.Brush with get, set" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellFeedbackCompleteBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the brush to use when displaying the default animation for dwell complete
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellFeedbackEnterBrush">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Brush DwellFeedbackEnterBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.Media.Brush DwellFeedbackEnterBrush" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellFeedbackEnterBrush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DwellFeedbackEnterBrush As Brush" />
      <MemberSignature Language="F#" Value="static member DwellFeedbackEnterBrush : Microsoft.UI.Xaml.Media.Brush with get, set" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellFeedbackEnterBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the brush to use when displaying the default indication that gaze entered a control
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellFeedbackProgressBrush">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Brush DwellFeedbackProgressBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.Media.Brush DwellFeedbackProgressBrush" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellFeedbackProgressBrush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DwellFeedbackProgressBrush As Brush" />
      <MemberSignature Language="F#" Value="static member DwellFeedbackProgressBrush : Microsoft.UI.Xaml.Media.Brush with get, set" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellFeedbackProgressBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the brush to use when displaying the default animation for dwell press
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellRepeatDuration">
      <MemberSignature Language="C#" Value="see GetDwellRepeatDuration, and SetDwellRepeatDuration" />
      <MemberSignature Language="ILAsm" Value="see GetDwellRepeatDuration, and SetDwellRepeatDuration" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellRepeatDuration" />
      <MemberSignature Language="VB.NET" Value="see GetDwellRepeatDuration, and SetDwellRepeatDuration" />
      <MemberSignature Language="F#" Value="see GetDwellRepeatDuration, and SetDwellRepeatDuration" Usage="see GetDwellRepeatDuration, and SetDwellRepeatDuration" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellRepeatDurationProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty DwellRepeatDurationProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty DwellRepeatDurationProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellRepeatDurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DwellRepeatDurationProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member DwellRepeatDurationProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellRepeatDurationProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the DwellRepeatDuration dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DwellStrokeThickness">
      <MemberSignature Language="C#" Value="public static double DwellStrokeThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 DwellStrokeThickness" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellStrokeThickness" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DwellStrokeThickness As Double" />
      <MemberSignature Language="F#" Value="static member DwellStrokeThickness : double with get, set" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.DwellStrokeThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the thickness of the lines animated for dwell.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixationDuration">
      <MemberSignature Language="C#" Value="see GetFixationDuration, and SetFixationDuration" />
      <MemberSignature Language="ILAsm" Value="see GetFixationDuration, and SetFixationDuration" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.FixationDuration" />
      <MemberSignature Language="VB.NET" Value="see GetFixationDuration, and SetFixationDuration" />
      <MemberSignature Language="F#" Value="see GetFixationDuration, and SetFixationDuration" Usage="see GetFixationDuration, and SetFixationDuration" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixationDurationProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty FixationDurationProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty FixationDurationProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.FixationDurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FixationDurationProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member FixationDurationProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.FixationDurationProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the FixationDuration dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GazeElement">
      <MemberSignature Language="C#" Value="see GetGazeElement, and SetGazeElement" />
      <MemberSignature Language="ILAsm" Value="see GetGazeElement, and SetGazeElement" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GazeElement" />
      <MemberSignature Language="VB.NET" Value="see GetGazeElement, and SetGazeElement" />
      <MemberSignature Language="F#" Value="see GetGazeElement, and SetGazeElement" Usage="see GetGazeElement, and SetGazeElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GazeElementProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty GazeElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty GazeElementProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GazeElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GazeElementProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member GazeElementProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GazeElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the GazeElement dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCursorRadius">
      <MemberSignature Language="C#" Value="public static int GetCursorRadius (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCursorRadius(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetCursorRadius(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCursorRadius (element As UIElement) As Integer" />
      <MemberSignature Language="F#" Value="static member GetCursorRadius : Microsoft.UI.Xaml.UIElement -&gt; int" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetCursorRadius element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the size of the gaze cursor radius.
            </summary>
        <returns>The size of the gaze cursor radius.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDwellDuration">
      <MemberSignature Language="C#" Value="public static TimeSpan GetDwellDuration (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan GetDwellDuration(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetDwellDuration(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDwellDuration (element As UIElement) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member GetDwellDuration : Microsoft.UI.Xaml.UIElement -&gt; TimeSpan" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetDwellDuration element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the duration for the control to transition from the Fixation state to the Dwell state. At this point, a StateChanged event is fired with PointerState set to Dwell. The Enter and Fixation states are typically achieved too rapidly for the user to have much control over. In contrast Dwell is conscious event. This is the point at which the control is invoked, e.g. a button click. The application can modify this property to control when a gaze enabled UI element gets invoked after a user starts looking at it.
            </summary>
        <returns>The duration for the control to transition from the Fixation state to the Dwell state.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDwellRepeatDuration">
      <MemberSignature Language="C#" Value="public static TimeSpan GetDwellRepeatDuration (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan GetDwellRepeatDuration(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetDwellRepeatDuration(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDwellRepeatDuration (element As UIElement) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member GetDwellRepeatDuration : Microsoft.UI.Xaml.UIElement -&gt; TimeSpan" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetDwellRepeatDuration element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the duration of repeated dwell invocations, should the user continue to dwell on the control. The first repeat will occur after an additional delay specified by RepeatDelayDuration. Subsequent repeats happen after every period of DwellRepeatDuration. A control is invoked repeatedly only if MaxDwellRepeatCount is set to greater than zero.
            </summary>
        <returns>The duration of repeated dwell invocations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixationDuration">
      <MemberSignature Language="C#" Value="public static TimeSpan GetFixationDuration (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan GetFixationDuration(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetFixationDuration(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFixationDuration (element As UIElement) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member GetFixationDuration : Microsoft.UI.Xaml.UIElement -&gt; TimeSpan" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetFixationDuration element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the duration for the control to transition from the Enter state to the Fixation state. At this point, a StateChanged event is fired with PointerState set to Fixation. This event should be used to control the earliest visual feedback the application needs to provide to the user about the gaze location. The default is 350ms.
            </summary>
        <returns>Duration for the control to transition from the Enter state to the Fixation state.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGazeElement">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement GetGazeElement (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement GetGazeElement(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetGazeElement(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGazeElement (element As UIElement) As GazeElement" />
      <MemberSignature Language="F#" Value="static member GetGazeElement : Microsoft.UI.Xaml.UIElement -&gt; CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetGazeElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the GazeElement associated with an UIElement.
            </summary>
        <returns>The GazeElement associated with an UIElement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGazePointer">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer GetGazePointer (Microsoft.UI.Xaml.Controls.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer GetGazePointer(class Microsoft.UI.Xaml.Controls.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetGazePointer(Microsoft.UI.Xaml.Controls.Page)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGazePointer (page As Page) As GazePointer" />
      <MemberSignature Language="F#" Value="static member GetGazePointer : Microsoft.UI.Xaml.Controls.Page -&gt; CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetGazePointer page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="Microsoft.UI.Xaml.Controls.Page" />
      </Parameters>
      <Docs>
        <param name="page">To be added.</param>
        <summary>
            Gets the GazePointer object.
            </summary>
        <returns>The GazePointer associated with that particular page.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteraction">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Input.GazeInteraction.Interaction GetInteraction (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CommunityToolkit.WinUI.Input.GazeInteraction.Interaction GetInteraction(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetInteraction(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInteraction (element As UIElement) As Interaction" />
      <MemberSignature Language="F#" Value="static member GetInteraction : Microsoft.UI.Xaml.UIElement -&gt; CommunityToolkit.WinUI.Input.GazeInteraction.Interaction" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetInteraction element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Input.GazeInteraction.Interaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the status of gaze interaction over that particular XAML element.
            </summary>
        <returns>The status of gaze interaction over that particular XAML element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsCursorVisible">
      <MemberSignature Language="C#" Value="public static bool GetIsCursorVisible (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsCursorVisible(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetIsCursorVisible(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsCursorVisible (element As UIElement) As Boolean" />
      <MemberSignature Language="F#" Value="static member GetIsCursorVisible : Microsoft.UI.Xaml.UIElement -&gt; bool" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetIsCursorVisible element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets a boolean indicating whether cursor is shown while user is looking at the school.
            </summary>
        <returns>True the cursor is shown while user is looking at the school; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsSwitchEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsSwitchEnabled (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsSwitchEnabled(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetIsSwitchEnabled(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsSwitchEnabled (element As UIElement) As Boolean" />
      <MemberSignature Language="F#" Value="static member GetIsSwitchEnabled : Microsoft.UI.Xaml.UIElement -&gt; bool" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetIsSwitchEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets a boolean indicating whether gaze plus switch is enabled.
            </summary>
        <returns>A boolean indicating whether gaze plus switch is enabled.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDwellRepeatCount">
      <MemberSignature Language="C#" Value="public static int GetMaxDwellRepeatCount (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDwellRepeatCount(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetMaxDwellRepeatCount(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDwellRepeatCount (element As UIElement) As Integer" />
      <MemberSignature Language="F#" Value="static member GetMaxDwellRepeatCount : Microsoft.UI.Xaml.UIElement -&gt; int" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetMaxDwellRepeatCount element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the maximum times the control will invoked repeatedly without the user's gaze having to leave and re-enter the control. The default value is zero which disables repeated invocation of a control. Developers can set a higher value to enable repeated invocation.
            </summary>
        <returns>The maximum times the control will invoked repeatedly without the user's gaze having to leave and re-enter the control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRepeatDelayDuration">
      <MemberSignature Language="C#" Value="public static TimeSpan GetRepeatDelayDuration (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan GetRepeatDelayDuration(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetRepeatDelayDuration(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRepeatDelayDuration (element As UIElement) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member GetRepeatDelayDuration : Microsoft.UI.Xaml.UIElement -&gt; TimeSpan" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetRepeatDelayDuration element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the additional duration for the first repeat to occur. This prevents inadvertent repeated invocation.
            </summary>
        <returns>The additional duration for the first repeat to occur.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetThresholdDuration">
      <MemberSignature Language="C#" Value="public static TimeSpan GetThresholdDuration (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan GetThresholdDuration(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetThresholdDuration(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThresholdDuration (element As UIElement) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member GetThresholdDuration : Microsoft.UI.Xaml.UIElement -&gt; TimeSpan" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.GetThresholdDuration element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Gets the duration that controls when the PointerState moves to either the Enter state or the Exit state. When this duration has elapsed after the user's gaze first enters a control, the PointerState is set to Enter. And when this duration has elapsed after the user's gaze has left the control, the PointerState is set to Exit. In both cases, a StateChanged event is fired. The default is 50ms.
            </summary>
        <returns>The duration that controls when the PointerState moves to either the Enter state or the Exit state.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interaction">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Input.GazeInteraction.Interaction Interaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype CommunityToolkit.WinUI.Input.GazeInteraction.Interaction Interaction" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.Interaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Interaction As Interaction" />
      <MemberSignature Language="F#" Value="static member Interaction : CommunityToolkit.WinUI.Input.GazeInteraction.Interaction with get, set" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.Interaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Input.GazeInteraction.Interaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the interaction default
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteractionProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty InteractionProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty InteractionProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.InteractionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InteractionProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member InteractionProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.InteractionProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Interaction dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static void Invoke (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Invoke(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.Invoke(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Invoke (element As UIElement)" />
      <MemberSignature Language="F#" Value="static member Invoke : Microsoft.UI.Xaml.UIElement -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.Invoke element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <summary>
            Invoke the default action of the specified UIElement.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCursorVisible">
      <MemberSignature Language="C#" Value="see GetIsCursorVisible, and SetIsCursorVisible" />
      <MemberSignature Language="ILAsm" Value="see GetIsCursorVisible, and SetIsCursorVisible" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsCursorVisible" />
      <MemberSignature Language="VB.NET" Value="see GetIsCursorVisible, and SetIsCursorVisible" />
      <MemberSignature Language="F#" Value="see GetIsCursorVisible, and SetIsCursorVisible" Usage="see GetIsCursorVisible, and SetIsCursorVisible" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCursorVisibleProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty IsCursorVisibleProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty IsCursorVisibleProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsCursorVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsCursorVisibleProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member IsCursorVisibleProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsCursorVisibleProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the IsCursorVisible dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeviceAvailable">
      <MemberSignature Language="C#" Value="public static bool IsDeviceAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsDeviceAvailable" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsDeviceAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsDeviceAvailable As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDeviceAvailable : bool" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsDeviceAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether a gaze input device is available, and hence whether there is any possibility of gaze events occurring in the application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeviceAvailableChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;object&gt; IsDeviceAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;object&gt; IsDeviceAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsDeviceAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event IsDeviceAvailableChanged As EventHandler(Of Object) " />
      <MemberSignature Language="F#" Value="member this.IsDeviceAvailableChanged : EventHandler&lt;obj&gt; " Usage="member this.IsDeviceAvailableChanged : System.EventHandler&lt;System.obj&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event triggered whenever IsDeviceAvailable changes value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSwitchEnabled">
      <MemberSignature Language="C#" Value="see GetIsSwitchEnabled, and SetIsSwitchEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsSwitchEnabled, and SetIsSwitchEnabled" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsSwitchEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsSwitchEnabled, and SetIsSwitchEnabled" />
      <MemberSignature Language="F#" Value="see GetIsSwitchEnabled, and SetIsSwitchEnabled" Usage="see GetIsSwitchEnabled, and SetIsSwitchEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSwitchEnabledProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty IsSwitchEnabledProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty IsSwitchEnabledProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsSwitchEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSwitchEnabledProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member IsSwitchEnabledProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.IsSwitchEnabledProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the IsSwitchEnabled dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public static void LoadSettings (Windows.Foundation.Collections.ValueSet settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadSettings(class Windows.Foundation.Collections.ValueSet settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.LoadSettings(Windows.Foundation.Collections.ValueSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadSettings (settings As ValueSet)" />
      <MemberSignature Language="F#" Value="static member LoadSettings : Windows.Foundation.Collections.ValueSet -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.LoadSettings settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Windows.Foundation.Collections.ValueSet" />
      </Parameters>
      <Docs>
        <param name="settings">To be added.</param>
        <summary>
            Loads a settings collection into GazeInput.
            Note: This must be loaded from a UI thread to be valid, since the GazeInput
            instance is tied to the UI thread.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDwellRepeatCount">
      <MemberSignature Language="C#" Value="see GetMaxDwellRepeatCount, and SetMaxDwellRepeatCount" />
      <MemberSignature Language="ILAsm" Value="see GetMaxDwellRepeatCount, and SetMaxDwellRepeatCount" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.MaxDwellRepeatCount" />
      <MemberSignature Language="VB.NET" Value="see GetMaxDwellRepeatCount, and SetMaxDwellRepeatCount" />
      <MemberSignature Language="F#" Value="see GetMaxDwellRepeatCount, and SetMaxDwellRepeatCount" Usage="see GetMaxDwellRepeatCount, and SetMaxDwellRepeatCount" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDwellRepeatCountProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty MaxDwellRepeatCountProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty MaxDwellRepeatCountProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.MaxDwellRepeatCountProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxDwellRepeatCountProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member MaxDwellRepeatCountProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.MaxDwellRepeatCountProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the MaxDwellRepeatCount dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatDelayDuration">
      <MemberSignature Language="C#" Value="see GetRepeatDelayDuration, and SetRepeatDelayDuration" />
      <MemberSignature Language="ILAsm" Value="see GetRepeatDelayDuration, and SetRepeatDelayDuration" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.RepeatDelayDuration" />
      <MemberSignature Language="VB.NET" Value="see GetRepeatDelayDuration, and SetRepeatDelayDuration" />
      <MemberSignature Language="F#" Value="see GetRepeatDelayDuration, and SetRepeatDelayDuration" Usage="see GetRepeatDelayDuration, and SetRepeatDelayDuration" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatDelayDurationProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty RepeatDelayDurationProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty RepeatDelayDurationProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.RepeatDelayDurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RepeatDelayDurationProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member RepeatDelayDurationProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.RepeatDelayDurationProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the RepeatDelayDuration dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorRadius">
      <MemberSignature Language="C#" Value="public static void SetCursorRadius (Microsoft.UI.Xaml.UIElement element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorRadius(class Microsoft.UI.Xaml.UIElement element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetCursorRadius(Microsoft.UI.Xaml.UIElement,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorRadius (element As UIElement, value As Integer)" />
      <MemberSignature Language="F#" Value="static member SetCursorRadius : Microsoft.UI.Xaml.UIElement * int -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetCursorRadius (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Sets the size of the gaze cursor radius.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDwellDuration">
      <MemberSignature Language="C#" Value="public static void SetDwellDuration (Microsoft.UI.Xaml.UIElement element, TimeSpan span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDwellDuration(class Microsoft.UI.Xaml.UIElement element, valuetype System.TimeSpan span) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetDwellDuration(Microsoft.UI.Xaml.UIElement,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDwellDuration (element As UIElement, span As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member SetDwellDuration : Microsoft.UI.Xaml.UIElement * TimeSpan -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetDwellDuration (element, span)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="span" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="span">To be added.</param>
        <summary>
            Sets the duration for the control to transition from the Fixation state to the Dwell state. At this point, a StateChanged event is fired with PointerState set to Dwell. The Enter and Fixation states are typically achieved too rapidly for the user to have much control over. In contrast Dwell is conscious event. This is the point at which the control is invoked, e.g. a button click. The application can modify this property to control when a gaze enabled UI element gets invoked after a user starts looking at it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDwellRepeatDuration">
      <MemberSignature Language="C#" Value="public static void SetDwellRepeatDuration (Microsoft.UI.Xaml.UIElement element, TimeSpan span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDwellRepeatDuration(class Microsoft.UI.Xaml.UIElement element, valuetype System.TimeSpan span) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetDwellRepeatDuration(Microsoft.UI.Xaml.UIElement,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDwellRepeatDuration (element As UIElement, span As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member SetDwellRepeatDuration : Microsoft.UI.Xaml.UIElement * TimeSpan -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetDwellRepeatDuration (element, span)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="span" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="span">To be added.</param>
        <summary>
            Sets the duration of repeated dwell invocations, should the user continue to dwell on the control. The first repeat will occur after an additional delay specified by RepeatDelayDuration. Subsequent repeats happen after every period of DwellRepeatDuration. A control is invoked repeatedly only if MaxDwellRepeatCount is set to greater than zero.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFixationDuration">
      <MemberSignature Language="C#" Value="public static void SetFixationDuration (Microsoft.UI.Xaml.UIElement element, TimeSpan span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFixationDuration(class Microsoft.UI.Xaml.UIElement element, valuetype System.TimeSpan span) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetFixationDuration(Microsoft.UI.Xaml.UIElement,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFixationDuration (element As UIElement, span As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member SetFixationDuration : Microsoft.UI.Xaml.UIElement * TimeSpan -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetFixationDuration (element, span)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="span" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="span">To be added.</param>
        <summary>
            Sets the duration for the control to transition from the Enter state to the Fixation state. At this point, a StateChanged event is fired with PointerState set to Fixation. This event should be used to control the earliest visual feedback the application needs to provide to the user about the gaze location. The default is 350ms.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGazeElement">
      <MemberSignature Language="C#" Value="public static void SetGazeElement (Microsoft.UI.Xaml.UIElement element, CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetGazeElement(class Microsoft.UI.Xaml.UIElement element, class CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetGazeElement(Microsoft.UI.Xaml.UIElement,CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetGazeElement (element As UIElement, value As GazeElement)" />
      <MemberSignature Language="F#" Value="static member SetGazeElement : Microsoft.UI.Xaml.UIElement * CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetGazeElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="value" Type="CommunityToolkit.WinUI.Input.GazeInteraction.GazeElement" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Sets the GazeElement associated with an UIElement.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInteraction">
      <MemberSignature Language="C#" Value="public static void SetInteraction (Microsoft.UI.Xaml.UIElement element, CommunityToolkit.WinUI.Input.GazeInteraction.Interaction value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInteraction(class Microsoft.UI.Xaml.UIElement element, valuetype CommunityToolkit.WinUI.Input.GazeInteraction.Interaction value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetInteraction(Microsoft.UI.Xaml.UIElement,CommunityToolkit.WinUI.Input.GazeInteraction.Interaction)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetInteraction (element As UIElement, value As Interaction)" />
      <MemberSignature Language="F#" Value="static member SetInteraction : Microsoft.UI.Xaml.UIElement * CommunityToolkit.WinUI.Input.GazeInteraction.Interaction -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetInteraction (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="value" Type="CommunityToolkit.WinUI.Input.GazeInteraction.Interaction" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Sets the status of gaze interaction over that particular XAML element.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsCursorVisible">
      <MemberSignature Language="C#" Value="public static void SetIsCursorVisible (Microsoft.UI.Xaml.UIElement element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsCursorVisible(class Microsoft.UI.Xaml.UIElement element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetIsCursorVisible(Microsoft.UI.Xaml.UIElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsCursorVisible (element As UIElement, value As Boolean)" />
      <MemberSignature Language="F#" Value="static member SetIsCursorVisible : Microsoft.UI.Xaml.UIElement * bool -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetIsCursorVisible (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Sets a boolean indicating whether cursor is shown while user is looking at the school.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsSwitchEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsSwitchEnabled (Microsoft.UI.Xaml.UIElement element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsSwitchEnabled(class Microsoft.UI.Xaml.UIElement element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetIsSwitchEnabled(Microsoft.UI.Xaml.UIElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsSwitchEnabled (element As UIElement, value As Boolean)" />
      <MemberSignature Language="F#" Value="static member SetIsSwitchEnabled : Microsoft.UI.Xaml.UIElement * bool -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetIsSwitchEnabled (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Sets the boolean indicating whether gaze plus switch is enabled.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxDwellRepeatCount">
      <MemberSignature Language="C#" Value="public static void SetMaxDwellRepeatCount (Microsoft.UI.Xaml.UIElement element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMaxDwellRepeatCount(class Microsoft.UI.Xaml.UIElement element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetMaxDwellRepeatCount(Microsoft.UI.Xaml.UIElement,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetMaxDwellRepeatCount (element As UIElement, value As Integer)" />
      <MemberSignature Language="F#" Value="static member SetMaxDwellRepeatCount : Microsoft.UI.Xaml.UIElement * int -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetMaxDwellRepeatCount (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Sets the maximum times the control will invoked repeatedly without the user's gaze having to leave and re-enter the control. The default value is zero which disables repeated invocation of a control. Developers can set a higher value to enable repeated invocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRepeatDelayDuration">
      <MemberSignature Language="C#" Value="public static void SetRepeatDelayDuration (Microsoft.UI.Xaml.UIElement element, TimeSpan span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRepeatDelayDuration(class Microsoft.UI.Xaml.UIElement element, valuetype System.TimeSpan span) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetRepeatDelayDuration(Microsoft.UI.Xaml.UIElement,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetRepeatDelayDuration (element As UIElement, span As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member SetRepeatDelayDuration : Microsoft.UI.Xaml.UIElement * TimeSpan -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetRepeatDelayDuration (element, span)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="span" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="span">To be added.</param>
        <summary>
            Sets the additional duration for the first repeat to occur.This prevents inadvertent repeated invocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThresholdDuration">
      <MemberSignature Language="C#" Value="public static void SetThresholdDuration (Microsoft.UI.Xaml.UIElement element, TimeSpan span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetThresholdDuration(class Microsoft.UI.Xaml.UIElement element, valuetype System.TimeSpan span) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetThresholdDuration(Microsoft.UI.Xaml.UIElement,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetThresholdDuration (element As UIElement, span As TimeSpan)" />
      <MemberSignature Language="F#" Value="static member SetThresholdDuration : Microsoft.UI.Xaml.UIElement * TimeSpan -&gt; unit" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.SetThresholdDuration (element, span)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="span" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="span">To be added.</param>
        <summary>
            Sets the duration that controls when the PointerState moves to either the Enter state or the Exit state. When this duration has elapsed after the user's gaze first enters a control, the PointerState is set to Enter. And when this duration has elapsed after the user's gaze has left the control, the PointerState is set to Exit. In both cases, a StateChanged event is fired. The default is 50ms.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdDuration">
      <MemberSignature Language="C#" Value="see GetThresholdDuration, and SetThresholdDuration" />
      <MemberSignature Language="ILAsm" Value="see GetThresholdDuration, and SetThresholdDuration" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.ThresholdDuration" />
      <MemberSignature Language="VB.NET" Value="see GetThresholdDuration, and SetThresholdDuration" />
      <MemberSignature Language="F#" Value="see GetThresholdDuration, and SetThresholdDuration" Usage="see GetThresholdDuration, and SetThresholdDuration" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdDurationProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DependencyProperty ThresholdDurationProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.UI.Xaml.DependencyProperty ThresholdDurationProperty" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.ThresholdDurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ThresholdDurationProperty As DependencyProperty" />
      <MemberSignature Language="F#" Value="static member ThresholdDurationProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazeInput.ThresholdDurationProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ThresholdDuration dependency property
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
