<Type Name="GazePointer" FullName="CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer">
  <TypeSignature Language="C#" Value="public class GazePointer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GazePointer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer" />
  <TypeSignature Language="VB.NET" Value="Public Class GazePointer" />
  <TypeSignature Language="F#" Value="type GazePointer = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class of singleton object coordinating gaze input.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public void Click ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Click() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.Click" />
      <MemberSignature Language="VB.NET" Value="Public Sub Click ()" />
      <MemberSignature Language="F#" Value="member this.Click : unit -&gt; unit" Usage="gazePointer.Click " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            When in switch mode, will issue a click on the currently fixated element
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorElement">
      <MemberSignature Language="C#" Value="public Microsoft.UI.Xaml.UIElement CursorElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.UI.Xaml.UIElement CursorElement" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.CursorElement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorElement As UIElement" />
      <MemberSignature Language="F#" Value="member this.CursorElement : Microsoft.UI.Xaml.UIElement with get, set" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.CursorElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the UIElement representing the cursor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GazePointer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="gazePointer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finalizes an instance of the <see cref="T:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GazeEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;CommunityToolkit.WinUI.Input.GazeInteraction.GazeEventArgs&gt; GazeEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class CommunityToolkit.WinUI.Input.GazeInteraction.GazeEventArgs&gt; GazeEvent" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.GazeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GazeEvent As EventHandler(Of GazeEventArgs) " />
      <MemberSignature Language="F#" Value="member this.GazeEvent : EventHandler&lt;CommunityToolkit.WinUI.Input.GazeInteraction.GazeEventArgs&gt; " Usage="member this.GazeEvent : System.EventHandler&lt;CommunityToolkit.WinUI.Input.GazeInteraction.GazeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;CommunityToolkit.WinUI.Input.GazeInteraction.GazeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event handler for Gaze related events, of with a <see cref="T:CommunityToolkit.WinUI.Input.GazeInteraction.GazeEventArgs" /> object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysActivated">
      <MemberSignature Language="C#" Value="public bool IsAlwaysActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlwaysActivated" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.IsAlwaysActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAlwaysActivated As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAlwaysActivated : bool with get, set" Usage="CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.IsAlwaysActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this GazePointer should always be activated or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public void LoadSettings (Windows.Foundation.Collections.ValueSet settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadSettings(class Windows.Foundation.Collections.ValueSet settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.LoadSettings(Windows.Foundation.Collections.ValueSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadSettings (settings As ValueSet)" />
      <MemberSignature Language="F#" Value="member this.LoadSettings : Windows.Foundation.Collections.ValueSet -&gt; unit" Usage="gazePointer.LoadSettings settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Windows.Foundation.Collections.ValueSet" />
      </Parameters>
      <Docs>
        <param name="settings">To be added.</param>
        <summary>
            Loads a settings collection into GazePointer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestCalibrationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; RequestCalibrationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; RequestCalibrationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Input.GazeInteraction.GazePointer.RequestCalibrationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function RequestCalibrationAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RequestCalibrationAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="gazePointer.RequestCalibrationAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Input.GazeInteraction</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Run device calibration.
            </summary>
        <returns>Task that returns true, if calibration completes successfully; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
