<Type Name="WeiboService" FullName="Microsoft.Toolkit.Services.Weibo.WeiboService">
  <TypeSignature Language="C#" Value="public class WeiboService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WeiboService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Services.Weibo.WeiboService" />
  <TypeSignature Language="VB.NET" Value="Public Class WeiboService" />
  <TypeSignature Language="F#" Value="type WeiboService = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class for connecting to Weibo.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeiboService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Services.Weibo.WeiboService" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboUser&gt; GetUserAsync (string screenName = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.Weibo.WeiboUser&gt; GetUserAsync(string screenName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.GetUserAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserAsync (Optional screenName As String = Nothing) As Task(Of WeiboUser)" />
      <MemberSignature Language="F#" Value="member this.GetUserAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboUser&gt;" Usage="weiboService.GetUserAsync screenName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="screenName">User screen name or null for current logged user.</param>
        <summary>
            Retrieve user data.
            </summary>
        <returns>Returns user data.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserTimeLineAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;&gt; GetUserTimeLineAsync (string screenName, int maxRecords = 20);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;&gt; GetUserTimeLineAsync(string screenName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.GetUserTimeLineAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUserTimeLineAsync (screenName As String, Optional maxRecords As Integer = 20) As Task(Of IEnumerable(Of WeiboStatus))" />
      <MemberSignature Language="F#" Value="member this.GetUserTimeLineAsync : string * int -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;&gt;" Usage="weiboService.GetUserTimeLineAsync (screenName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenName" Type="System.String" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="screenName">User screen name.</param>
        <param name="maxRecords">Upper record limit.</param>
        <summary>
            Retrieve user timeline data.
            </summary>
        <returns>Returns strongly typed list of results.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens oAuthTokens);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Initialize(class Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens oAuthTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.Initialize(Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (oAuthTokens As WeiboOAuthTokens) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Initialize : Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens -&gt; bool" Usage="weiboService.Initialize oAuthTokens" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oAuthTokens" Type="Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens" />
      </Parameters>
      <Docs>
        <param name="oAuthTokens">Token instance.</param>
        <summary>
            Initialize underlying provider with relevent token information.
            </summary>
        <returns>Success or failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string appKey, string appSecret, string redirectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Initialize(string appKey, string appSecret, string redirectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.Initialize(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (appKey As String, appSecret As String, redirectUri As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Initialize : string * string * string -&gt; bool" Usage="weiboService.Initialize (appKey, appSecret, redirectUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appKey" Type="System.String" />
        <Parameter Name="appSecret" Type="System.String" />
        <Parameter Name="redirectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appKey">App key.</param>
        <param name="appSecret">App secret.</param>
        <param name="redirectUri">Redirect URI. Has to match redirect URI defined at open.weibo.com/apps (can be arbitrary).</param>
        <summary>
            Initialize underlying provider with relevent token information for Uwp.
            </summary>
        <returns>Success or failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens oAuthTokens, Microsoft.Toolkit.Services.Core.IAuthenticationBroker authenticationBroker, Microsoft.Toolkit.Services.Core.IPasswordManager passwordManager, Microsoft.Toolkit.Services.Core.IStorageManager storageManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Initialize(class Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens oAuthTokens, class Microsoft.Toolkit.Services.Core.IAuthenticationBroker authenticationBroker, class Microsoft.Toolkit.Services.Core.IPasswordManager passwordManager, class Microsoft.Toolkit.Services.Core.IStorageManager storageManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.Initialize(Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens,Microsoft.Toolkit.Services.Core.IAuthenticationBroker,Microsoft.Toolkit.Services.Core.IPasswordManager,Microsoft.Toolkit.Services.Core.IStorageManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (oAuthTokens As WeiboOAuthTokens, authenticationBroker As IAuthenticationBroker, passwordManager As IPasswordManager, storageManager As IStorageManager) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Initialize : Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens * Microsoft.Toolkit.Services.Core.IAuthenticationBroker * Microsoft.Toolkit.Services.Core.IPasswordManager * Microsoft.Toolkit.Services.Core.IStorageManager -&gt; bool" Usage="weiboService.Initialize (oAuthTokens, authenticationBroker, passwordManager, storageManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oAuthTokens" Type="Microsoft.Toolkit.Services.Weibo.WeiboOAuthTokens" />
        <Parameter Name="authenticationBroker" Type="Microsoft.Toolkit.Services.Core.IAuthenticationBroker" />
        <Parameter Name="passwordManager" Type="Microsoft.Toolkit.Services.Core.IPasswordManager" />
        <Parameter Name="storageManager" Type="Microsoft.Toolkit.Services.Core.IStorageManager" />
      </Parameters>
      <Docs>
        <param name="oAuthTokens">Token instance.</param>
        <param name="authenticationBroker">Authentication result interface.</param>
        <param name="passwordManager">Password Manager interface, store the password.</param>
        <param name="storageManager">Storage Manager interface</param>
        <summary>
            Initialize underlying provider with relevant token information.
            </summary>
        <returns>Success or failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string appKey, string appSecret, string redirectUri, Microsoft.Toolkit.Services.Core.IAuthenticationBroker authenticationBroker, Microsoft.Toolkit.Services.Core.IPasswordManager passwordManager, Microsoft.Toolkit.Services.Core.IStorageManager storageManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Initialize(string appKey, string appSecret, string redirectUri, class Microsoft.Toolkit.Services.Core.IAuthenticationBroker authenticationBroker, class Microsoft.Toolkit.Services.Core.IPasswordManager passwordManager, class Microsoft.Toolkit.Services.Core.IStorageManager storageManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.Initialize(System.String,System.String,System.String,Microsoft.Toolkit.Services.Core.IAuthenticationBroker,Microsoft.Toolkit.Services.Core.IPasswordManager,Microsoft.Toolkit.Services.Core.IStorageManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (appKey As String, appSecret As String, redirectUri As String, authenticationBroker As IAuthenticationBroker, passwordManager As IPasswordManager, storageManager As IStorageManager) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Initialize : string * string * string * Microsoft.Toolkit.Services.Core.IAuthenticationBroker * Microsoft.Toolkit.Services.Core.IPasswordManager * Microsoft.Toolkit.Services.Core.IStorageManager -&gt; bool" Usage="weiboService.Initialize (appKey, appSecret, redirectUri, authenticationBroker, passwordManager, storageManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appKey" Type="System.String" />
        <Parameter Name="appSecret" Type="System.String" />
        <Parameter Name="redirectUri" Type="System.String" />
        <Parameter Name="authenticationBroker" Type="Microsoft.Toolkit.Services.Core.IAuthenticationBroker" />
        <Parameter Name="passwordManager" Type="Microsoft.Toolkit.Services.Core.IPasswordManager" />
        <Parameter Name="storageManager" Type="Microsoft.Toolkit.Services.Core.IStorageManager" />
      </Parameters>
      <Docs>
        <param name="appKey">App key.</param>
        <param name="appSecret">App secret.</param>
        <param name="redirectUri">Redirect URI. Has to match redirect URI defined at open.weibo.com/apps (can be arbitrary).</param>
        <param name="authenticationBroker">Authentication result interface.</param>
        <param name="passwordManager">Password Manager interface, store the password.</param>
        <param name="storageManager">Storage Manager interface</param>
        <summary>
            Initialize underlying provider with relevant token information.
            </summary>
        <returns>Success or failure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Services.Weibo.WeiboService Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Toolkit.Services.Weibo.WeiboService Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Services.Weibo.WeiboService.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As WeiboService" />
      <MemberSignature Language="F#" Value="static member Instance : Microsoft.Toolkit.Services.Weibo.WeiboService" Usage="Microsoft.Toolkit.Services.Weibo.WeiboService.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Services.Weibo.WeiboService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets public singleton property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; LoginAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; LoginAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.LoginAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoginAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.LoginAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="weiboService.LoginAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Log user in to Weibo.
            </summary>
        <returns>Returns success of failure of login attempt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="weiboService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Logout is deprecated, please use LogoutAsync instead.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Logout is deprecated, please use LogoutAsync instead.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Log user out of Weibo.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogoutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LogoutAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LogoutAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.LogoutAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LogoutAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.LogoutAsync : unit -&gt; System.Threading.Tasks.Task" Usage="weiboService.LogoutAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Log user out of Weibo.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt; PostStatusAsync (string status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt; PostStatusAsync(string status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.PostStatusAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostStatusAsync (status As String) As Task(Of WeiboStatus)" />
      <MemberSignature Language="F#" Value="member this.PostStatusAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;" Usage="weiboService.PostStatusAsync status" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="status">The status information.</param>
        <summary>
            Post a status.
            Due to the restriction by Weibo API, your status must include a url which starts with "http"/"https".
            You can add a url to the list of secure domains in the basic information section on your Weibo application page.
            </summary>
        <returns>Returns the published weibo status.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostStatusAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt; PostStatusAsync (string status, System.IO.Stream picture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt; PostStatusAsync(string status, class System.IO.Stream picture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboService.PostStatusAsync(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostStatusAsync (status As String, picture As Stream) As Task(Of WeiboStatus)" />
      <MemberSignature Language="F#" Value="member this.PostStatusAsync : string * System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;" Usage="weiboService.PostStatusAsync (status, picture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.Weibo.WeiboStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
        <Parameter Name="picture" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="status">The status information.</param>
        <param name="picture">Picture to attach to the status.</param>
        <summary>
            Post a status with a picture.
            Due to the restriction by Weibo API, your status must include a url which starts with "http"/"https".
            You can add a url to the list of secure domains in the basic information section on your Weibo application page.
            </summary>
        <returns>Returns the published weibo status.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Services.Weibo.WeiboDataProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Toolkit.Services.Weibo.WeiboDataProvider Provider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Services.Weibo.WeiboService.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As WeiboDataProvider" />
      <MemberSignature Language="F#" Value="member this.Provider : Microsoft.Toolkit.Services.Weibo.WeiboDataProvider" Usage="Microsoft.Toolkit.Services.Weibo.WeiboService.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Services.Weibo.WeiboDataProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a reference to an instance of the underlying data provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public long? Uid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; Uid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Services.Weibo.WeiboService.Uid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uid As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.Uid : Nullable&lt;int64&gt;" Usage="Microsoft.Toolkit.Services.Weibo.WeiboService.Uid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current logged in user id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
