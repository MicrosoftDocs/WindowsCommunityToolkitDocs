<Type Name="WeiboParser&lt;T&gt;" FullName="Microsoft.Toolkit.Services.Weibo.WeiboParser&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class WeiboParser&lt;T&gt; : Microsoft.Toolkit.Parsers.IParser&lt;T&gt; where T : SchemaBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WeiboParser`1&lt;(class Microsoft.Toolkit.Parsers.SchemaBase) T&gt; extends System.Object implements class Microsoft.Toolkit.Parsers.IParser`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Services.Weibo.WeiboParser`1" />
  <TypeSignature Language="VB.NET" Value="Public Class WeiboParser(Of T)&#xA;Implements IParser(Of T)" />
  <TypeSignature Language="F#" Value="type WeiboParser&lt;'T (requires 'T :&gt; SchemaBase)&gt; = class&#xA;    interface IParser&lt;'T (requires 'T :&gt; SchemaBase)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>Microsoft.Toolkit.Parsers.SchemaBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Toolkit.Parsers.IParser&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">Type to parse in to.</typeparam>
    <summary>
            Twitter Parser.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WeiboParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboParser`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Toolkit.Parsers.IParser&lt;T&gt;.Parse">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;T&gt; IParser&lt;T&gt;.Parse (string data);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; Microsoft.Toolkit.Parsers.IParser&lt;T&gt;.Parse(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.Weibo.WeiboParser`1.Microsoft#Toolkit#Parsers#IParser&lt;T&gt;#Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function Parse (data As String) As IEnumerable(Of T) Implements IParser(Of T).Parse" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Toolkit.Parsers.IParser&lt;T&gt;.Parse : string -&gt; seq&lt;'T (requires 'T :&gt; Microsoft.Toolkit.Parsers.SchemaBase)&gt;&#xA;override this.Microsoft.Toolkit.Parsers.IParser&lt;T&gt;.Parse : string -&gt; seq&lt;'T (requires 'T :&gt; Microsoft.Toolkit.Parsers.SchemaBase)&gt;" Usage="weiboParser.Microsoft.Toolkit.Parsers.IParser&lt;T&gt;.Parse data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Toolkit.Parsers.IParser`1.Parse(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">Input string.</param>
        <summary>
            Parse string data into strongly typed list.
            </summary>
        <returns>List of strongly typed objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
