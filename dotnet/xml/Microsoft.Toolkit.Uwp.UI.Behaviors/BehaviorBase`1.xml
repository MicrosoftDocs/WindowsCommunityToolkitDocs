<Type Name="BehaviorBase&lt;T&gt;" FullName="Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class BehaviorBase&lt;T&gt; : Microsoft.Xaml.Interactivity.Behavior&lt;T&gt; where T : UIElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BehaviorBase`1&lt;(class Windows.UI.Xaml.UIElement) T&gt; extends Microsoft.Xaml.Interactivity.Behavior`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BehaviorBase(Of T)&#xA;Inherits Behavior(Of T)" />
  <TypeSignature Language="F#" Value="type BehaviorBase&lt;'T (requires 'T :&gt; UIElement)&gt; = class&#xA;    inherit Behavior&lt;'T (requires 'T :&gt; UIElement)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>Windows.UI.Xaml.UIElement</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.Xaml.Interactivity.Behavior&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type of the associated object.</typeparam>
    <summary>
            Base class for behaviors that solves 2 problems:
              1. Prevent duplicate initialization that can happen (prevent multiple OnAttached calls);
              2. Whenever <see cref="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.Initialize" /> initially fails, this method will subscribe to <see cref="E:Windows.UI.Xaml.FrameworkElement.SizeChanged" /> to allow lazy initialization.
            </summary>
    <remarks>
            For more info, see https://github.com/CommunityToolkit/WindowsCommunityToolkit/issues/1008.
            </remarks>
    <altmember cref="T:Microsoft.Xaml.Interactivity.Behavior`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BehaviorBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual bool Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Initialize () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; bool&#xA;override this.Initialize : unit -&gt; bool" Usage="behaviorBase.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initializes the behavior to the associated object.
            </summary>
        <returns>
          <c>true</c> if the initialization succeeded; otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="protected bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAttached : bool" Usage="Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase&lt;'T (requires 'T :&gt; Windows.UI.Xaml.UIElement)&gt;.IsAttached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this behavior is attached.
            </summary>
        <value>
          <c>true</c> if this behavior is attached; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssociatedObjectLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnAssociatedObjectLoaded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAssociatedObjectLoaded() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnAssociatedObjectLoaded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAssociatedObjectLoaded ()" />
      <MemberSignature Language="F#" Value="abstract member OnAssociatedObjectLoaded : unit -&gt; unit&#xA;override this.OnAssociatedObjectLoaded : unit -&gt; unit" Usage="behaviorBase.OnAssociatedObjectLoaded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called when the associated object has been loaded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssociatedObjectUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnAssociatedObjectUnloaded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAssociatedObjectUnloaded() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnAssociatedObjectUnloaded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAssociatedObjectUnloaded ()" />
      <MemberSignature Language="F#" Value="abstract member OnAssociatedObjectUnloaded : unit -&gt; unit&#xA;override this.OnAssociatedObjectUnloaded : unit -&gt; unit" Usage="behaviorBase.OnAssociatedObjectUnloaded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called when the associated object has been unloaded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttached">
      <MemberSignature Language="C#" Value="protected override void OnAttached ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAttached() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnAttached" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAttached ()" />
      <MemberSignature Language="F#" Value="override this.OnAttached : unit -&gt; unit" Usage="behaviorBase.OnAttached " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called after the behavior is attached to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
        <remarks>
            Override this to hook up functionality to the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDetaching">
      <MemberSignature Language="C#" Value="protected override void OnDetaching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDetaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.OnDetaching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDetaching ()" />
      <MemberSignature Language="F#" Value="override this.OnDetaching : unit -&gt; unit" Usage="behaviorBase.OnDetaching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called when the behavior is being detached from its <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" />.
            </summary>
        <remarks>
            Override this to unhook functionality from the <see cref="P:Microsoft.Xaml.Interactivity.Behavior.AssociatedObject" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninitialize">
      <MemberSignature Language="C#" Value="protected virtual bool Uninitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Uninitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Behaviors.BehaviorBase`1.Uninitialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Uninitialize () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Uninitialize : unit -&gt; bool&#xA;override this.Uninitialize : unit -&gt; bool" Usage="behaviorBase.Uninitialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Behaviors</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Uninitializes the behavior from the associated object.
            </summary>
        <returns>
          <c>true</c> if uninitialization succeeded; otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
