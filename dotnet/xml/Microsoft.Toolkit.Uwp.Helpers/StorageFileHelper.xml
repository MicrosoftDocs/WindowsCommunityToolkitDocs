<Type Name="StorageFileHelper" FullName="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper">
  <TypeSignature Language="C#" Value="public static class StorageFileHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StorageFileHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper" />
  <TypeSignature Language="VB.NET" Value="Public Module StorageFileHelper" />
  <TypeSignature Language="F#" Value="type StorageFileHelper = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class provides static helper methods for <see cref="T:Windows.Storage.StorageFile" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FileExistsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; FileExistsAsync (this Windows.Storage.StorageFolder folder, string fileName, bool isRecursive = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; FileExistsAsync(class Windows.Storage.StorageFolder folder, string fileName, bool isRecursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.FileExistsAsync(Windows.Storage.StorageFolder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FileExistsAsync (folder As StorageFolder, fileName As String, Optional isRecursive As Boolean = false) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member FileExistsAsync : Windows.Storage.StorageFolder * string * bool -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.FileExistsAsync (folder, fileName, isRecursive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="Windows.Storage.StorageFolder" RefType="this" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="isRecursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="folder">
            The <see cref="T:Windows.Storage.StorageFolder" /> to look for the file in.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> filename of the file to search for. Must include the file extension and is not case-sensitive.
            </param>
        <param name="isRecursive">
            The <see cref="T:System.Boolean" />, indicating if the subfolders should also be searched through.
            </param>
        <summary>
            Gets a value indicating whether a file exists in the current folder.
            </summary>
        <returns>
          <c>true</c> if the file exists; otherwise, <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileNameValid">
      <MemberSignature Language="C#" Value="public static bool IsFileNameValid (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFileNameValid(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.IsFileNameValid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileNameValid (fileName As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsFileNameValid : string -&gt; bool" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.IsFileNameValid fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The filename to test. Must include the file extension and is not case-sensitive.</param>
        <summary>
            Gets a value indicating whether a filename is correct or not using the Storage feature.
            </summary>
        <returns>
          <c>true</c> if the filename is valid; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFilePathValid">
      <MemberSignature Language="C#" Value="public static bool IsFilePathValid (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFilePathValid(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.IsFilePathValid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFilePathValid (filePath As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsFilePathValid : string -&gt; bool" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.IsFilePathValid filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">The file path to test. Must include the file extension and is not case-sensitive.</param>
        <summary>
            Gets a value indicating whether a file path is correct or not using the Storage feature.
            </summary>
        <returns>
          <c>true</c> if the file path is valid; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBytesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesAsync (this Windows.Storage.StorageFile file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesAsync(class Windows.Storage.StorageFile file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesAsync(Windows.Storage.StorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadBytesAsync (file As StorageFile) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="static member ReadBytesAsync : Windows.Storage.StorageFile -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesAsync file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Windows.Storage.StorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="file">
            The <see cref="T:Windows.Storage.StorageFile" />.
            </param>
        <summary>
            Gets an array of bytes from a <see cref="T:Windows.Storage.StorageFile" />.
            </summary>
        <returns>
            The stored <see cref="T:System.Byte" /> array.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBytesFromFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesFromFileAsync (this Windows.Storage.StorageFolder fileLocation, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesFromFileAsync(class Windows.Storage.StorageFolder fileLocation, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromFileAsync(Windows.Storage.StorageFolder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadBytesFromFileAsync (fileLocation As StorageFolder, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="static member ReadBytesFromFileAsync : Windows.Storage.StorageFolder * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromFileAsync (fileLocation, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileLocation">
            The <see cref="T:Windows.Storage.StorageFolder" /> to save the file in.
            </param>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets an array of bytes from a <see cref="T:Windows.Storage.StorageFile" /> located in the given <see cref="T:Windows.Storage.StorageFolder" />.
            </summary>
        <returns>
            The stored <see cref="T:System.Byte" /> array.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBytesFromKnownFoldersFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesFromKnownFoldersFileAsync (Windows.Storage.KnownFolderId knownFolderId, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesFromKnownFoldersFileAsync(valuetype Windows.Storage.KnownFolderId knownFolderId, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromKnownFoldersFileAsync(Windows.Storage.KnownFolderId,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBytesFromKnownFoldersFileAsync (knownFolderId As KnownFolderId, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="static member ReadBytesFromKnownFoldersFileAsync : Windows.Storage.KnownFolderId * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromKnownFoldersFileAsync (knownFolderId, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="knownFolderId" Type="Windows.Storage.KnownFolderId" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="knownFolderId">
            The well known folder ID to use.
            </param>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets an array of bytes from a <see cref="T:Windows.Storage.StorageFile" /> located in a well known folder.
            </summary>
        <returns>
            The stored <see cref="T:System.Byte" /> array.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBytesFromLocalCacheFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesFromLocalCacheFileAsync (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesFromLocalCacheFileAsync(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromLocalCacheFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBytesFromLocalCacheFileAsync (fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="static member ReadBytesFromLocalCacheFileAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromLocalCacheFileAsync fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets an array of bytes from a <see cref="T:Windows.Storage.StorageFile" /> located in the application local cache folder.
            </summary>
        <returns>
            The stored <see cref="T:System.Byte" /> array.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBytesFromLocalFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesFromLocalFileAsync (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesFromLocalFileAsync(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromLocalFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBytesFromLocalFileAsync (fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="static member ReadBytesFromLocalFileAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromLocalFileAsync fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets an array of bytes from a <see cref="T:Windows.Storage.StorageFile" /> located in the application local folder.
            </summary>
        <returns>
            The stored <see cref="T:System.Byte" /> array.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBytesFromPackagedFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;byte[]&gt; ReadBytesFromPackagedFileAsync (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBytesFromPackagedFileAsync(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromPackagedFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadBytesFromPackagedFileAsync (fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="F#" Value="static member ReadBytesFromPackagedFileAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadBytesFromPackagedFileAsync fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets an array of bytes from a <see cref="T:Windows.Storage.StorageFile" /> located in the application installation folder.
            </summary>
        <returns>
            The stored <see cref="T:System.Byte" /> array.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTextFromFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ReadTextFromFileAsync (this Windows.Storage.StorageFolder fileLocation, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ReadTextFromFileAsync(class Windows.Storage.StorageFolder fileLocation, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromFileAsync(Windows.Storage.StorageFolder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ReadTextFromFileAsync (fileLocation As StorageFolder, fileName As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="static member ReadTextFromFileAsync : Windows.Storage.StorageFolder * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromFileAsync (fileLocation, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileLocation">
            The <see cref="T:Windows.Storage.StorageFolder" /> to save the file in.
            </param>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets a string value from a <see cref="T:Windows.Storage.StorageFile" /> located in the given <see cref="T:Windows.Storage.StorageFolder" />.
            </summary>
        <returns>
            The stored <see cref="T:System.String" /> value.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTextFromKnownFoldersFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ReadTextFromKnownFoldersFileAsync (Windows.Storage.KnownFolderId knownFolderId, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ReadTextFromKnownFoldersFileAsync(valuetype Windows.Storage.KnownFolderId knownFolderId, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromKnownFoldersFileAsync(Windows.Storage.KnownFolderId,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTextFromKnownFoldersFileAsync (knownFolderId As KnownFolderId, fileName As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="static member ReadTextFromKnownFoldersFileAsync : Windows.Storage.KnownFolderId * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromKnownFoldersFileAsync (knownFolderId, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="knownFolderId" Type="Windows.Storage.KnownFolderId" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="knownFolderId">
            The well known folder ID to use.
            </param>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets a string value from a <see cref="T:Windows.Storage.StorageFile" /> located in a well known folder.
            </summary>
        <returns>
            The stored <see cref="T:System.String" /> value.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTextFromLocalCacheFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ReadTextFromLocalCacheFileAsync (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ReadTextFromLocalCacheFileAsync(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromLocalCacheFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTextFromLocalCacheFileAsync (fileName As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="static member ReadTextFromLocalCacheFileAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromLocalCacheFileAsync fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets a string value from a <see cref="T:Windows.Storage.StorageFile" /> located in the application local cache folder.
            </summary>
        <returns>
            The stored <see cref="T:System.String" /> value.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTextFromLocalFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ReadTextFromLocalFileAsync (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ReadTextFromLocalFileAsync(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromLocalFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTextFromLocalFileAsync (fileName As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="static member ReadTextFromLocalFileAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromLocalFileAsync fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets a string value from a <see cref="T:Windows.Storage.StorageFile" /> located in the application local folder.
            </summary>
        <returns>
            The stored <see cref="T:System.String" /> value.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTextFromPackagedFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;string&gt; ReadTextFromPackagedFileAsync (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;string&gt; ReadTextFromPackagedFileAsync(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromPackagedFileAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTextFromPackagedFileAsync (fileName As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="static member ReadTextFromPackagedFileAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.ReadTextFromPackagedFileAsync fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
            The relative <see cref="T:System.String" /> file path.
            </param>
        <summary>
            Gets a string value from a <see cref="T:Windows.Storage.StorageFile" /> located in the application installation folder.
            </summary>
        <returns>
            The stored <see cref="T:System.String" /> value.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the <paramref name="fileName" /> is null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBytesToFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteBytesToFileAsync (this Windows.Storage.StorageFolder fileLocation, byte[] bytes, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteBytesToFileAsync(class Windows.Storage.StorageFolder fileLocation, unsigned int8[] bytes, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToFileAsync(Windows.Storage.StorageFolder,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteBytesToFileAsync (fileLocation As StorageFolder, bytes As Byte(), fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteBytesToFileAsync : Windows.Storage.StorageFolder * byte[] * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToFileAsync (fileLocation, bytes, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="fileLocation">
            The <see cref="T:Windows.Storage.StorageFolder" /> to save the file in.
            </param>
        <param name="bytes">
            The <see cref="T:System.Byte" /> array to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves an array of bytes to a <see cref="T:Windows.Storage.StorageFile" /> in the given <see cref="T:Windows.Storage.StorageFolder" />.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the bytes.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBytesToKnownFolderFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteBytesToKnownFolderFileAsync (Windows.Storage.KnownFolderId knownFolderId, byte[] bytes, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteBytesToKnownFolderFileAsync(valuetype Windows.Storage.KnownFolderId knownFolderId, unsigned int8[] bytes, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToKnownFolderFileAsync(Windows.Storage.KnownFolderId,System.Byte[],System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteBytesToKnownFolderFileAsync (knownFolderId As KnownFolderId, bytes As Byte(), fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteBytesToKnownFolderFileAsync : Windows.Storage.KnownFolderId * byte[] * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToKnownFolderFileAsync (knownFolderId, bytes, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="knownFolderId" Type="Windows.Storage.KnownFolderId" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="knownFolderId">
            The well known folder ID to use.
            </param>
        <param name="bytes">
            The <see cref="T:System.Byte" /> array to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves an array of bytes to a <see cref="T:Windows.Storage.StorageFile" /> to well known folder/&gt;.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the bytes.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBytesToLocalCacheFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteBytesToLocalCacheFileAsync (byte[] bytes, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteBytesToLocalCacheFileAsync(unsigned int8[] bytes, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToLocalCacheFileAsync(System.Byte[],System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteBytesToLocalCacheFileAsync (bytes As Byte(), fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteBytesToLocalCacheFileAsync : byte[] * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToLocalCacheFileAsync (bytes, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="bytes">
            The <see cref="T:System.Byte" /> array to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves an array of bytes to a <see cref="T:Windows.Storage.StorageFile" /> to application local cache folder/&gt;.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the bytes.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBytesToLocalFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteBytesToLocalFileAsync (byte[] bytes, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteBytesToLocalFileAsync(unsigned int8[] bytes, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToLocalFileAsync(System.Byte[],System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteBytesToLocalFileAsync (bytes As Byte(), fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteBytesToLocalFileAsync : byte[] * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteBytesToLocalFileAsync (bytes, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="bytes">
            The <see cref="T:System.Byte" /> array to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves an array of bytes to a <see cref="T:Windows.Storage.StorageFile" /> to application local folder/&gt;.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the bytes.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTextToFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteTextToFileAsync (this Windows.Storage.StorageFolder fileLocation, string text, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteTextToFileAsync(class Windows.Storage.StorageFolder fileLocation, string text, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToFileAsync(Windows.Storage.StorageFolder,System.String,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function WriteTextToFileAsync (fileLocation As StorageFolder, text As String, fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteTextToFileAsync : Windows.Storage.StorageFolder * string * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToFileAsync (fileLocation, text, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileLocation" Type="Windows.Storage.StorageFolder" RefType="this" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="fileLocation">
            The <see cref="T:Windows.Storage.StorageFolder" /> to save the file in.
            </param>
        <param name="text">
            The <see cref="T:System.String" /> value to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves a string value to a <see cref="T:Windows.Storage.StorageFile" /> in the given <see cref="T:Windows.Storage.StorageFolder" />.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTextToKnownFolderFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteTextToKnownFolderFileAsync (Windows.Storage.KnownFolderId knownFolderId, string text, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteTextToKnownFolderFileAsync(valuetype Windows.Storage.KnownFolderId knownFolderId, string text, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToKnownFolderFileAsync(Windows.Storage.KnownFolderId,System.String,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteTextToKnownFolderFileAsync (knownFolderId As KnownFolderId, text As String, fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteTextToKnownFolderFileAsync : Windows.Storage.KnownFolderId * string * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToKnownFolderFileAsync (knownFolderId, text, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="knownFolderId" Type="Windows.Storage.KnownFolderId" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="knownFolderId">
            The well known folder ID to use.
            </param>
        <param name="text">
            The <see cref="T:System.String" /> value to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves a string value to a <see cref="T:Windows.Storage.StorageFile" /> in well known folder/&gt;.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTextToLocalCacheFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteTextToLocalCacheFileAsync (string text, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteTextToLocalCacheFileAsync(string text, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToLocalCacheFileAsync(System.String,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteTextToLocalCacheFileAsync (text As String, fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteTextToLocalCacheFileAsync : string * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToLocalCacheFileAsync (text, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="text">
            The <see cref="T:System.String" /> value to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves a string value to a <see cref="T:Windows.Storage.StorageFile" /> in application local cache folder/&gt;.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTextToLocalFileAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt; WriteTextToLocalFileAsync (string text, string fileName, Windows.Storage.CreationCollisionOption options = Windows.Storage.CreationCollisionOption.ReplaceExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Windows.Storage.StorageFile&gt; WriteTextToLocalFileAsync(string text, string fileName, valuetype Windows.Storage.CreationCollisionOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToLocalFileAsync(System.String,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteTextToLocalFileAsync (text As String, fileName As String, Optional options As CreationCollisionOption = Windows.Storage.CreationCollisionOption.ReplaceExisting) As Task(Of StorageFile)" />
      <MemberSignature Language="F#" Value="static member WriteTextToLocalFileAsync : string * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;" Usage="Microsoft.Toolkit.Uwp.Helpers.StorageFileHelper.WriteTextToLocalFileAsync (text, fileName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.Storage.StorageFile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="options" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="text">
            The <see cref="T:System.String" /> value to save to the file.
            </param>
        <param name="fileName">
            The <see cref="T:System.String" /> name for the file.
            </param>
        <param name="options">
            The creation collision options. Default is ReplaceExisting.
            </param>
        <summary>
            Saves a string value to a <see cref="T:Windows.Storage.StorageFile" /> in application local folder/&gt;.
            </summary>
        <returns>
            The saved <see cref="T:Windows.Storage.StorageFile" /> containing the text.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Exception thrown if the file location or file name are null or empty.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
