<Type Name="IDesktopWindowXamlSourceNative" FullName="Microsoft.Toolkit.Win32.UI.XamlHost.IDesktopWindowXamlSourceNative">
  <TypeSignature Language="C#" Value="public interface IDesktopWindowXamlSourceNative" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesktopWindowXamlSourceNative" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Win32.UI.XamlHost.IDesktopWindowXamlSourceNative" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesktopWindowXamlSourceNative" />
  <TypeSignature Language="F#" Value="type IDesktopWindowXamlSourceNative = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Forms.UI.XamlHost</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Win32.UI.XamlHost.Managed</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("3cbcf1bf-2f76-4e9c-96ab-e84b37972554")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("3cbcf1bf-2f76-4e9c-96ab-e84b37972554")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Enables access to native methods on DesktopWindowXamlSourceNative
            </summary>
    <remarks>
            Includes the method used to set the window handle of the <see cref="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource" /> instance.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AttachToWindow">
      <MemberSignature Language="C#" Value="public void AttachToWindow (IntPtr parentWnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachToWindow(native int parentWnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.XamlHost.IDesktopWindowXamlSourceNative.AttachToWindow(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachToWindow (parentWnd As IntPtr)" />
      <MemberSignature Language="F#" Value="abstract member AttachToWindow : nativeint -&gt; unit" Usage="iDesktopWindowXamlSourceNative.AttachToWindow parentWnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.XamlHost</AssemblyName>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Win32.UI.XamlHost.Managed</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentWnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="parentWnd">pointer to parent Wnd</param>
        <summary>
            Attaches the <see cref="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource" /> to a window using a window handle.
            </summary>
        <remarks>
            The associated window will be used to parent UWP XAML visuals, appearing
            as UWP XAML's logical render target.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr WindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int WindowHandle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.XamlHost.IDesktopWindowXamlSourceNative.WindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowHandle As IntPtr" />
      <MemberSignature Language="F#" Value="member this.WindowHandle : nativeint" Usage="Microsoft.Toolkit.Win32.UI.XamlHost.IDesktopWindowXamlSourceNative.WindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.XamlHost</AssemblyName>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.XamlHost</AssemblyName>
        <AssemblyVersion>5.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Win32.UI.XamlHost.Managed</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the handle associated with the <see cref="T:Windows.UI.Xaml.Hosting.DesktopWindowXamlSource" /> instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
