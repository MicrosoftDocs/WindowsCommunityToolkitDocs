<Type Name="MsalProvider" FullName="CommunityToolkit.Authentication.MsalProvider">
  <TypeSignature Language="C#" Value="public class MsalProvider : CommunityToolkit.Authentication.BaseProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MsalProvider extends CommunityToolkit.Authentication.BaseProvider" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Authentication.MsalProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class MsalProvider&#xA;Inherits BaseProvider" />
  <TypeSignature Language="F#" Value="type MsalProvider = class&#xA;    inherit BaseProvider" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.Authentication.BaseProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <a href="https://github.com/AzureAD/microsoft-authentication-library-for-dotnet">MSAL.NET</a> provider helper for tracking authentication state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsalProvider (Microsoft.Identity.Client.IPublicClientApplication client, string[] scopes = default, bool autoSignIn = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Identity.Client.IPublicClientApplication client, string[] scopes, bool autoSignIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.#ctor(Microsoft.Identity.Client.IPublicClientApplication,System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As IPublicClientApplication, Optional scopes As String() = Nothing, Optional autoSignIn As Boolean = true)" />
      <MemberSignature Language="F#" Value="new CommunityToolkit.Authentication.MsalProvider : Microsoft.Identity.Client.IPublicClientApplication * string[] * bool -&gt; CommunityToolkit.Authentication.MsalProvider" Usage="new CommunityToolkit.Authentication.MsalProvider (client, scopes, autoSignIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Identity.Client.IPublicClientApplication" />
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="autoSignIn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="client">Registered ClientId in Azure Acitve Directory.</param>
        <param name="scopes">List of Scopes to initially request.</param>
        <param name="autoSignIn">Determines whether the provider attempts to silently log in upon creation.</param>
        <summary>
            Initializes a new instance of the <see cref="T:CommunityToolkit.Authentication.MsalProvider" /> class using a configuration object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsalProvider (string clientId, string[] scopes = default, string redirectUri = default, bool autoSignIn = true, bool listWindowsWorkAndSchoolAccounts = true, string tenantId = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string clientId, string[] scopes, string redirectUri, bool autoSignIn, bool listWindowsWorkAndSchoolAccounts, string tenantId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.#ctor(System.String,System.String[],System.String,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientId As String, Optional scopes As String() = Nothing, Optional redirectUri As String = Nothing, Optional autoSignIn As Boolean = true, Optional listWindowsWorkAndSchoolAccounts As Boolean = true, Optional tenantId As String = Nothing)" />
      <MemberSignature Language="F#" Value="new CommunityToolkit.Authentication.MsalProvider : string * string[] * string * bool * bool * string -&gt; CommunityToolkit.Authentication.MsalProvider" Usage="new CommunityToolkit.Authentication.MsalProvider (clientId, scopes, redirectUri, autoSignIn, listWindowsWorkAndSchoolAccounts, tenantId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="redirectUri" Type="System.String" />
        <Parameter Name="autoSignIn" Type="System.Boolean" />
        <Parameter Name="listWindowsWorkAndSchoolAccounts" Type="System.Boolean" />
        <Parameter Name="tenantId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientId">Registered client id in Azure Acitve Directory.</param>
        <param name="redirectUri">RedirectUri for auth response.</param>
        <param name="scopes">List of Scopes to initially request.</param>
        <param name="autoSignIn">Determines whether the provider attempts to silently log in upon creation.</param>
        <param name="listWindowsWorkAndSchoolAccounts">Determines if organizational accounts should be enabled/disabled.</param>
        <param name="tenantId">Registered tenant id in Azure Active Directory.</param>
        <summary>
            Initializes a new instance of the <see cref="T:CommunityToolkit.Authentication.MsalProvider" /> class with default configuration values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.IAccount Account { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Identity.Client.IAccount Account" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Authentication.MsalProvider.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As IAccount" />
      <MemberSignature Language="F#" Value="member this.Account : Microsoft.Identity.Client.IAccount with get, set" Usage="CommunityToolkit.Authentication.MsalProvider.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.IAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the currently authenticated user account.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task AuthenticateRequestAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task AuthenticateRequestAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.AuthenticateRequestAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AuthenticateRequestAsync (request As HttpRequestMessage) As Task" />
      <MemberSignature Language="F#" Value="override this.AuthenticateRequestAsync : System.Net.Http.HttpRequestMessage -&gt; System.Threading.Tasks.Task" Usage="msalProvider.AuthenticateRequestAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">The request to authenticate.</param>
        <summary>
            Authenticate an outgoing request.
            </summary>
        <returns>A task upon completion.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public Microsoft.Identity.Client.IPublicClientApplication Client { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Identity.Client.IPublicClientApplication Client" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Authentication.MsalProvider.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As IPublicClientApplication" />
      <MemberSignature Language="F#" Value="member this.Client : Microsoft.Identity.Client.IPublicClientApplication with get, set" Usage="CommunityToolkit.Authentication.MsalProvider.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.IPublicClientApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the MSAL.NET Client used to authenticate the user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublicClientApplication">
      <MemberSignature Language="C#" Value="protected Microsoft.Identity.Client.IPublicClientApplication CreatePublicClientApplication (string clientId, string tenantId, string redirectUri, bool listWindowsWorkAndSchoolAccounts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.Identity.Client.IPublicClientApplication CreatePublicClientApplication(string clientId, string tenantId, string redirectUri, bool listWindowsWorkAndSchoolAccounts) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.CreatePublicClientApplication(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePublicClientApplication (clientId As String, tenantId As String, redirectUri As String, listWindowsWorkAndSchoolAccounts As Boolean) As IPublicClientApplication" />
      <MemberSignature Language="F#" Value="member this.CreatePublicClientApplication : string * string * string * bool -&gt; Microsoft.Identity.Client.IPublicClientApplication" Usage="msalProvider.CreatePublicClientApplication (clientId, tenantId, redirectUri, listWindowsWorkAndSchoolAccounts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Identity.Client.IPublicClientApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.String" />
        <Parameter Name="tenantId" Type="System.String" />
        <Parameter Name="redirectUri" Type="System.String" />
        <Parameter Name="listWindowsWorkAndSchoolAccounts" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clientId">Registered ClientId.</param>
        <param name="tenantId">An optional tenant id.</param>
        <param name="redirectUri">Redirect uri for auth response.</param>
        <param name="listWindowsWorkAndSchoolAccounts">Determines if organizational accounts should be supported.</param>
        <summary>
            Create an instance of <see cref="T:Microsoft.Identity.Client.PublicClientApplication" /> using the provided config and some default values.
            </summary>
        <returns>A new instance of <see cref="T:Microsoft.Identity.Client.PublicClientApplication" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAccountId">
      <MemberSignature Language="C#" Value="public override string CurrentAccountId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentAccountId" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Authentication.MsalProvider.CurrentAccountId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CurrentAccountId As String" />
      <MemberSignature Language="F#" Value="member this.CurrentAccountId : string" Usage="CommunityToolkit.Authentication.MsalProvider.CurrentAccountId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the id of the currently signed in user account.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetTokenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; GetTokenAsync (bool silentOnly = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetTokenAsync(bool silentOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.GetTokenAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenAsync (Optional silentOnly As Boolean = false) As Task(Of String)" />
      <MemberSignature Language="F#" Value="override this.GetTokenAsync : bool -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="msalProvider.GetTokenAsync silentOnly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="silentOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="silentOnly">Determines if the acquisition should be done without prompts to the user.</param>
        <summary>
            Retrieve a token for the authenticated user.
            </summary>
        <returns>A token string for the authenticated user.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetTokenWithScopesAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;string&gt; GetTokenWithScopesAsync (string[] scopes, bool silentOnly = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetTokenWithScopesAsync(string[] scopes, bool silentOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.GetTokenWithScopesAsync(System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTokenWithScopesAsync (scopes As String(), Optional silentOnly As Boolean = false) As Task(Of String)" />
      <MemberSignature Language="F#" Value="member this.GetTokenWithScopesAsync : string[] * bool -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="msalProvider.GetTokenWithScopesAsync (scopes, silentOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopes" Type="System.String[]" />
        <Parameter Name="silentOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scopes">An array of scopes to pass along with the Graph request.</param>
        <param name="silentOnly">A value to determine whether account broker UI should be shown, if required by MSAL.</param>
        <summary>
            Retrieve an authorization token using the provided scopes.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the result of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSAccountBrokerRedirectUriPrefix">
      <MemberSignature Language="C#" Value="public static readonly string MSAccountBrokerRedirectUriPrefix;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MSAccountBrokerRedirectUriPrefix" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.Authentication.MsalProvider.MSAccountBrokerRedirectUriPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MSAccountBrokerRedirectUriPrefix As String " />
      <MemberSignature Language="F#" Value=" staticval mutable MSAccountBrokerRedirectUriPrefix : string" Usage="CommunityToolkit.Authentication.MsalProvider.MSAccountBrokerRedirectUriPrefix" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A prefix value used to create the redirect URI value for use in AAD.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scopes">
      <MemberSignature Language="C#" Value="protected string[] Scopes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Scopes" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Authentication.MsalProvider.Scopes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Scopes As String()" />
      <MemberSignature Language="F#" Value="member this.Scopes : string[]" Usage="CommunityToolkit.Authentication.MsalProvider.Scopes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an array of scopes to use for accessing Graph resources.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SignInAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SignInAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.SignInAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignInAsync () As Task" />
      <MemberSignature Language="F#" Value="override this.SignInAsync : unit -&gt; System.Threading.Tasks.Task" Usage="msalProvider.SignInAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Sign in the user.
            </summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SignOutAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SignOutAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SignOutAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.SignOutAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignOutAsync () As Task" />
      <MemberSignature Language="F#" Value="override this.SignOutAsync : unit -&gt; System.Threading.Tasks.Task" Usage="msalProvider.SignOutAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Sign out the user.
            </summary>
        <returns>
          <see cref="T:System.Threading.Tasks.Task" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TrySilentSignInAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; TrySilentSignInAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TrySilentSignInAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Authentication.MsalProvider.TrySilentSignInAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TrySilentSignInAsync () As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="override this.TrySilentSignInAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="msalProvider.TrySilentSignInAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Authentication.Msal</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Tries to check if the user is logged in without prompting to login.
            </summary>
        <returns>A boolean indicating success or failure to sign in silently.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
