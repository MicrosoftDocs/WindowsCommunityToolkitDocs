<Type Name="PipelineBuilder" FullName="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder">
  <TypeSignature Language="C#" Value="public sealed class PipelineBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PipelineBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PipelineBuilder" />
  <TypeSignature Language="F#" Value="type PipelineBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see langword="class" /> that allows to build custom effects pipelines and create <see cref="T:Windows.UI.Composition.CompositionBrush" /> instances from them
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsBrush">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.XamlCompositionBrush AsBrush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.XamlCompositionBrush AsBrush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.AsBrush" />
      <MemberSignature Language="VB.NET" Value="Public Function AsBrush () As XamlCompositionBrush" />
      <MemberSignature Language="F#" Value="member this.AsBrush : unit -&gt; Microsoft.Toolkit.Uwp.UI.Media.XamlCompositionBrush" Usage="pipelineBuilder.AsBrush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.XamlCompositionBrush</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.XamlCompositionBrush" /> from the current effects pipeline
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.XamlCompositionBrush" /> instance ready to be displayed</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Windows.UI.Composition.SpriteVisual&gt; AttachAsync (Windows.UI.Xaml.UIElement target, Windows.UI.Xaml.UIElement reference = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Windows.UI.Composition.SpriteVisual&gt; AttachAsync(class Windows.UI.Xaml.UIElement target, class Windows.UI.Xaml.UIElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.AttachAsync(Windows.UI.Xaml.UIElement,Windows.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function AttachAsync (target As UIElement, Optional reference As UIElement = Nothing) As Task(Of SpriteVisual)" />
      <MemberSignature Language="F#" Value="member this.AttachAsync : Windows.UI.Xaml.UIElement * Windows.UI.Xaml.UIElement -&gt; System.Threading.Tasks.Task&lt;Windows.UI.Composition.SpriteVisual&gt;" Usage="pipelineBuilder.AttachAsync (target, reference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.UI.Composition.SpriteVisual&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Windows.UI.Xaml.UIElement" />
        <Parameter Name="reference" Type="Windows.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="target">The target <see cref="T:Windows.UI.Xaml.UIElement" /> to apply the brush to</param>
        <param name="reference">An optional <see cref="T:Windows.UI.Xaml.UIElement" /> to use to bind the size of the created brush</param>
        <summary>
            Builds the current pipeline and creates a <see cref="T:Windows.UI.Composition.SpriteVisual" /> that is applied to the input <see cref="T:Windows.UI.Xaml.UIElement" /></summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that returns the final <see cref="T:Windows.UI.Composition.SpriteVisual" /> instance to use</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blend (Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, Microsoft.Graphics.Canvas.Effects.BlendEffectMode mode, Microsoft.Toolkit.Uwp.UI.Media.Placement placement = Microsoft.Toolkit.Uwp.UI.Media.Placement.Foreground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blend(class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, valuetype Microsoft.Graphics.Canvas.Effects.BlendEffectMode mode, valuetype Microsoft.Toolkit.Uwp.UI.Media.Placement placement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Blend(Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder,Microsoft.Graphics.Canvas.Effects.BlendEffectMode,Microsoft.Toolkit.Uwp.UI.Media.Placement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Blend (pipeline As PipelineBuilder, mode As BlendEffectMode, Optional placement As Placement = Microsoft.Toolkit.Uwp.UI.Media.Placement.Foreground) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Blend : Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder * Microsoft.Graphics.Canvas.Effects.BlendEffectMode * Microsoft.Toolkit.Uwp.UI.Media.Placement -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Blend (pipeline, mode, placement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeline" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" />
        <Parameter Name="mode" Type="Microsoft.Graphics.Canvas.Effects.BlendEffectMode" />
        <Parameter Name="placement" Type="Microsoft.Toolkit.Uwp.UI.Media.Placement" />
      </Parameters>
      <Docs>
        <param name="pipeline">The second <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to blend</param>
        <param name="mode">The desired <see cref="T:Microsoft.Graphics.Canvas.Effects.BlendEffectMode" /> to use to blend the input pipelines</param>
        <param name="placement">The placemeht to use with the two input pipelines (the default is <see cref="F:Microsoft.Toolkit.Uwp.UI.Media.Placement.Foreground" />)</param>
        <summary>
            Blends two pipelines using a <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.BlendEffect" /> instance with the specified mode
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blur">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blur (float blur, Microsoft.Graphics.Canvas.Effects.EffectBorderMode mode = Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard, Microsoft.Graphics.Canvas.Effects.EffectOptimization optimization = Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blur(float32 blur, valuetype Microsoft.Graphics.Canvas.Effects.EffectBorderMode mode, valuetype Microsoft.Graphics.Canvas.Effects.EffectOptimization optimization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Blur(System.Single,Microsoft.Graphics.Canvas.Effects.EffectBorderMode,Microsoft.Graphics.Canvas.Effects.EffectOptimization)" />
      <MemberSignature Language="VB.NET" Value="Public Function Blur (blur As Single, Optional mode As EffectBorderMode = Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard, Optional optimization As EffectOptimization = Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Blur : single * Microsoft.Graphics.Canvas.Effects.EffectBorderMode * Microsoft.Graphics.Canvas.Effects.EffectOptimization -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Blur (blur, mode, optimization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blur" Type="System.Single" />
        <Parameter Name="mode" Type="Microsoft.Graphics.Canvas.Effects.EffectBorderMode" />
        <Parameter Name="optimization" Type="Microsoft.Graphics.Canvas.Effects.EffectOptimization" />
      </Parameters>
      <Docs>
        <param name="blur">The blur amount to apply</param>
        <param name="mode">The <see cref="T:Microsoft.Graphics.Canvas.Effects.EffectBorderMode" /> parameter for the effect, defaults to <see cref="F:Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard" /></param>
        <param name="optimization">The <see cref="T:Microsoft.Graphics.Canvas.Effects.EffectOptimization" /> parameter to use, defaults to <see cref="F:Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced" /></param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blur">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blur (float blur, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; animation, Microsoft.Graphics.Canvas.Effects.EffectBorderMode mode = Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard, Microsoft.Graphics.Canvas.Effects.EffectOptimization optimization = Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blur(float32 blur, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; animation, valuetype Microsoft.Graphics.Canvas.Effects.EffectBorderMode mode, valuetype Microsoft.Graphics.Canvas.Effects.EffectOptimization optimization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Blur(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@,Microsoft.Graphics.Canvas.Effects.EffectBorderMode,Microsoft.Graphics.Canvas.Effects.EffectOptimization)" />
      <MemberSignature Language="VB.NET" Value="Public Function Blur (blur As Single, ByRef animation As EffectAnimation(Of Single), Optional mode As EffectBorderMode = Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard, Optional optimization As EffectOptimization = Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Blur : single * EffectAnimation * Microsoft.Graphics.Canvas.Effects.EffectBorderMode * Microsoft.Graphics.Canvas.Effects.EffectOptimization -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Blur (blur, animation, mode, optimization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blur" Type="System.Single" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="mode" Type="Microsoft.Graphics.Canvas.Effects.EffectBorderMode" />
        <Parameter Name="optimization" Type="Microsoft.Graphics.Canvas.Effects.EffectOptimization" />
      </Parameters>
      <Docs>
        <param name="blur">The initial blur amount</param>
        <param name="animation">The optional blur animation for the effect</param>
        <param name="mode">The <see cref="T:Microsoft.Graphics.Canvas.Effects.EffectBorderMode" /> parameter for the effect, defaults to <see cref="F:Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard" /></param>
        <param name="optimization">The <see cref="T:Microsoft.Graphics.Canvas.Effects.EffectOptimization" /> parameter to use, defaults to <see cref="F:Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced" /></param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blur">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blur (float blur, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; setter, Microsoft.Graphics.Canvas.Effects.EffectBorderMode mode = Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard, Microsoft.Graphics.Canvas.Effects.EffectOptimization optimization = Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Blur(float32 blur, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; setter, valuetype Microsoft.Graphics.Canvas.Effects.EffectBorderMode mode, valuetype Microsoft.Graphics.Canvas.Effects.EffectOptimization optimization) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Blur(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@,Microsoft.Graphics.Canvas.Effects.EffectBorderMode,Microsoft.Graphics.Canvas.Effects.EffectOptimization)" />
      <MemberSignature Language="VB.NET" Value="Public Function Blur (blur As Single, ByRef setter As EffectSetter(Of Single), Optional mode As EffectBorderMode = Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard, Optional optimization As EffectOptimization = Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Blur : single * EffectSetter * Microsoft.Graphics.Canvas.Effects.EffectBorderMode * Microsoft.Graphics.Canvas.Effects.EffectOptimization -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Blur (blur, setter, mode, optimization)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blur" Type="System.Single" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="mode" Type="Microsoft.Graphics.Canvas.Effects.EffectBorderMode" />
        <Parameter Name="optimization" Type="Microsoft.Graphics.Canvas.Effects.EffectOptimization" />
      </Parameters>
      <Docs>
        <param name="blur">The initial blur amount</param>
        <param name="setter">The optional blur setter for the effect</param>
        <param name="mode">The <see cref="T:Microsoft.Graphics.Canvas.Effects.EffectBorderMode" /> parameter for the effect, defaults to <see cref="F:Microsoft.Graphics.Canvas.Effects.EffectBorderMode.Hard" /></param>
        <param name="optimization">The <see cref="T:Microsoft.Graphics.Canvas.Effects.EffectOptimization" /> parameter to use, defaults to <see cref="F:Microsoft.Graphics.Canvas.Effects.EffectOptimization.Balanced" /></param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Windows.UI.Composition.CompositionBrush&gt; BuildAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Windows.UI.Composition.CompositionBrush&gt; BuildAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.BuildAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildAsync () As Task(Of CompositionBrush)" />
      <MemberSignature Language="F#" Value="member this.BuildAsync : unit -&gt; System.Threading.Tasks.Task&lt;Windows.UI.Composition.CompositionBrush&gt;" Usage="pipelineBuilder.BuildAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Windows.UI.Composition.CompositionBrush&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Builds a <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance from the current effects pipeline
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that returns the final <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance to use</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossFade">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade (Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float factor = 0.5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade(class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float32 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.CrossFade(Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossFade (pipeline As PipelineBuilder, Optional factor As Single = 0.5) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.CrossFade : Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder * single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.CrossFade (pipeline, factor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeline" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" />
        <Parameter Name="factor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pipeline">The second <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to cross fade</param>
        <param name="factor">The cross fade factor to blend the input effects (default is 0.5, must be in the [0, 1] range)</param>
        <summary>
            Cross fades two pipelines using an <see cref="T:Microsoft.Graphics.Canvas.Effects.CrossFadeEffect" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossFade">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade (Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float factor, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade(class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float32 factor, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.CrossFade(Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossFade (pipeline As PipelineBuilder, factor As Single, ByRef animation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.CrossFade : Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder * single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.CrossFade (pipeline, factor, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeline" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" />
        <Parameter Name="factor" Type="System.Single" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pipeline">The second <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to cross fade</param>
        <param name="factor">The cross fade factor to blend the input effects (should be in the [0, 1] range)</param>
        <param name="animation">The optional blur animation for the effect</param>
        <summary>
            Cross fades two pipelines using an <see cref="T:Microsoft.Graphics.Canvas.Effects.CrossFadeEffect" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossFade">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade (Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float factor, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade(class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float32 factor, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.CrossFade(Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossFade (pipeline As PipelineBuilder, factor As Single, ByRef setter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.CrossFade : Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder * single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.CrossFade (pipeline, factor, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeline" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" />
        <Parameter Name="factor" Type="System.Single" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pipeline">The second <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to cross fade</param>
        <param name="factor">The cross fade factor to blend the input effects (should be in the [0, 1] range)</param>
        <param name="setter">The optional blur setter for the effect</param>
        <summary>
            Cross fades two pipelines using an <see cref="T:Microsoft.Graphics.Canvas.Effects.CrossFadeEffect" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossFade">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade (Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float factor, out string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder CrossFade(class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder pipeline, float32 factor, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.CrossFade(Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder,System.Single,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossFade (pipeline As PipelineBuilder, factor As Single, ByRef target As String) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.CrossFade : Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder * single * string -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.CrossFade (pipeline, factor, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pipeline" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="factor" Type="System.Single" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="target" Type="System.String" RefType="out" Index="2" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
      </Parameters>
      <Docs>
        <param name="pipeline">The second <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to cross fade</param>
        <param name="factor">The cross fade factor to blend the input effects (should be in the [0, 1] range)</param>
        <param name="target">The target property to animate the resulting effect.</param>
        <summary>
            Cross fades two pipelines using an <see cref="T:Microsoft.Graphics.Canvas.Effects.CrossFadeEffect" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Effect (Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; factory, System.Collections.Generic.IEnumerable&lt;string&gt; animations = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Effect(class System.Func`2&lt;class Windows.Graphics.Effects.IGraphicsEffectSource, class System.Threading.Tasks.Task`1&lt;class Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; factory, class System.Collections.Generic.IEnumerable`1&lt;string&gt; animations, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Effect(System.Func{Windows.Graphics.Effects.IGraphicsEffectSource,System.Threading.Tasks.Task{Windows.Graphics.Effects.IGraphicsEffectSource}},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Function Effect (factory As Func(Of IGraphicsEffectSource, Task(Of IGraphicsEffectSource)), Optional animations As IEnumerable(Of String) = Nothing, Optional initializers As IEnumerable(Of BrushProvider) = Nothing) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Effect : Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource, System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; * seq&lt;string&gt; * seq&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Effect (factory, animations, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt;" />
        <Parameter Name="animations" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">An asynchronous <see cref="T:System.Func`2" /> that takes the current <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance and produces a new effect to display</param>
        <param name="animations">The list of optional animatable properties in the returned effect</param>
        <param name="initializers">The list of source parameters that require deferred initialization (see <see cref="T:Windows.UI.Composition.CompositionEffectSourceParameter" /> for more info)</param>
        <summary>
            Applies a custom effect to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Effect (Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource&gt; factory, System.Collections.Generic.IEnumerable&lt;string&gt; animations = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Effect(class System.Func`2&lt;class Windows.Graphics.Effects.IGraphicsEffectSource, class Windows.Graphics.Effects.IGraphicsEffectSource&gt; factory, class System.Collections.Generic.IEnumerable`1&lt;string&gt; animations, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Effect(System.Func{Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Function Effect (factory As Func(Of IGraphicsEffectSource, IGraphicsEffectSource), Optional animations As IEnumerable(Of String) = Nothing, Optional initializers As IEnumerable(Of BrushProvider) = Nothing) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Effect : Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource, Windows.Graphics.Effects.IGraphicsEffectSource&gt; * seq&lt;string&gt; * seq&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Effect (factory, animations, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource&gt;" />
        <Parameter Name="animations" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">A <see cref="T:System.Func`2" /> that takes the current <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance and produces a new effect to display</param>
        <param name="animations">The list of optional animatable properties in the returned effect</param>
        <param name="initializers">The list of source parameters that require deferred initialization (see <see cref="T:Windows.UI.Composition.CompositionEffectSourceParameter" /> for more info)</param>
        <summary>
            Applies a custom effect to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exposure">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure (float amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure(float32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Exposure(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exposure (amount As Single) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Exposure : single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Exposure amount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="amount">The amount of exposure to apply over the current effect (should be in the [-2, 2] range)</param>
        <summary>
            Applies an exposure effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exposure">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure (float amount, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure(float32 amount, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Exposure(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exposure (amount As Single, ByRef animation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Exposure : single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Exposure (amount, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="System.Single" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="amount">The initial exposure of tint to apply over the current effect (should be in the [-2, 2] range)</param>
        <param name="animation">The optional amount animation for the effect</param>
        <summary>
            Applies an exposure effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exposure">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure (float amount, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure(float32 amount, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Exposure(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exposure (amount As Single, ByRef setter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Exposure : single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Exposure (amount, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="System.Single" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="amount">The initial exposure of tint to apply over the current effect (should be in the [-2, 2] range)</param>
        <param name="setter">The optional amount setter for the effect</param>
        <summary>
            Applies an exposure effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exposure">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure (float amount, out string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Exposure(float32 amount, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Exposure(System.Single,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exposure (amount As Single, ByRef target As String) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Exposure : single * string -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Exposure (amount, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="System.Single" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="target" Type="System.String" RefType="out" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
      </Parameters>
      <Docs>
        <param name="amount">The initial exposure of tint to apply over the current effect (should be in the [-2, 2] range)</param>
        <param name="target">The target property to animate the resulting effect.</param>
        <summary>
            Applies an exposure effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBackdrop">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdrop ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdrop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdrop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBackdrop () As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromBackdrop : unit -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdrop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the <see cref="T:Windows.UI.Composition.CompositionBrush" /> returned by <see cref="M:Windows.UI.Composition.Compositor.CreateBackdropBrush" /></summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBackdropAcrylic">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdropAcrylic (Windows.UI.Color tintColor, float tintOpacity, float blurAmount, Uri noiseUri, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdropAcrylic(valuetype Windows.UI.Color tintColor, float32 tintOpacity, float32 blurAmount, class System.Uri noiseUri, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdropAcrylic(Windows.UI.Color,System.Single,System.Single,System.Uri,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBackdropAcrylic (tintColor As Color, tintOpacity As Single, blurAmount As Single, noiseUri As Uri, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromBackdropAcrylic : Windows.UI.Color * single * single * Uri * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdropAcrylic (tintColor, tintOpacity, blurAmount, noiseUri, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="Windows.UI.Color" />
        <Parameter Name="tintOpacity" Type="System.Single" />
        <Parameter Name="blurAmount" Type="System.Single" />
        <Parameter Name="noiseUri" Type="System.Uri" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="tintColor">The tint color to use</param>
        <param name="tintOpacity">The amount of tint to apply over the current effect (must be in the [0, 1] range)</param>
        <param name="blurAmount">The amount of blur to apply to the acrylic brush</param>
        <param name="noiseUri">The <see cref="T:System.Uri" /> for the noise texture to load for the acrylic effect</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Returns a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance that implements the in-app backdrop acrylic effect
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBackdropAcrylic">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdropAcrylic (Windows.UI.Color tintColor, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt; tintAnimation, float tintOpacity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; tintOpacityAnimation, float blurAmount, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; blurAmountAnimation, Uri noiseUri, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdropAcrylic(valuetype Windows.UI.Color tintColor, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;valuetype Windows.UI.Color&gt;&amp; tintAnimation, float32 tintOpacity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; tintOpacityAnimation, float32 blurAmount, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; blurAmountAnimation, class System.Uri noiseUri, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdropAcrylic(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{Windows.UI.Color}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@,System.Uri,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBackdropAcrylic (tintColor As Color, ByRef tintAnimation As EffectAnimation(Of Color), tintOpacity As Single, ByRef tintOpacityAnimation As EffectAnimation(Of Single), blurAmount As Single, ByRef blurAmountAnimation As EffectAnimation(Of Single), noiseUri As Uri, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromBackdropAcrylic : Windows.UI.Color * EffectAnimation * single * EffectAnimation * single * EffectAnimation * Uri * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdropAcrylic (tintColor, tintAnimation, tintOpacity, tintOpacityAnimation, blurAmount, blurAmountAnimation, noiseUri, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="Windows.UI.Color" />
        <Parameter Name="tintAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt;" RefType="out" />
        <Parameter Name="tintOpacity" Type="System.Single" />
        <Parameter Name="tintOpacityAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="blurAmount" Type="System.Single" />
        <Parameter Name="blurAmountAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="noiseUri" Type="System.Uri" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="tintColor">The tint color to use</param>
        <param name="tintAnimation">The optional tint color animation for the effect</param>
        <param name="tintOpacity">The amount of tint to apply over the current effect</param>
        <param name="tintOpacityAnimation">The optional tint mix animation for the effect</param>
        <param name="blurAmount">The amount of blur to apply to the acrylic brush</param>
        <param name="blurAmountAnimation">The optional blur animation for the effect</param>
        <param name="noiseUri">The <see cref="T:System.Uri" /> for the noise texture to load for the acrylic effect</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Returns a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance that implements the in-app backdrop acrylic effect
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBackdropAcrylic">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdropAcrylic (Windows.UI.Color tintColor, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt; tintColorSetter, float tintOpacity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; tintOpacitySetter, float blurAmount, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; blurAmountSetter, Uri noiseUri, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBackdropAcrylic(valuetype Windows.UI.Color tintColor, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;valuetype Windows.UI.Color&gt;&amp; tintColorSetter, float32 tintOpacity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; tintOpacitySetter, float32 blurAmount, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; blurAmountSetter, class System.Uri noiseUri, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdropAcrylic(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{Windows.UI.Color}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@,System.Uri,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBackdropAcrylic (tintColor As Color, ByRef tintColorSetter As EffectSetter(Of Color), tintOpacity As Single, ByRef tintOpacitySetter As EffectSetter(Of Single), blurAmount As Single, ByRef blurAmountSetter As EffectSetter(Of Single), noiseUri As Uri, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromBackdropAcrylic : Windows.UI.Color * EffectSetter * single * EffectSetter * single * EffectSetter * Uri * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBackdropAcrylic (tintColor, tintColorSetter, tintOpacity, tintOpacitySetter, blurAmount, blurAmountSetter, noiseUri, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="Windows.UI.Color" />
        <Parameter Name="tintColorSetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt;" RefType="out" />
        <Parameter Name="tintOpacity" Type="System.Single" />
        <Parameter Name="tintOpacitySetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="blurAmount" Type="System.Single" />
        <Parameter Name="blurAmountSetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="noiseUri" Type="System.Uri" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="tintColor">The tint color to use</param>
        <param name="tintColorSetter">The optional tint color setter for the effect</param>
        <param name="tintOpacity">The amount of tint to apply over the current effect</param>
        <param name="tintOpacitySetter">The optional tint mix setter for the effect</param>
        <param name="blurAmount">The amount of blur to apply to the acrylic brush</param>
        <param name="blurAmountSetter">The optional blur setter for the effect</param>
        <param name="noiseUri">The <see cref="T:System.Uri" /> for the noise texture to load for the acrylic effect</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Returns a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance that implements the in-app backdrop acrylic effect
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBrush">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBrush (Func&lt;System.Threading.Tasks.Task&lt;Windows.UI.Composition.CompositionBrush&gt;&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBrush(class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;class Windows.UI.Composition.CompositionBrush&gt;&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBrush(System.Func{System.Threading.Tasks.Task{Windows.UI.Composition.CompositionBrush}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBrush (factory As Func(Of Task(Of CompositionBrush))) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromBrush : Func&lt;System.Threading.Tasks.Task&lt;Windows.UI.Composition.CompositionBrush&gt;&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBrush factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;System.Threading.Tasks.Task&lt;Windows.UI.Composition.CompositionBrush&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">A <see cref="T:System.Func`1" /> that asynchronously returns a <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance to start the pipeline</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the input <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBrush">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBrush (Func&lt;Windows.UI.Composition.CompositionBrush&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBrush(class System.Func`1&lt;class Windows.UI.Composition.CompositionBrush&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBrush(System.Func{Windows.UI.Composition.CompositionBrush})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBrush (factory As Func(Of CompositionBrush)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromBrush : Func&lt;Windows.UI.Composition.CompositionBrush&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBrush factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Windows.UI.Composition.CompositionBrush&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">A <see cref="T:System.Func`1" /> that synchronously returns a <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance to start the pipeline</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the input <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromBrush">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBrush (Windows.UI.Composition.CompositionBrush brush);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromBrush(class Windows.UI.Composition.CompositionBrush brush) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBrush(Windows.UI.Composition.CompositionBrush)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBrush (brush As CompositionBrush) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromBrush : Windows.UI.Composition.CompositionBrush -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromBrush brush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="Windows.UI.Composition.CompositionBrush" />
      </Parameters>
      <Docs>
        <param name="brush">A <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance to start the pipeline</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the input <see cref="T:Windows.UI.Composition.CompositionBrush" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromColor">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromColor (Windows.UI.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromColor(valuetype Windows.UI.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromColor(Windows.UI.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromColor (color As Color) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromColor : Windows.UI.Color -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
      </Parameters>
      <Docs>
        <param name="color">The desired color for the initial <see cref="T:Windows.UI.Composition.CompositionBrush" /></param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a solid <see cref="T:Windows.UI.Composition.CompositionBrush" /> with the specified color
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromColor">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromColor (Windows.UI.Color color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromColor(valuetype Windows.UI.Color color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;valuetype Windows.UI.Color&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromColor(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{Windows.UI.Color}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromColor (color As Color, ByRef animation As EffectAnimation(Of Color)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromColor : Windows.UI.Color * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromColor (color, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The desired color for the initial <see cref="T:Windows.UI.Composition.CompositionBrush" /></param>
        <param name="animation">The optional color animation for the effect</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a solid <see cref="T:Windows.UI.Composition.CompositionBrush" /> with the specified color
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromColor">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromColor (Windows.UI.Color color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromColor(valuetype Windows.UI.Color color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;valuetype Windows.UI.Color&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromColor(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{Windows.UI.Color}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromColor (color As Color, ByRef setter As EffectSetter(Of Color)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromColor : Windows.UI.Color * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromColor (color, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The desired color for the initial <see cref="T:Windows.UI.Composition.CompositionBrush" /></param>
        <param name="setter">The optional color setter for the effect</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a solid <see cref="T:Windows.UI.Composition.CompositionBrush" /> with the specified color
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromEffect">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromEffect (Func&lt;System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromEffect(class System.Func`1&lt;class System.Threading.Tasks.Task`1&lt;class Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromEffect(System.Func{System.Threading.Tasks.Task{Windows.Graphics.Effects.IGraphicsEffectSource}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromEffect (factory As Func(Of Task(Of IGraphicsEffectSource))) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromEffect : Func&lt;System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromEffect factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">A <see cref="T:System.Func`1" /> that asynchronously returns a <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance to start the pipeline</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the input <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromEffect">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromEffect (Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromEffect(class System.Func`1&lt;class Windows.Graphics.Effects.IGraphicsEffectSource&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromEffect(System.Func{Windows.Graphics.Effects.IGraphicsEffectSource})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromEffect (factory As Func(Of IGraphicsEffectSource)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromEffect : Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromEffect factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">A <see cref="T:System.Func`1" /> that synchronously returns a <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance to start the pipeline</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the input <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromEffect">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromEffect (Windows.Graphics.Effects.IGraphicsEffectSource effect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromEffect(class Windows.Graphics.Effects.IGraphicsEffectSource effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromEffect(Windows.Graphics.Effects.IGraphicsEffectSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromEffect (effect As IGraphicsEffectSource) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromEffect : Windows.Graphics.Effects.IGraphicsEffectSource -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromEffect effect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="Windows.Graphics.Effects.IGraphicsEffectSource" />
      </Parameters>
      <Docs>
        <param name="effect">A <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance to start the pipeline</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the input <see cref="T:Windows.Graphics.Effects.IGraphicsEffectSource" /> instance
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdrColor">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHdrColor (System.Numerics.Vector4 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHdrColor(valuetype System.Numerics.Vector4 color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHdrColor(System.Numerics.Vector4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdrColor (color As Vector4) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromHdrColor : System.Numerics.Vector4 -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHdrColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Numerics.Vector4" />
      </Parameters>
      <Docs>
        <param name="color">The desired color for the initial <see cref="T:Windows.UI.Composition.CompositionBrush" /></param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a solid <see cref="T:Windows.UI.Composition.CompositionBrush" /> with the specified color
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdrColor">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHdrColor (System.Numerics.Vector4 color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Numerics.Vector4&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHdrColor(valuetype System.Numerics.Vector4 color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;valuetype System.Numerics.Vector4&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHdrColor(System.Numerics.Vector4,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Numerics.Vector4}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdrColor (color As Vector4, ByRef animation As EffectAnimation(Of Vector4)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromHdrColor : System.Numerics.Vector4 * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHdrColor (color, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Numerics.Vector4" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Numerics.Vector4&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The desired color for the initial <see cref="T:Windows.UI.Composition.CompositionBrush" /></param>
        <param name="animation">The optional color animation for the effect</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a solid <see cref="T:Windows.UI.Composition.CompositionBrush" /> with the specified color
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdrColor">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHdrColor (System.Numerics.Vector4 color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Numerics.Vector4&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHdrColor(valuetype System.Numerics.Vector4 color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;valuetype System.Numerics.Vector4&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHdrColor(System.Numerics.Vector4,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Numerics.Vector4}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdrColor (color As Vector4, ByRef setter As EffectSetter(Of Vector4)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromHdrColor : System.Numerics.Vector4 * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHdrColor (color, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Numerics.Vector4" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Numerics.Vector4&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The desired color for the initial <see cref="T:Windows.UI.Composition.CompositionBrush" /></param>
        <param name="setter">The optional color setter for the effect</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a solid <see cref="T:Windows.UI.Composition.CompositionBrush" /> with the specified color
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHostBackdrop">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdrop ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdrop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdrop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHostBackdrop () As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromHostBackdrop : unit -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdrop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the <see cref="T:Windows.UI.Composition.CompositionBrush" /> returned by <see cref="M:Windows.UI.Composition.Compositor.CreateHostBackdropBrush" /></summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHostBackdropAcrylic">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdropAcrylic (Windows.UI.Color tintColor, float tintOpacity, Uri noiseUri, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdropAcrylic(valuetype Windows.UI.Color tintColor, float32 tintOpacity, class System.Uri noiseUri, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdropAcrylic(Windows.UI.Color,System.Single,System.Uri,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHostBackdropAcrylic (tintColor As Color, tintOpacity As Single, noiseUri As Uri, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromHostBackdropAcrylic : Windows.UI.Color * single * Uri * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdropAcrylic (tintColor, tintOpacity, noiseUri, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="Windows.UI.Color" />
        <Parameter Name="tintOpacity" Type="System.Single" />
        <Parameter Name="noiseUri" Type="System.Uri" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="tintColor">The tint color to use</param>
        <param name="tintOpacity">The amount of tint to apply over the current effect</param>
        <param name="noiseUri">The <see cref="T:System.Uri" /> for the noise texture to load for the acrylic effect</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Returns a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance that implements the host backdrop acrylic effect
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHostBackdropAcrylic">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdropAcrylic (Windows.UI.Color tintColor, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt; tintColorAnimation, float tintOpacity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; tintOpacityAnimation, Uri noiseUri, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdropAcrylic(valuetype Windows.UI.Color tintColor, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;valuetype Windows.UI.Color&gt;&amp; tintColorAnimation, float32 tintOpacity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; tintOpacityAnimation, class System.Uri noiseUri, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdropAcrylic(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{Windows.UI.Color}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@,System.Uri,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHostBackdropAcrylic (tintColor As Color, ByRef tintColorAnimation As EffectAnimation(Of Color), tintOpacity As Single, ByRef tintOpacityAnimation As EffectAnimation(Of Single), noiseUri As Uri, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromHostBackdropAcrylic : Windows.UI.Color * EffectAnimation * single * EffectAnimation * Uri * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdropAcrylic (tintColor, tintColorAnimation, tintOpacity, tintOpacityAnimation, noiseUri, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="Windows.UI.Color" />
        <Parameter Name="tintColorAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt;" RefType="out" />
        <Parameter Name="tintOpacity" Type="System.Single" />
        <Parameter Name="tintOpacityAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="noiseUri" Type="System.Uri" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="tintColor">The tint color to use</param>
        <param name="tintColorAnimation">The optional tint color animation for the effect</param>
        <param name="tintOpacity">The amount of tint to apply over the current effect</param>
        <param name="tintOpacityAnimation">The optional tint mix animation for the effect</param>
        <param name="noiseUri">The <see cref="T:System.Uri" /> for the noise texture to load for the acrylic effect</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Returns a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance that implements the host backdrop acrylic effect
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHostBackdropAcrylic">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdropAcrylic (Windows.UI.Color tintColor, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt; tintColorSetter, float tintOpacity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; tintOpacitySetter, Uri noiseUri, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromHostBackdropAcrylic(valuetype Windows.UI.Color tintColor, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;valuetype Windows.UI.Color&gt;&amp; tintColorSetter, float32 tintOpacity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; tintOpacitySetter, class System.Uri noiseUri, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdropAcrylic(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{Windows.UI.Color}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@,System.Uri,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHostBackdropAcrylic (tintColor As Color, ByRef tintColorSetter As EffectSetter(Of Color), tintOpacity As Single, ByRef tintOpacitySetter As EffectSetter(Of Single), noiseUri As Uri, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromHostBackdropAcrylic : Windows.UI.Color * EffectSetter * single * EffectSetter * Uri * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromHostBackdropAcrylic (tintColor, tintColorSetter, tintOpacity, tintOpacitySetter, noiseUri, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintColor" Type="Windows.UI.Color" />
        <Parameter Name="tintColorSetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt;" RefType="out" />
        <Parameter Name="tintOpacity" Type="System.Single" />
        <Parameter Name="tintOpacitySetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="noiseUri" Type="System.Uri" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="tintColor">The tint color to use</param>
        <param name="tintColorSetter">The optional tint color setter for the effect</param>
        <param name="tintOpacity">The amount of tint to apply over the current effect</param>
        <param name="tintOpacitySetter">The optional tint mix setter for the effect</param>
        <param name="noiseUri">The <see cref="T:System.Uri" /> for the noise texture to load for the acrylic effect</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Returns a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance that implements the host backdrop acrylic effect
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImage">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromImage (string relativePath, Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromImage(string relativePath, valuetype Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromImage(System.String,Microsoft.Toolkit.Uwp.UI.Media.DpiMode,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromImage (relativePath As String, Optional dpiMode As DpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromImage : string * Microsoft.Toolkit.Uwp.UI.Media.DpiMode * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromImage (relativePath, dpiMode, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativePath" Type="System.String" />
        <Parameter Name="dpiMode" Type="Microsoft.Toolkit.Uwp.UI.Media.DpiMode" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="relativePath">The relative path for the image to load (eg. "/Assets/image.png")</param>
        <param name="dpiMode">Indicates the desired DPI mode to use when loading the image</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a Win2D image
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImage">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromImage (Uri uri, Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromImage(class System.Uri uri, valuetype Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromImage(System.Uri,Microsoft.Toolkit.Uwp.UI.Media.DpiMode,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromImage (uri As Uri, Optional dpiMode As DpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromImage : Uri * Microsoft.Toolkit.Uwp.UI.Media.DpiMode * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromImage (uri, dpiMode, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="dpiMode" Type="Microsoft.Toolkit.Uwp.UI.Media.DpiMode" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="uri">The path for the image to load</param>
        <param name="dpiMode">Indicates the desired DPI mode to use when loading the image</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a Win2D image
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTiles">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromTiles (string relativePath, Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromTiles(string relativePath, valuetype Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromTiles(System.String,Microsoft.Toolkit.Uwp.UI.Media.DpiMode,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTiles (relativePath As String, Optional dpiMode As DpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromTiles : string * Microsoft.Toolkit.Uwp.UI.Media.DpiMode * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromTiles (relativePath, dpiMode, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativePath" Type="System.String" />
        <Parameter Name="dpiMode" Type="Microsoft.Toolkit.Uwp.UI.Media.DpiMode" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="relativePath">The relative path for the image to load (eg. "/Assets/image.png")</param>
        <param name="dpiMode">Indicates the desired DPI mode to use when loading the image</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a Win2D image tiled to cover the available space
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTiles">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromTiles (Uri uri, Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromTiles(class System.Uri uri, valuetype Microsoft.Toolkit.Uwp.UI.Media.DpiMode dpiMode, valuetype Microsoft.Toolkit.Uwp.UI.Media.CacheMode cacheMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromTiles(System.Uri,Microsoft.Toolkit.Uwp.UI.Media.DpiMode,Microsoft.Toolkit.Uwp.UI.Media.CacheMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTiles (uri As Uri, Optional dpiMode As DpiMode = Microsoft.Toolkit.Uwp.UI.Media.DpiMode.DisplayDpiWith96AsLowerBound, Optional cacheMode As CacheMode = Microsoft.Toolkit.Uwp.UI.Media.CacheMode.Default) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromTiles : Uri * Microsoft.Toolkit.Uwp.UI.Media.DpiMode * Microsoft.Toolkit.Uwp.UI.Media.CacheMode -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromTiles (uri, dpiMode, cacheMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="dpiMode" Type="Microsoft.Toolkit.Uwp.UI.Media.DpiMode" />
        <Parameter Name="cacheMode" Type="Microsoft.Toolkit.Uwp.UI.Media.CacheMode" />
      </Parameters>
      <Docs>
        <param name="uri">The path for the image to load</param>
        <param name="dpiMode">Indicates the desired DPI mode to use when loading the image</param>
        <param name="cacheMode">The cache mode to use to load the image</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from a Win2D image tiled to cover the available space
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromUIElement">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromUIElement (Windows.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder FromUIElement(class Windows.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromUIElement(Windows.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromUIElement (element As UIElement) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="static member FromUIElement : Windows.UI.Xaml.UIElement -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.FromUIElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Windows.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">The source <see cref="T:Windows.UI.Xaml.UIElement" /> to use to create the pipeline</param>
        <summary>
            Starts a new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> pipeline from the <see cref="T:Windows.UI.Composition.CompositionBrush" /> returned by <see cref="M:Windows.UI.Composition.Compositor.CreateBackdropBrush" /> on the input <see cref="T:Windows.UI.Xaml.UIElement" /></summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Grayscale">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Grayscale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Grayscale() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Grayscale" />
      <MemberSignature Language="VB.NET" Value="Public Function Grayscale () As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Grayscale : unit -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Grayscale " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Applies a grayscale on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HueRotation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.HueRotation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function HueRotation (angle As Single) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.HueRotation : single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.HueRotation angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">The angle to rotate the hue, in radians</param>
        <summary>
            Applies a hue rotation effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HueRotation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation (float angle, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation(float32 angle, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.HueRotation(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function HueRotation (angle As Single, ByRef animation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.HueRotation : single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.HueRotation (angle, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="angle">The angle to rotate the hue, in radians</param>
        <param name="animation">The optional rotation angle animation for the effect</param>
        <summary>
            Applies a hue rotation effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HueRotation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation (float angle, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation(float32 angle, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.HueRotation(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function HueRotation (angle As Single, ByRef setter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.HueRotation : single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.HueRotation (angle, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="angle">The angle to rotate the hue, in radians</param>
        <param name="setter">The optional rotation angle setter for the effect</param>
        <summary>
            Applies a hue rotation effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HueRotation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation (float angle, out string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder HueRotation(float32 angle, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.HueRotation(System.Single,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function HueRotation (angle As Single, ByRef target As String) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.HueRotation : single * string -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.HueRotation (angle, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="target" Type="System.String" RefType="out" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
      </Parameters>
      <Docs>
        <param name="angle">The angle to rotate the hue, in radians</param>
        <param name="target">The target property to animate the resulting effect.</param>
        <summary>
            Applies a hue rotation effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Function Invert () As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Applies an invert effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LuminanceToAlpha">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder LuminanceToAlpha ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder LuminanceToAlpha() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.LuminanceToAlpha" />
      <MemberSignature Language="VB.NET" Value="Public Function LuminanceToAlpha () As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.LuminanceToAlpha : unit -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.LuminanceToAlpha " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Applies a luminance to alpha effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Merge (Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource,System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; factory, Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder background, System.Collections.Generic.IEnumerable&lt;string&gt; animations = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Merge(class System.Func`3&lt;class Windows.Graphics.Effects.IGraphicsEffectSource, class Windows.Graphics.Effects.IGraphicsEffectSource, class System.Threading.Tasks.Task`1&lt;class Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; factory, class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder background, class System.Collections.Generic.IEnumerable`1&lt;string&gt; animations, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Merge(System.Func{Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource,System.Threading.Tasks.Task{Windows.Graphics.Effects.IGraphicsEffectSource}},Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Function Merge (factory As Func(Of IGraphicsEffectSource, IGraphicsEffectSource, Task(Of IGraphicsEffectSource)), background As PipelineBuilder, Optional animations As IEnumerable(Of String) = Nothing, Optional initializers As IEnumerable(Of BrushProvider) = Nothing) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Merge : Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource, Windows.Graphics.Effects.IGraphicsEffectSource, System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt; * Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder * seq&lt;string&gt; * seq&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Merge (factory, background, animations, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource,System.Threading.Tasks.Task&lt;Windows.Graphics.Effects.IGraphicsEffectSource&gt;&gt;" />
        <Parameter Name="background" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" />
        <Parameter Name="animations" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">The asynchronous blend function to use</param>
        <param name="background">The background pipeline to blend with the current instance</param>
        <param name="animations">The list of optional animatable properties in the returned effect</param>
        <param name="initializers">The list of source parameters that require deferred initialization (see <see cref="T:Windows.UI.Composition.CompositionEffectSourceParameter" /> for more info)</param>
        <summary>
            Blends two pipelines using the provided asynchronous <see cref="T:System.Func`3" /> to do so
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Merge (Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource&gt; factory, Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder background, System.Collections.Generic.IEnumerable&lt;string&gt; animations = default, System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Merge(class System.Func`3&lt;class Windows.Graphics.Effects.IGraphicsEffectSource, class Windows.Graphics.Effects.IGraphicsEffectSource, class Windows.Graphics.Effects.IGraphicsEffectSource&gt; factory, class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder background, class System.Collections.Generic.IEnumerable`1&lt;string&gt; animations, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Merge(System.Func{Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource},Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Function Merge (factory As Func(Of IGraphicsEffectSource, IGraphicsEffectSource, IGraphicsEffectSource), background As PipelineBuilder, Optional animations As IEnumerable(Of String) = Nothing, Optional initializers As IEnumerable(Of BrushProvider) = Nothing) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Merge : Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource, Windows.Graphics.Effects.IGraphicsEffectSource, Windows.Graphics.Effects.IGraphicsEffectSource&gt; * Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder * seq&lt;string&gt; * seq&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt; -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Merge (factory, background, animations, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Func&lt;Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource,Windows.Graphics.Effects.IGraphicsEffectSource&gt;" />
        <Parameter Name="background" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" />
        <Parameter Name="animations" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Uwp.UI.Media.Pipelines.BrushProvider&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">The blend function to use</param>
        <param name="background">The background pipeline to blend with the current instance</param>
        <param name="animations">The list of optional animatable properties in the returned effect</param>
        <param name="initializers">The list of source parameters that require deferred initialization (see <see cref="T:Windows.UI.Composition.CompositionEffectSourceParameter" /> for more info)</param>
        <summary>
            Blends two pipelines using the provided <see cref="T:System.Func`3" /> to do so
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity (float opacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity(float32 opacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Opacity(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Opacity (opacity As Single) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Opacity : single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Opacity opacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opacity" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="opacity">The opacity value to apply to the pipeline</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.OpacityEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity (float opacity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity(float32 opacity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Opacity(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Opacity (opacity As Single, ByRef animation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Opacity : single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Opacity (opacity, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opacity" Type="System.Single" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="opacity">The opacity value to apply to the pipeline</param>
        <param name="animation">The optional opacity animation for the effect</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.OpacityEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity (float opacity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity(float32 opacity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Opacity(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Opacity (opacity As Single, ByRef setter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Opacity : single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Opacity (opacity, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opacity" Type="System.Single" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="opacity">The opacity value to apply to the pipeline</param>
        <param name="setter">The optional opacity setter for the effect</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.OpacityEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity (float opacity, out string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Opacity(float32 opacity, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Opacity(System.Single,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Opacity (opacity As Single, ByRef target As String) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Opacity : single * string -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Opacity (opacity, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opacity" Type="System.Single" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="target" Type="System.String" RefType="out" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
      </Parameters>
      <Docs>
        <param name="opacity">The opacity value to apply to the pipeline</param>
        <param name="target">The target property to animate the resulting effect.</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.OpacityEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saturation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation (float saturation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation(float32 saturation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Saturation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Saturation (saturation As Single) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Saturation : single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Saturation saturation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saturation" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="saturation">The saturation amount for the new effect (should be in the [0, 1] range)</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SaturationEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saturation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation (float saturation, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation(float32 saturation, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Saturation(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Saturation (saturation As Single, ByRef animation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Saturation : single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Saturation (saturation, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saturation" Type="System.Single" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="saturation">The initial saturation amount for the new effect (should be in the [0, 1] range)</param>
        <param name="animation">The optional saturation animation for the effect</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SaturationEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saturation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation (float saturation, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation(float32 saturation, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Saturation(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Saturation (saturation As Single, ByRef setter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Saturation : single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Saturation (saturation, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saturation" Type="System.Single" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="saturation">The initial saturation amount for the new effect (should be in the [0, 1] range)</param>
        <param name="setter">The optional saturation setter for the effect</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SaturationEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saturation">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation (float saturation, out string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Saturation(float32 saturation, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Saturation(System.Single,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Saturation (saturation As Single, ByRef target As String) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Saturation : single * string -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Saturation (saturation, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saturation" Type="System.Single" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="target" Type="System.String" RefType="out" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
      </Parameters>
      <Docs>
        <param name="saturation">The initial saturation amount for the new effect (should be in the [0, 1] range)</param>
        <param name="target">The target property to animate the resulting effect.</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SaturationEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sepia">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia (float intensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia(float32 intensity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Sepia(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sepia (intensity As Single) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Sepia : single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Sepia intensity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intensity" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="intensity">The sepia effect intensity for the new effect</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SepiaEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sepia">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia (float intensity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia(float32 intensity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Sepia(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sepia (intensity As Single, ByRef animation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Sepia : single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Sepia (intensity, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intensity" Type="System.Single" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="intensity">The sepia effect intensity for the new effect</param>
        <param name="animation">The sepia intensity animation for the effect</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SepiaEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sepia">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia (float intensity, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia(float32 intensity, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Sepia(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sepia (intensity As Single, ByRef setter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Sepia : single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Sepia (intensity, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intensity" Type="System.Single" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="intensity">The sepia effect intensity for the new effect</param>
        <param name="setter">The optional sepia intensity setter for the effect</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SepiaEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sepia">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia (float intensity, out string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Sepia(float32 intensity, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Sepia(System.Single,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sepia (intensity As Single, ByRef target As String) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Sepia : single * string -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Sepia (intensity, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intensity" Type="System.Single" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="target" Type="System.String" RefType="out" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
      </Parameters>
      <Docs>
        <param name="intensity">The sepia effect intensity for the new effect</param>
        <param name="target">The target property to animate the resulting effect.</param>
        <summary>
            Adds a new <see cref="T:Microsoft.Graphics.Canvas.Effects.SepiaEffect" /> to the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shade">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Shade (Windows.UI.Color color, float mix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Shade(valuetype Windows.UI.Color color, float32 mix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Shade(Windows.UI.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Shade (color As Color, mix As Single) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Shade : Windows.UI.Color * single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Shade (color, mix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
        <Parameter Name="mix" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">The color to use</param>
        <param name="mix">The amount of mix to apply over the current effect (must be in the [0, 1] range)</param>
        <summary>
            Applies a shade effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shade">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Shade (Windows.UI.Color color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt; colorAnimation, float mix, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; mixAnimation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Shade(valuetype Windows.UI.Color color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;valuetype Windows.UI.Color&gt;&amp; colorAnimation, float32 mix, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; mixAnimation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Shade(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{Windows.UI.Color}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Shade (color As Color, ByRef colorAnimation As EffectAnimation(Of Color), mix As Single, ByRef mixAnimation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Shade : Windows.UI.Color * EffectAnimation * single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Shade (color, colorAnimation, mix, mixAnimation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
        <Parameter Name="colorAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt;" RefType="out" />
        <Parameter Name="mix" Type="System.Single" />
        <Parameter Name="mixAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The color to use</param>
        <param name="colorAnimation">The optional color animation for the effect</param>
        <param name="mix">The initial amount of mix to apply over the current effect (must be in the [0, 1] range)</param>
        <param name="mixAnimation">The optional mix animation for the effect</param>
        <summary>
            Applies a shade effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shade">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Shade (Windows.UI.Color color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt; colorSetter, float mix, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; mixSetter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Shade(valuetype Windows.UI.Color color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;valuetype Windows.UI.Color&gt;&amp; colorSetter, float32 mix, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; mixSetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Shade(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{Windows.UI.Color}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Shade (color As Color, ByRef colorSetter As EffectSetter(Of Color), mix As Single, ByRef mixSetter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Shade : Windows.UI.Color * EffectSetter * single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Shade (color, colorSetter, mix, mixSetter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
        <Parameter Name="colorSetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt;" RefType="out" />
        <Parameter Name="mix" Type="System.Single" />
        <Parameter Name="mixSetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The color to use</param>
        <param name="colorSetter">The optional color setter for the effect</param>
        <param name="mix">The initial amount of mix to apply over the current effect (must be in the [0, 1] range)</param>
        <param name="mixSetter">The optional mix setter for the effect</param>
        <summary>
            Applies a shade effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemperatureAndTint">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder TemperatureAndTint (float temperature, float tint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder TemperatureAndTint(float32 temperature, float32 tint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.TemperatureAndTint(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function TemperatureAndTint (temperature As Single, tint As Single) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.TemperatureAndTint : single * single -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.TemperatureAndTint (temperature, tint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temperature" Type="System.Single" />
        <Parameter Name="tint" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="temperature">The temperature value to use (should be in the [-1, 1] range)</param>
        <param name="tint">The tint value to use (should be in the [-1, 1] range)</param>
        <summary>
            Applies a temperature and tint effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemperatureAndTint">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder TemperatureAndTint (float temperature, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; temperatureAnimation, float tint, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;float&gt; tintAnimation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder TemperatureAndTint(float32 temperature, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; temperatureAnimation, float32 tint, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;float32&gt;&amp; tintAnimation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.TemperatureAndTint(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TemperatureAndTint (temperature As Single, ByRef temperatureAnimation As EffectAnimation(Of Single), tint As Single, ByRef tintAnimation As EffectAnimation(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.TemperatureAndTint : single * EffectAnimation * single * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.TemperatureAndTint (temperature, temperatureAnimation, tint, tintAnimation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temperature" Type="System.Single" />
        <Parameter Name="temperatureAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="tint" Type="System.Single" />
        <Parameter Name="tintAnimation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="temperature">The temperature value to use (should be in the [-1, 1] range)</param>
        <param name="temperatureAnimation">The optional temperature animation for the effect</param>
        <param name="tint">The tint value to use (should be in the [-1, 1] range)</param>
        <param name="tintAnimation">The optional tint animation for the effect</param>
        <summary>
            Applies a temperature and tint effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemperatureAndTint">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder TemperatureAndTint (float temperature, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; temperatureSetter, float tint, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;float&gt; tintSetter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder TemperatureAndTint(float32 temperature, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; temperatureSetter, float32 tint, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;float32&gt;&amp; tintSetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.TemperatureAndTint(System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@,System.Single,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{System.Single}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TemperatureAndTint (temperature As Single, ByRef temperatureSetter As EffectSetter(Of Single), tint As Single, ByRef tintSetter As EffectSetter(Of Single)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.TemperatureAndTint : single * EffectSetter * single * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.TemperatureAndTint (temperature, temperatureSetter, tint, tintSetter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="temperature" Type="System.Single" />
        <Parameter Name="temperatureSetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
        <Parameter Name="tint" Type="System.Single" />
        <Parameter Name="tintSetter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;System.Single&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="temperature">The temperature value to use (should be in the [-1, 1] range)</param>
        <param name="temperatureSetter">The optional temperature setter for the effect</param>
        <param name="tint">The tint value to use (should be in the [-1, 1] range)</param>
        <param name="tintSetter">The optional tint setter for the effect</param>
        <summary>
            Applies a temperature and tint effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tint">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint (Windows.UI.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint(valuetype Windows.UI.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Tint(Windows.UI.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tint (color As Color) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Tint : Windows.UI.Color -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Tint color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
      </Parameters>
      <Docs>
        <param name="color">The color to use</param>
        <summary>
            Applies a tint effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tint">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint (Windows.UI.Color color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt; animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint(valuetype Windows.UI.Color color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation`1&lt;valuetype Windows.UI.Color&gt;&amp; animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Tint(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation{Windows.UI.Color}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tint (color As Color, ByRef animation As EffectAnimation(Of Color)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Tint : Windows.UI.Color * EffectAnimation -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Tint (color, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
        <Parameter Name="animation" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectAnimation&lt;Windows.UI.Color&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The color to use</param>
        <param name="animation">The optional color animation for the effect</param>
        <summary>
            Applies a tint effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tint">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint (Windows.UI.Color color, out Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint(valuetype Windows.UI.Color color, [out] class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter`1&lt;valuetype Windows.UI.Color&gt;&amp; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Tint(Windows.UI.Color,Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter{Windows.UI.Color}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tint (color As Color, ByRef setter As EffectSetter(Of Color)) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Tint : Windows.UI.Color * EffectSetter -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Tint (color, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" />
        <Parameter Name="setter" Type="Microsoft.Toolkit.Uwp.UI.Media.Pipelines.EffectSetter&lt;Windows.UI.Color&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="color">The color to use</param>
        <param name="setter">The optional color setter for the effect</param>
        <summary>
            Applies a tint effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tint">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint (Windows.UI.Color color, out string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder Tint(valuetype Windows.UI.Color color, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder.Tint(Windows.UI.Color,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tint (color As Color, ByRef target As String) As PipelineBuilder" />
      <MemberSignature Language="F#" Value="member this.Tint : Windows.UI.Color * string -&gt; Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" Usage="pipelineBuilder.Tint (color, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Media</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Windows.UI.Color" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
        <Parameter Name="target" Type="System.String" RefType="out" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0" />
      </Parameters>
      <Docs>
        <param name="color">The color to use</param>
        <param name="target">The target property to animate the resulting effect.</param>
        <summary>
            Applies a tint effect on the current pipeline
            </summary>
        <returns>A new <see cref="T:Microsoft.Toolkit.Uwp.UI.Media.Pipelines.PipelineBuilder" /> instance to use to keep adding new effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
