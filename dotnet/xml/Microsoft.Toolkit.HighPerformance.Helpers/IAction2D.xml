<Type Name="IAction2D" FullName="Microsoft.Toolkit.HighPerformance.Helpers.IAction2D">
  <TypeSignature Language="C#" Value="public interface IAction2D" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAction2D" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.HighPerformance.Helpers.IAction2D" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAction2D" />
  <TypeSignature Language="F#" Value="type IAction2D = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.HighPerformance</AssemblyName>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A contract for actions being executed with two input indices.
            </summary>
    <remarks>If the <see cref="M:Microsoft.Toolkit.HighPerformance.Helpers.IAction2D.Invoke(System.Int32,System.Int32)" /> method is small enough, it is highly recommended to mark it with <see cref="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining" />.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (int i, int j);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(int32 i, int32 j) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.HighPerformance.Helpers.IAction2D.Invoke(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (i As Integer, j As Integer)" />
      <MemberSignature Language="F#" Value="abstract member Invoke : int * int -&gt; unit" Usage="iAction2D.Invoke (i, j)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="j" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">The first index for the action to execute.</param>
        <param name="j">The second index for the action to execute.</param>
        <summary>
            Executes the action associated with two specified indices.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
