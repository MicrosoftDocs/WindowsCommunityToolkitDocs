<Type Name="SystemSerializer" FullName="Microsoft.Toolkit.Helpers.SystemSerializer">
  <TypeSignature Language="C#" Value="public class SystemSerializer : Microsoft.Toolkit.Helpers.IObjectSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SystemSerializer extends System.Object implements class Microsoft.Toolkit.Helpers.IObjectSerializer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Helpers.SystemSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class SystemSerializer&#xA;Implements IObjectSerializer" />
  <TypeSignature Language="F#" Value="type SystemSerializer = class&#xA;    interface IObjectSerializer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit</AssemblyName>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Toolkit.Helpers.IObjectSerializer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A bare-bones serializer which knows how to deal with primitive types and strings only.
            It is recommended for more complex scenarios to implement your own <see cref="T:Microsoft.Toolkit.Helpers.IObjectSerializer" /> based on System.Text.Json, Newtonsoft.Json, or DataContractJsonSerializer see https://aka.ms/wct/storagehelper-migration
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SystemSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Helpers.SystemSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Deserialize&lt;T&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Helpers.SystemSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (value As String) As T" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : string -&gt; 'T&#xA;override this.Deserialize : string -&gt; 'T" Usage="systemSerializer.Deserialize value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Toolkit.Helpers.IObjectSerializer.Deserialize``1(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type to convert value to.</typeparam>
        <param name="value">Value from storage to convert.</param>
        <summary>
            Take a primitive value from storage and return it as the requested type using the <see cref="M:System.Convert.ChangeType(System.Object,System.Type)" /> API.
            </summary>
        <returns>Deserialized value or default value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public string? Serialize&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Serialize&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Helpers.SystemSerializer.Serialize``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize(Of T) (value As T) As String" />
      <MemberSignature Language="F#" Value="abstract member Serialize : 'T -&gt; string&#xA;override this.Serialize : 'T -&gt; string" Usage="systemSerializer.Serialize value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Toolkit.Helpers.IObjectSerializer.Serialize``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit</AssemblyName>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type to serialize from.</typeparam>
        <param name="value">Value to serialize.</param>
        <summary>
            Returns the value so that it can be serialized directly.
            </summary>
        <returns>String representation of value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
