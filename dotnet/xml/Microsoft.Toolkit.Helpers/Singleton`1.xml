<Type Name="Singleton&lt;T&gt;" FullName="Microsoft.Toolkit.Helpers.Singleton&lt;T&gt;">
  <TypeSignature Language="C#" Value="public static class Singleton&lt;T&gt; where T : new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Singleton`1&lt;.ctor T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Helpers.Singleton`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Singleton(Of T)" />
  <TypeSignature Language="F#" Value="type Singleton&lt;'T (requires 'T : (new : unit -&gt; 'T))&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("This helper will be removed in a future release, see example tag for code replacement. https://github.com/windows-toolkit/WindowsCommunityToolkit/issues/3134")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This helper will be removed in a future release, see example tag for code replacement. https://github.com/windows-toolkit/WindowsCommunityToolkit/issues/3134")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">The type to be used for creating the Singleton instance.</typeparam>
    <summary>
            Obsolete see https://github.com/windows-toolkit/WindowsCommunityToolkit/issues/3134.
            </summary>
    <remarks>To be added.</remarks>
    <example>
            Instead of this helper, migrate your code to this pattern instead:
            <code>
            // Setup Singleton
            public class MyClass
            {
                public static MyClass Instance { get; } = new MyClass();
            }
            </code></example>
  </Docs>
  <Members>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static T Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property !T Instance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Helpers.Singleton`1.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As T" />
      <MemberSignature Language="F#" Value="static member Instance : 'T" Usage="Microsoft.Toolkit.Helpers.Singleton&lt;'T (requires 'T : (new : unit -&gt; 'T))&gt;.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the instance of the Singleton class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
