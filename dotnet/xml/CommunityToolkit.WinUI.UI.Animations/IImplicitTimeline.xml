<Type Name="IImplicitTimeline" FullName="CommunityToolkit.WinUI.UI.Animations.IImplicitTimeline">
  <TypeSignature Language="C#" Value="public interface IImplicitTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IImplicitTimeline" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.UI.Animations.IImplicitTimeline" />
  <TypeSignature Language="VB.NET" Value="Public Interface IImplicitTimeline" />
  <TypeSignature Language="F#" Value="type IImplicitTimeline = interface" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            An interface representing a XAML model for a custom implicit composition animation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AnimationPropertyChanged">
      <MemberSignature Language="C#" Value="event EventHandler? AnimationPropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnimationPropertyChanged" />
      <MemberSignature Language="DocId" Value="E:CommunityToolkit.WinUI.UI.Animations.IImplicitTimeline.AnimationPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Event AnimationPropertyChanged As EventHandler " />
      <MemberSignature Language="F#" Value="member this.AnimationPropertyChanged : EventHandler " Usage="member this.AnimationPropertyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Raised whenever a property that influences the animation changes.
            This event is used by <see cref="T:CommunityToolkit.WinUI.UI.Animations.ImplicitAnimationSet" /> to update the animations collection
            assigned to a target <see cref="T:Microsoft.UI.Xaml.UIElement" /> when any of the individual animations is modified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimation">
      <MemberSignature Language="C#" Value="public Microsoft.UI.Composition.CompositionAnimation GetAnimation (Microsoft.UI.Xaml.UIElement element, out string? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.UI.Composition.CompositionAnimation GetAnimation(class Microsoft.UI.Xaml.UIElement element, [out] string&amp; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.IImplicitTimeline.GetAnimation(Microsoft.UI.Xaml.UIElement,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimation (element As UIElement, ByRef target As String) As CompositionAnimation" />
      <MemberSignature Language="F#" Value="abstract member GetAnimation : Microsoft.UI.Xaml.UIElement * string -&gt; Microsoft.UI.Composition.CompositionAnimation" Usage="iImplicitTimeline.GetAnimation (element, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Composition.CompositionAnimation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="target" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="element">The target <see cref="T:Microsoft.UI.Xaml.UIElement" /> the animation will be applied to.</param>
        <param name="target">
            The optional target property for the animation. This might be used for direct implicit
            animations that target a property but want to be triggered according to a separate property.
            </param>
        <summary>
            Gets a <see cref="T:Microsoft.UI.Composition.CompositionAnimation" /> from the current node. This animation might
            be used either as an implicit show/hide animation, or as a direct implicit animation.
            </summary>
        <returns>A new <see cref="T:Microsoft.UI.Composition.CompositionAnimation" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
