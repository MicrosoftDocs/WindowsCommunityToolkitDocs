<Type Name="AnimationBuilder" FullName="CommunityToolkit.WinUI.UI.Animations.AnimationBuilder">
  <TypeSignature Language="C#" Value="public sealed class AnimationBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnimationBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnimationBuilder" />
  <TypeSignature Language="F#" Value="type AnimationBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AnchorPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector2&gt; AnchorPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Vector2&gt; AnchorPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.AnchorPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function AnchorPoint () As IPropertyAnimationBuilder(Of Vector2)" />
      <MemberSignature Language="F#" Value="member this.AnchorPoint : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector2&gt;" Usage="animationBuilder.AnchorPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new anchor point animation for the X and Y axes to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; AnchorPoint (CommunityToolkit.WinUI.UI.Animations.Axis axis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; AnchorPoint(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.AnchorPoint(CommunityToolkit.WinUI.UI.Animations.Axis)" />
      <MemberSignature Language="VB.NET" Value="Public Function AnchorPoint (axis As Axis) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.AnchorPoint : CommunityToolkit.WinUI.UI.Animations.Axis -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.AnchorPoint axis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
      </Parameters>
      <Docs>
        <param name="axis">The target anchor point axis to animate.</param>
        <summary>
            Adds a new anchor point animation for a single axis to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder AnchorPoint (System.Numerics.Vector2 to, System.Numerics.Vector2? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder AnchorPoint(valuetype System.Numerics.Vector2 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector2&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.AnchorPoint(System.Numerics.Vector2,System.Nullable{System.Numerics.Vector2},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function AnchorPoint (to As Vector2, Optional from As Nullable(Of Vector2) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.AnchorPoint : System.Numerics.Vector2 * Nullable&lt;System.Numerics.Vector2&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.AnchorPoint (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector2" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector2&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new anchor point animation for the X and Y axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder AnchorPoint (CommunityToolkit.WinUI.UI.Animations.Axis axis, double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder AnchorPoint(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.AnchorPoint(CommunityToolkit.WinUI.UI.Animations.Axis,System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function AnchorPoint (axis As Axis, to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.AnchorPoint : CommunityToolkit.WinUI.UI.Animations.Axis * double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.AnchorPoint (axis, to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="axis">The target anchor point axis to animate.</param>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new anchor point animation for a single axis to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt; CenterPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Vector3&gt; CenterPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.CenterPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function CenterPoint () As IPropertyAnimationBuilder(Of Vector3)" />
      <MemberSignature Language="F#" Value="member this.CenterPoint : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;" Usage="animationBuilder.CenterPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new center point animation for all axes to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; CenterPoint (CommunityToolkit.WinUI.UI.Animations.Axis axis, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; CenterPoint(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.CenterPoint(CommunityToolkit.WinUI.UI.Animations.Axis,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CenterPoint (axis As Axis, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.CenterPoint : CommunityToolkit.WinUI.UI.Animations.Axis * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.CenterPoint (axis, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target scale axis to animate.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new center point animation on a specified axis to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder CenterPoint (System.Numerics.Vector3 to, System.Numerics.Vector3? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder CenterPoint(valuetype System.Numerics.Vector3 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector3&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.CenterPoint(System.Numerics.Vector3,System.Nullable{System.Numerics.Vector3},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function CenterPoint (to As Vector3, Optional from As Nullable(Of Vector3) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.CenterPoint : System.Numerics.Vector3 * Nullable&lt;System.Numerics.Vector3&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.CenterPoint (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector3" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector3&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new center point animation for all axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder CenterPoint (System.Numerics.Vector2 to, System.Numerics.Vector2? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder CenterPoint(valuetype System.Numerics.Vector2 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector2&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.CenterPoint(System.Numerics.Vector2,System.Nullable{System.Numerics.Vector2},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CenterPoint (to As Vector2, Optional from As Nullable(Of Vector2) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.CenterPoint : System.Numerics.Vector2 * Nullable&lt;System.Numerics.Vector2&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.CenterPoint (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector2" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector2&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new center point animation for the X and Y axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder CenterPoint (CommunityToolkit.WinUI.UI.Animations.Axis axis, double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder CenterPoint(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.CenterPoint(CommunityToolkit.WinUI.UI.Animations.Axis,System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CenterPoint (axis As Axis, to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.CenterPoint : CommunityToolkit.WinUI.UI.Animations.Axis * double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.CenterPoint (axis, to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target scale axis to animate.</param>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new center point animation on a specified axis to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; Clip (CommunityToolkit.WinUI.UI.Animations.Side side);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; Clip(valuetype CommunityToolkit.WinUI.UI.Animations.Side side) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Clip(CommunityToolkit.WinUI.UI.Animations.Side)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clip (side As Side) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Clip : CommunityToolkit.WinUI.UI.Animations.Side -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.Clip side" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="side" Type="CommunityToolkit.WinUI.UI.Animations.Side" />
      </Parameters>
      <Docs>
        <param name="side">The clip size to animate.</param>
        <summary>
            Adds a new clip animation to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Clip (Microsoft.UI.Xaml.Thickness to, Microsoft.UI.Xaml.Thickness? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Clip(valuetype Microsoft.UI.Xaml.Thickness to, valuetype System.Nullable`1&lt;valuetype Microsoft.UI.Xaml.Thickness&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Clip(Microsoft.UI.Xaml.Thickness,System.Nullable{Microsoft.UI.Xaml.Thickness},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clip (to As Thickness, Optional from As Nullable(Of Thickness) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Clip : Microsoft.UI.Xaml.Thickness * Nullable&lt;Microsoft.UI.Xaml.Thickness&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Clip (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="Microsoft.UI.Xaml.Thickness" />
        <Parameter Name="from" Type="System.Nullable&lt;Microsoft.UI.Xaml.Thickness&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new clip animation to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Clip (CommunityToolkit.WinUI.UI.Animations.Side side, double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Clip(valuetype CommunityToolkit.WinUI.UI.Animations.Side side, float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Clip(CommunityToolkit.WinUI.UI.Animations.Side,System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clip (side As Side, to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Clip : CommunityToolkit.WinUI.UI.Animations.Side * double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Clip (side, to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="side" Type="CommunityToolkit.WinUI.UI.Animations.Side" />
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="side">The clip size to animate.</param>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new clip animation to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As AnimationBuilder" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Creates a new <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance to setup an animation schedule.
            This can be used as the entry point to construct a custom animation sequence.
            </para>
            For instance:
            <code>
            AnimationBuilder.Create()<br />
                .Opacity(from: 0, to: 1)<br />
                .Translation(Axis.X, from: -40, to: 0)<br />
                .Start(MyButton);
            </code><para>
            Configured <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instances are also reusable, meaning that the same
            one can be used to start an animation sequence on multiple elements as well.
            </para>
            For instance:
            <code>
            var animation = AnimationBuilder.Create().Opacity(0, 1).Size(1.2, 1);<br /><br />
            animation.Start(MyButton);<br />
            animation.Start(MyGrid);
            </code>
            Alternatively, the <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationSet" /> type can be used to configure animations directly from XAML.
            The same <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> APIs will still be used behind the scenes to handle animations.
            </summary>
        <returns>An empty <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance to use to construct an animation sequence.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalAnimation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder ExternalAnimation (Microsoft.UI.Composition.CompositionAnimation animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder ExternalAnimation(class Microsoft.UI.Composition.CompositionAnimation animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.ExternalAnimation(Microsoft.UI.Composition.CompositionAnimation)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExternalAnimation (animation As CompositionAnimation) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.ExternalAnimation : Microsoft.UI.Composition.CompositionAnimation -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.ExternalAnimation animation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Microsoft.UI.Composition.CompositionAnimation" />
      </Parameters>
      <Docs>
        <param name="animation">The external <see cref="T:Microsoft.UI.Composition.CompositionAnimation" /> instance to add to the schedule.</param>
        <summary>
            Adds a new external animation to the current schedule, which will be executed on the same
            target object the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance will be invoked upon.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalAnimation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder ExternalAnimation (Microsoft.UI.Xaml.Media.Animation.Timeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder ExternalAnimation(class Microsoft.UI.Xaml.Media.Animation.Timeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.ExternalAnimation(Microsoft.UI.Xaml.Media.Animation.Timeline)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExternalAnimation (animation As Timeline) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.ExternalAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.ExternalAnimation animation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Microsoft.UI.Xaml.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="animation">The external <see cref="T:Microsoft.UI.Xaml.Media.Animation.Timeline" /> instance to add to the schedule.</param>
        <summary>
            Adds a new external animation to the current schedule, which will be executed on the same
            target object the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance will be invoked upon.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalAnimation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder ExternalAnimation (Microsoft.UI.Composition.CompositionObject target, Microsoft.UI.Composition.CompositionAnimation animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder ExternalAnimation(class Microsoft.UI.Composition.CompositionObject target, class Microsoft.UI.Composition.CompositionAnimation animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.ExternalAnimation(Microsoft.UI.Composition.CompositionObject,Microsoft.UI.Composition.CompositionAnimation)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExternalAnimation (target As CompositionObject, animation As CompositionAnimation) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.ExternalAnimation : Microsoft.UI.Composition.CompositionObject * Microsoft.UI.Composition.CompositionAnimation -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.ExternalAnimation (target, animation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.UI.Composition.CompositionObject" />
        <Parameter Name="animation" Type="Microsoft.UI.Composition.CompositionAnimation" />
      </Parameters>
      <Docs>
        <param name="target">The <see cref="T:Microsoft.UI.Composition.CompositionObject" /> target to invoke the animation upon.</param>
        <param name="animation">The external <see cref="T:Microsoft.UI.Composition.CompositionAnimation" /> instance to add to the schedule.</param>
        <summary>
            Adds a new external animation to the current schedule, which will be executed on a given
            <see cref="T:Microsoft.UI.Composition.CompositionObject" /> when the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance is invoked.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizedKeyFrames&lt;T&gt;">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder NormalizedKeyFrames&lt;T&gt; (string property, Action&lt;CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder&lt;T&gt;&gt; build, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeatOption = default, Microsoft.UI.Composition.AnimationDelayBehavior? delayBehavior = default, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder NormalizedKeyFrames&lt;struct .ctor (class System.ValueType) T&gt;(string property, class System.Action`1&lt;class CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder`1&lt;!!T&gt;&gt; build, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeatOption, valuetype System.Nullable`1&lt;valuetype Microsoft.UI.Composition.AnimationDelayBehavior&gt; delayBehavior, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.NormalizedKeyFrames``1(System.String,System.Action{CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder{``0}},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},System.Nullable{Microsoft.UI.Composition.AnimationDelayBehavior},CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalizedKeyFrames(Of T As Structure) (property As String, build As Action(Of INormalizedKeyFrameAnimationBuilder(Of T)), Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeatOption As Nullable(Of RepeatOption) = Nothing, Optional delayBehavior As Nullable(Of AnimationDelayBehavior) = Nothing, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.NormalizedKeyFrames : string * Action&lt;CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder&lt;'T&gt;&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt; * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder (requires 'T : struct)" Usage="animationBuilder.NormalizedKeyFrames (property, build, delay, duration, repeatOption, delayBehavior, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="build" Type="System.Action&lt;CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder&lt;T&gt;&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeatOption" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="delayBehavior" Type="System.Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt;" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of values to animate.</typeparam>
        <param name="property">The target property to animate.</param>
        <param name="build">The callback to use to construct the custom animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The animation duration.</param>
        <param name="repeatOption">The repeat option for the animation (defaults to one iteration).</param>
        <param name="delayBehavior">The delay behavior to use (ignored if <paramref name="layer" /> is <see cref="F:CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Xaml" />).</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a custom animation based on normalized keyframes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizedKeyFrames&lt;T,TState&gt;">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder NormalizedKeyFrames&lt;T,TState&gt; (string property, TState state, Action&lt;CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder&lt;T&gt;,TState&gt; build, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeatOption = default, Microsoft.UI.Composition.AnimationDelayBehavior? delayBehavior = default, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder NormalizedKeyFrames&lt;struct .ctor (class System.ValueType) T, TState&gt;(string property, !!TState state, class System.Action`2&lt;class CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder`1&lt;!!T&gt;, !!TState&gt; build, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeatOption, valuetype System.Nullable`1&lt;valuetype Microsoft.UI.Composition.AnimationDelayBehavior&gt; delayBehavior, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.NormalizedKeyFrames``2(System.String,``1,System.Action{CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder{``0},``1},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},System.Nullable{Microsoft.UI.Composition.AnimationDelayBehavior},CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalizedKeyFrames(Of T As Structure, TState As Structure) (property As String, state As TState, build As Action(Of INormalizedKeyFrameAnimationBuilder(Of T), TState), Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeatOption As Nullable(Of RepeatOption) = Nothing, Optional delayBehavior As Nullable(Of AnimationDelayBehavior) = Nothing, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.NormalizedKeyFrames : string * 'State * Action&lt;CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder&lt;'T&gt;, 'State&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt; * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder (requires 'T : struct)" Usage="animationBuilder.NormalizedKeyFrames (property, state, build, delay, duration, repeatOption, delayBehavior, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="build" Type="System.Action&lt;CommunityToolkit.WinUI.UI.Animations.INormalizedKeyFrameAnimationBuilder&lt;T&gt;,TState&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeatOption" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="delayBehavior" Type="System.Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt;" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of values to animate.</typeparam>
        <typeparam name="TState">The type of state to pass to the builder.</typeparam>
        <param name="property">The target property to animate.</param>
        <param name="state">The state to pass to the builder.</param>
        <param name="build">The callback to use to construct the custom animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The animation duration.</param>
        <param name="repeatOption">The repeat option for the animation (defaults to one iteration).</param>
        <param name="delayBehavior">The delay behavior to use (ignored if <paramref name="layer" /> is <see cref="F:CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Xaml" />).</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a custom animation based on normalized keyframes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt; Offset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Vector3&gt; Offset() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Function Offset () As IPropertyAnimationBuilder(Of Vector3)" />
      <MemberSignature Language="F#" Value="member this.Offset : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;" Usage="animationBuilder.Offset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new composition offset translation animation for all axes to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; Offset (CommunityToolkit.WinUI.UI.Animations.Axis axis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; Offset(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Offset(CommunityToolkit.WinUI.UI.Animations.Axis)" />
      <MemberSignature Language="VB.NET" Value="Public Function Offset (axis As Axis) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Offset : CommunityToolkit.WinUI.UI.Animations.Axis -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.Offset axis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
      </Parameters>
      <Docs>
        <param name="axis">The target translation axis to animate.</param>
        <summary>
            Adds a new composition offset animation for a single axis to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Offset (System.Numerics.Vector2 to, System.Numerics.Vector2? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Offset(valuetype System.Numerics.Vector2 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector2&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Offset(System.Numerics.Vector2,System.Nullable{System.Numerics.Vector2},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Offset (to As Vector2, Optional from As Nullable(Of Vector2) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Numerics.Vector2 * Nullable&lt;System.Numerics.Vector2&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Offset (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector2" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector2&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new composition offset animation for the X and Y axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Offset (System.Numerics.Vector3 to, System.Numerics.Vector3? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Offset(valuetype System.Numerics.Vector3 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector3&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Offset(System.Numerics.Vector3,System.Nullable{System.Numerics.Vector3},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Offset (to As Vector3, Optional from As Nullable(Of Vector3) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Numerics.Vector3 * Nullable&lt;System.Numerics.Vector3&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Offset (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector3" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector3&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new composition offset translation animation for all axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Offset (CommunityToolkit.WinUI.UI.Animations.Axis axis, double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Offset(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Offset(CommunityToolkit.WinUI.UI.Animations.Axis,System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Offset (axis As Axis, to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Offset : CommunityToolkit.WinUI.UI.Animations.Axis * double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Offset (axis, to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="axis">The target translation axis to animate.</param>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new composition offset animation for a single axis to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; Opacity (CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; Opacity(valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Opacity(CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Opacity (Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Opacity : CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.Opacity layer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new opacity animation to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Opacity (double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Opacity(float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Opacity(System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Opacity (to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Opacity : double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Opacity (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new opacity animation to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Quaternion&gt; Orientation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Quaternion&gt; Orientation() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Function Orientation () As IPropertyAnimationBuilder(Of Quaternion)" />
      <MemberSignature Language="F#" Value="member this.Orientation : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Quaternion&gt;" Usage="animationBuilder.Orientation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Quaternion&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new orientation animation to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Orientation (System.Numerics.Quaternion to, System.Numerics.Quaternion? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Orientation(valuetype System.Numerics.Quaternion to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Quaternion&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Orientation(System.Numerics.Quaternion,System.Nullable{System.Numerics.Quaternion},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Orientation (to As Quaternion, Optional from As Nullable(Of Quaternion) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Numerics.Quaternion * Nullable&lt;System.Numerics.Quaternion&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Orientation (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Quaternion" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Quaternion&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new orientation animation to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; Rotation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; Rotation() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Function Rotation () As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Rotation : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.Rotation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new rotation animation to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Rotation (double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Rotation(float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Rotation(System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rotation (to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Rotation : double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Rotation (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new rotation animation to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAxis">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt; RotationAxis ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Vector3&gt; RotationAxis() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.RotationAxis" />
      <MemberSignature Language="VB.NET" Value="Public Function RotationAxis () As IPropertyAnimationBuilder(Of Vector3)" />
      <MemberSignature Language="F#" Value="member this.RotationAxis : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;" Usage="animationBuilder.RotationAxis " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new rotation axis animation to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAxis">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder RotationAxis (System.Numerics.Vector3 to, System.Numerics.Vector3? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder RotationAxis(valuetype System.Numerics.Vector3 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector3&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.RotationAxis(System.Numerics.Vector3,System.Nullable{System.Numerics.Vector3},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function RotationAxis (to As Vector3, Optional from As Nullable(Of Vector3) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.RotationAxis : System.Numerics.Vector3 * Nullable&lt;System.Numerics.Vector3&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.RotationAxis (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector3" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector3&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new rotation axis animation to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationInDegrees">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; RotationInDegrees (CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; RotationInDegrees(valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.RotationInDegrees(CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function RotationInDegrees (Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.RotationInDegrees : CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.RotationInDegrees layer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new rotation animation in degrees to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationInDegrees">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder RotationInDegrees (double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder RotationInDegrees(float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.RotationInDegrees(System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function RotationInDegrees (to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.RotationInDegrees : double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.RotationInDegrees (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new rotation animation in degrees to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt; Scale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Vector3&gt; Scale() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Function Scale () As IPropertyAnimationBuilder(Of Vector3)" />
      <MemberSignature Language="F#" Value="member this.Scale : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;" Usage="animationBuilder.Scale " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new scale animation for all axes to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; Scale (CommunityToolkit.WinUI.UI.Animations.Axis axis, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; Scale(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Scale(CommunityToolkit.WinUI.UI.Animations.Axis,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scale (axis As Axis, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Scale : CommunityToolkit.WinUI.UI.Animations.Axis * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.Scale (axis, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target scale axis to animate.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new scale animation on a specified axis to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale (System.Numerics.Vector3 to, System.Numerics.Vector3? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale(valuetype System.Numerics.Vector3 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector3&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Scale(System.Numerics.Vector3,System.Nullable{System.Numerics.Vector3},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scale (to As Vector3, Optional from As Nullable(Of Vector3) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Numerics.Vector3 * Nullable&lt;System.Numerics.Vector3&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Scale (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector3" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector3&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new scale animation for all axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale (double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale(float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Scale(System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scale (to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Scale : double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Scale (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new uniform scale animation for all axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale (System.Numerics.Vector2 to, System.Numerics.Vector2? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale(valuetype System.Numerics.Vector2 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector2&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Scale(System.Numerics.Vector2,System.Nullable{System.Numerics.Vector2},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scale (to As Vector2, Optional from As Nullable(Of Vector2) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Numerics.Vector2 * Nullable&lt;System.Numerics.Vector2&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Scale (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector2" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector2&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new scale animation for the X and Y axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale (CommunityToolkit.WinUI.UI.Animations.Axis axis, double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Scale(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Scale(CommunityToolkit.WinUI.UI.Animations.Axis,System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scale (axis As Axis, to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Scale : CommunityToolkit.WinUI.UI.Animations.Axis * double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Scale (axis, to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target scale axis to animate.</param>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new scale animation on a specified axis to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector2&gt; Size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Vector2&gt; Size() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Size" />
      <MemberSignature Language="VB.NET" Value="Public Function Size () As IPropertyAnimationBuilder(Of Vector2)" />
      <MemberSignature Language="F#" Value="member this.Size : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector2&gt;" Usage="animationBuilder.Size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new composition size translation animation for all axes to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; Size (CommunityToolkit.WinUI.UI.Animations.Axis axis, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; Size(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Size(CommunityToolkit.WinUI.UI.Animations.Axis,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Size (axis As Axis, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Size : CommunityToolkit.WinUI.UI.Animations.Axis * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.Size (axis, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target size axis to animate.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new size animation for a single axis to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Size (System.Numerics.Vector2 to, System.Numerics.Vector2? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Size(valuetype System.Numerics.Vector2 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector2&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Size(System.Numerics.Vector2,System.Nullable{System.Numerics.Vector2},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Size (to As Vector2, Optional from As Nullable(Of Vector2) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Size : System.Numerics.Vector2 * Nullable&lt;System.Numerics.Vector2&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Size (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector2" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector2&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new size animation for the X and Y axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Size (CommunityToolkit.WinUI.UI.Animations.Axis axis, double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Size(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Size(CommunityToolkit.WinUI.UI.Animations.Axis,System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Size (axis As Axis, to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Size : CommunityToolkit.WinUI.UI.Animations.Axis * double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Size (axis, to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target size axis to animate.</param>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new size animation for a single axis to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Start(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (element As UIElement)" />
      <MemberSignature Language="F#" Value="member this.Start : Microsoft.UI.Xaml.UIElement -&gt; unit" Usage="animationBuilder.Start element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">The target <see cref="T:Microsoft.UI.Xaml.UIElement" /> to animate.</param>
        <summary>
            Starts the animations present in the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (Microsoft.UI.Xaml.UIElement element, Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(class Microsoft.UI.Xaml.UIElement element, class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Start(Microsoft.UI.Xaml.UIElement,System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (element As UIElement, callback As Action)" />
      <MemberSignature Language="F#" Value="member this.Start : Microsoft.UI.Xaml.UIElement * Action -&gt; unit" Usage="animationBuilder.Start (element, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="element">The target <see cref="T:Microsoft.UI.Xaml.UIElement" /> to animate.</param>
        <param name="callback">The callback to invoke when the animation completes.</param>
        <summary>
            Starts the animations present in the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (Microsoft.UI.Xaml.UIElement element, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(class Microsoft.UI.Xaml.UIElement element, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Start(Microsoft.UI.Xaml.UIElement,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (element As UIElement, token As CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.Start : Microsoft.UI.Xaml.UIElement * System.Threading.CancellationToken -&gt; unit" Usage="animationBuilder.Start (element, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="element">The target <see cref="T:Microsoft.UI.Xaml.UIElement" /> to animate.</param>
        <param name="token">The cancellation token to stop animations while they're running.</param>
        <summary>
            Starts the animations present in the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance, and
            registers a given cancellation token to stop running animations before they complete.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync (Microsoft.UI.Xaml.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartAsync(class Microsoft.UI.Xaml.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.StartAsync(Microsoft.UI.Xaml.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartAsync (element As UIElement) As Task" />
      <MemberSignature Language="F#" Value="member this.StartAsync : Microsoft.UI.Xaml.UIElement -&gt; System.Threading.Tasks.Task" Usage="animationBuilder.StartAsync element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">The target <see cref="T:Microsoft.UI.Xaml.UIElement" /> to animate.</param>
        <summary>
            Starts the animations present in the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when all animations have completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync (Microsoft.UI.Xaml.UIElement element, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartAsync(class Microsoft.UI.Xaml.UIElement element, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.StartAsync(Microsoft.UI.Xaml.UIElement,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartAsync (element As UIElement, token As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.StartAsync : Microsoft.UI.Xaml.UIElement * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="animationBuilder.StartAsync (element, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="Microsoft.UI.Xaml.UIElement" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="element">The target <see cref="T:Microsoft.UI.Xaml.UIElement" /> to animate.</param>
        <param name="token">The cancellation token to stop animations while they're running.</param>
        <summary>
            Starts the animations present in the current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance, and
            registers a given cancellation token to stop running animations before they complete.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that completes when all animations have completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedKeyFrames&lt;T&gt;">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder TimedKeyFrames&lt;T&gt; (string property, Action&lt;CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder&lt;T&gt;&gt; build, TimeSpan? delay = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, Microsoft.UI.Composition.AnimationDelayBehavior? delayBehavior = default, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder TimedKeyFrames&lt;struct .ctor (class System.ValueType) T&gt;(string property, class System.Action`1&lt;class CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder`1&lt;!!T&gt;&gt; build, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype System.Nullable`1&lt;valuetype Microsoft.UI.Composition.AnimationDelayBehavior&gt; delayBehavior, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.TimedKeyFrames``1(System.String,System.Action{CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder{``0}},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},System.Nullable{Microsoft.UI.Composition.AnimationDelayBehavior},CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimedKeyFrames(Of T As Structure) (property As String, build As Action(Of ITimedKeyFrameAnimationBuilder(Of T)), Optional delay As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional delayBehavior As Nullable(Of AnimationDelayBehavior) = Nothing, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.TimedKeyFrames : string * Action&lt;CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder&lt;'T&gt;&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt; * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder (requires 'T : struct)" Usage="animationBuilder.TimedKeyFrames (property, build, delay, repeat, delayBehavior, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="build" Type="System.Action&lt;CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder&lt;T&gt;&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="delayBehavior" Type="System.Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt;" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of values to animate.</typeparam>
        <param name="property">The target property to animate.</param>
        <param name="build">The callback to use to construct the custom animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="repeat">The repeat option for the animation (defaults to one iteration).</param>
        <param name="delayBehavior">The delay behavior to use (ignored if <paramref name="layer" /> is <see cref="F:CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Xaml" />).</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a custom animation based on timed keyframes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedKeyFrames&lt;T,TState&gt;">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder TimedKeyFrames&lt;T,TState&gt; (string property, TState state, Action&lt;CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder&lt;T&gt;,TState&gt; build, TimeSpan? delay = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeatOption = default, Microsoft.UI.Composition.AnimationDelayBehavior? delayBehavior = default, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder TimedKeyFrames&lt;struct .ctor (class System.ValueType) T, TState&gt;(string property, !!TState state, class System.Action`2&lt;class CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder`1&lt;!!T&gt;, !!TState&gt; build, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeatOption, valuetype System.Nullable`1&lt;valuetype Microsoft.UI.Composition.AnimationDelayBehavior&gt; delayBehavior, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.TimedKeyFrames``2(System.String,``1,System.Action{CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder{``0},``1},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},System.Nullable{Microsoft.UI.Composition.AnimationDelayBehavior},CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimedKeyFrames(Of T As Structure, TState As Structure) (property As String, state As TState, build As Action(Of ITimedKeyFrameAnimationBuilder(Of T), TState), Optional delay As Nullable(Of TimeSpan) = Nothing, Optional repeatOption As Nullable(Of RepeatOption) = Nothing, Optional delayBehavior As Nullable(Of AnimationDelayBehavior) = Nothing, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.TimedKeyFrames : string * 'State * Action&lt;CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder&lt;'T&gt;, 'State&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt; * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder (requires 'T : struct)" Usage="animationBuilder.TimedKeyFrames (property, state, build, delay, repeatOption, delayBehavior, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="build" Type="System.Action&lt;CommunityToolkit.WinUI.UI.Animations.ITimedKeyFrameAnimationBuilder&lt;T&gt;,TState&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeatOption" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="delayBehavior" Type="System.Nullable&lt;Microsoft.UI.Composition.AnimationDelayBehavior&gt;" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of values to animate.</typeparam>
        <typeparam name="TState">The type of state to pass to the builder.</typeparam>
        <param name="property">The target property to animate.</param>
        <param name="state">The state to pass to the builder.</param>
        <param name="build">The callback to use to construct the custom animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="repeatOption">The repeat option for the animation (defaults to one iteration).</param>
        <param name="delayBehavior">The delay behavior to use (ignored if <paramref name="layer" /> is <see cref="F:CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Xaml" />).</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a custom animation based on timed keyframes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Transform (System.Numerics.Matrix4x4 to, System.Numerics.Matrix4x4? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Transform(valuetype System.Numerics.Matrix4x4 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Matrix4x4&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Transform(System.Numerics.Matrix4x4,System.Nullable{System.Numerics.Matrix4x4},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (to As Matrix4x4, Optional from As Nullable(Of Matrix4x4) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Numerics.Matrix4x4 * Nullable&lt;System.Numerics.Matrix4x4&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Transform (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Matrix4x4" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Matrix4x4&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new transform animation to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt; Translation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;valuetype System.Numerics.Vector3&gt; Translation() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Translation" />
      <MemberSignature Language="VB.NET" Value="Public Function Translation () As IPropertyAnimationBuilder(Of Vector3)" />
      <MemberSignature Language="F#" Value="member this.Translation : unit -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;" Usage="animationBuilder.Translation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Numerics.Vector3&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new composition translation animation for all axes to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt; Translation (CommunityToolkit.WinUI.UI.Animations.Axis axis, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1&lt;float64&gt; Translation(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Translation(CommunityToolkit.WinUI.UI.Animations.Axis,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translation (axis As Axis, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As IPropertyAnimationBuilder(Of Double)" />
      <MemberSignature Language="F#" Value="member this.Translation : CommunityToolkit.WinUI.UI.Animations.Axis * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;double&gt;" Usage="animationBuilder.Translation (axis, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target translation axis to animate.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new translation animation for a single axis to the current schedule.
            </summary>
        <returns>An <see cref="T:CommunityToolkit.WinUI.UI.Animations.IPropertyAnimationBuilder`1" /> instance to configure the animation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Translation (System.Numerics.Vector3 to, System.Numerics.Vector3? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Translation(valuetype System.Numerics.Vector3 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector3&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Translation(System.Numerics.Vector3,System.Nullable{System.Numerics.Vector3},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translation (to As Vector3, Optional from As Nullable(Of Vector3) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Translation : System.Numerics.Vector3 * Nullable&lt;System.Numerics.Vector3&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Translation (to, from, delay, duration, repeat, easingType, easingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector3" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector3&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <summary>
            Adds a new composition translation animation for all axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>This animation is only available on the composition layer.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Translation (System.Numerics.Vector2 to, System.Numerics.Vector2? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Translation(valuetype System.Numerics.Vector2 to, valuetype System.Nullable`1&lt;valuetype System.Numerics.Vector2&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Translation(System.Numerics.Vector2,System.Nullable{System.Numerics.Vector2},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translation (to As Vector2, Optional from As Nullable(Of Vector2) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Translation : System.Numerics.Vector2 * Nullable&lt;System.Numerics.Vector2&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Translation (to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.Numerics.Vector2" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Numerics.Vector2&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="to">The final point for the animation.</param>
        <param name="from">The optional starting point for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new translation animation for the X and Y axes to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Translation (CommunityToolkit.WinUI.UI.Animations.Axis axis, double to, double? from = default, TimeSpan? delay = default, TimeSpan? duration = default, CommunityToolkit.WinUI.UI.Animations.RepeatOption? repeat = default, CommunityToolkit.WinUI.UI.Animations.EasingType easingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.UI.Animations.AnimationBuilder Translation(valuetype CommunityToolkit.WinUI.UI.Animations.Axis axis, float64 to, valuetype System.Nullable`1&lt;float64&gt; from, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; delay, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; duration, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; repeat, valuetype CommunityToolkit.WinUI.UI.Animations.EasingType easingType, valuetype Microsoft.UI.Xaml.Media.Animation.EasingMode easingMode, valuetype CommunityToolkit.WinUI.UI.Animations.FrameworkLayer layer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder.Translation(CommunityToolkit.WinUI.UI.Animations.Axis,System.Double,System.Nullable{System.Double},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{CommunityToolkit.WinUI.UI.Animations.RepeatOption},CommunityToolkit.WinUI.UI.Animations.EasingType,Microsoft.UI.Xaml.Media.Animation.EasingMode,CommunityToolkit.WinUI.UI.Animations.FrameworkLayer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translation (axis As Axis, to As Double, Optional from As Nullable(Of Double) = Nothing, Optional delay As Nullable(Of TimeSpan) = Nothing, Optional duration As Nullable(Of TimeSpan) = Nothing, Optional repeat As Nullable(Of RepeatOption) = Nothing, Optional easingType As EasingType = CommunityToolkit.WinUI.UI.Animations.EasingType.Default, Optional easingMode As EasingMode = Microsoft.UI.Xaml.Media.Animation.EasingMode.EaseInOut, Optional layer As FrameworkLayer = CommunityToolkit.WinUI.UI.Animations.FrameworkLayer.Composition) As AnimationBuilder" />
      <MemberSignature Language="F#" Value="member this.Translation : CommunityToolkit.WinUI.UI.Animations.Axis * double * Nullable&lt;double&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;TimeSpan&gt; * Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt; * CommunityToolkit.WinUI.UI.Animations.EasingType * Microsoft.UI.Xaml.Media.Animation.EasingMode * CommunityToolkit.WinUI.UI.Animations.FrameworkLayer -&gt; CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" Usage="animationBuilder.Translation (axis, to, from, delay, duration, repeat, easingType, easingMode, layer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.UI.Animations.AnimationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="CommunityToolkit.WinUI.UI.Animations.Axis" />
        <Parameter Name="to" Type="System.Double" />
        <Parameter Name="from" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="delay" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="repeat" Type="System.Nullable&lt;CommunityToolkit.WinUI.UI.Animations.RepeatOption&gt;" />
        <Parameter Name="easingType" Type="CommunityToolkit.WinUI.UI.Animations.EasingType" />
        <Parameter Name="easingMode" Type="Microsoft.UI.Xaml.Media.Animation.EasingMode" />
        <Parameter Name="layer" Type="CommunityToolkit.WinUI.UI.Animations.FrameworkLayer" />
      </Parameters>
      <Docs>
        <param name="axis">The target translation axis to animate.</param>
        <param name="to">The final value for the animation.</param>
        <param name="from">The optional starting value for the animation.</param>
        <param name="delay">The optional initial delay for the animation.</param>
        <param name="duration">The optional animation duration.</param>
        <param name="repeat">The optional repeat mode (defaults to once).</param>
        <param name="easingType">The optional easing function type for the animation.</param>
        <param name="easingMode">The optional easing function mode for the animation.</param>
        <param name="layer">The target framework layer to animate.</param>
        <summary>
            Adds a new translation animation for a single axis to the current schedule.
            </summary>
        <returns>The current <see cref="T:CommunityToolkit.WinUI.UI.Animations.AnimationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
