<Type Name="TileContentBuilder" FullName="CommunityToolkit.WinUI.Notifications.TileContentBuilder">
  <TypeSignature Language="C#" Value="public class TileContentBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TileContentBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class TileContentBuilder" />
  <TypeSignature Language="F#" Value="type TileContentBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Builder class used to create <see cref="T:CommunityToolkit.WinUI.Notifications.TileContent" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TileContentBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAdaptiveTileVisualChild">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder AddAdaptiveTileVisualChild (CommunityToolkit.WinUI.Notifications.ITileBindingContentAdaptiveChild child, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder AddAdaptiveTileVisualChild(class CommunityToolkit.WinUI.Notifications.ITileBindingContentAdaptiveChild child, valuetype CommunityToolkit.WinUI.Notifications.TileSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.AddAdaptiveTileVisualChild(CommunityToolkit.WinUI.Notifications.ITileBindingContentAdaptiveChild,CommunityToolkit.WinUI.Notifications.TileSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAdaptiveTileVisualChild (child As ITileBindingContentAdaptiveChild, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.AddAdaptiveTileVisualChild : CommunityToolkit.WinUI.Notifications.ITileBindingContentAdaptiveChild * CommunityToolkit.WinUI.Notifications.TileSize -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.AddAdaptiveTileVisualChild (child, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="CommunityToolkit.WinUI.Notifications.ITileBindingContentAdaptiveChild" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
      </Parameters>
      <Docs>
        <param name="child">An adaptive child to add</param>
        <param name="size">Tile size that the adaptive child should be added to. Default to all currently supported tile size.</param>
        <summary>
            Add an adaptive child to the tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>
            This can be used to add Group and Subgroup to the tile.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder AddText (string text, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide, CommunityToolkit.WinUI.Notifications.AdaptiveTextStyle? hintStyle = default, bool? hintWrap = default, int? hintMaxLines = default, int? hintMinLines = default, CommunityToolkit.WinUI.Notifications.AdaptiveTextAlign? hintAlign = default, string language = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder AddText(string text, valuetype CommunityToolkit.WinUI.Notifications.TileSize size, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.Notifications.AdaptiveTextStyle&gt; hintStyle, valuetype System.Nullable`1&lt;bool&gt; hintWrap, valuetype System.Nullable`1&lt;int32&gt; hintMaxLines, valuetype System.Nullable`1&lt;int32&gt; hintMinLines, valuetype System.Nullable`1&lt;valuetype CommunityToolkit.WinUI.Notifications.AdaptiveTextAlign&gt; hintAlign, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.AddText(System.String,CommunityToolkit.WinUI.Notifications.TileSize,System.Nullable{CommunityToolkit.WinUI.Notifications.AdaptiveTextStyle},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{CommunityToolkit.WinUI.Notifications.AdaptiveTextAlign},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddText (text As String, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide, Optional hintStyle As Nullable(Of AdaptiveTextStyle) = Nothing, Optional hintWrap As Nullable(Of Boolean) = Nothing, Optional hintMaxLines As Nullable(Of Integer) = Nothing, Optional hintMinLines As Nullable(Of Integer) = Nothing, Optional hintAlign As Nullable(Of AdaptiveTextAlign) = Nothing, Optional language As String = Nothing) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.AddText : string * CommunityToolkit.WinUI.Notifications.TileSize * Nullable&lt;CommunityToolkit.WinUI.Notifications.AdaptiveTextStyle&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;CommunityToolkit.WinUI.Notifications.AdaptiveTextAlign&gt; * string -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.AddText (text, size, hintStyle, hintWrap, hintMaxLines, hintMinLines, hintAlign, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
        <Parameter Name="hintStyle" Type="System.Nullable&lt;CommunityToolkit.WinUI.Notifications.AdaptiveTextStyle&gt;" />
        <Parameter Name="hintWrap" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hintMaxLines" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="hintMinLines" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="hintAlign" Type="System.Nullable&lt;CommunityToolkit.WinUI.Notifications.AdaptiveTextAlign&gt;" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Custom text to display on the tile.</param>
        <param name="size">The tile size that the custom text would be added to. Default to all currently supported tile size.</param>
        <param name="hintStyle">Style that controls the text's font size, weight, and opacity.</param>
        <param name="hintWrap">Indicating whether text wrapping is enabled. For Tiles, this is false by default.</param>
        <param name="hintMaxLines">The maximum number of lines the text element is allowed to display. For Tiles, this is infinity by default</param>
        <param name="hintMinLines">The minimum number of lines the text element must display.</param>
        <param name="hintAlign">The horizontal alignment of the text</param>
        <param name="language">
            The target locale of the XML payload, specified as a BCP-47 language tags such as "en-US" or "fr-FR". The locale specified here overrides any other specified locale, such as that in binding or visual.
            </param>
        <summary>
            Add a custom text that will appear on the tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTile">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder AddTile (CommunityToolkit.WinUI.Notifications.TileSize size, CommunityToolkit.WinUI.Notifications.ITileBindingContent tileContent = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder AddTile(valuetype CommunityToolkit.WinUI.Notifications.TileSize size, class CommunityToolkit.WinUI.Notifications.ITileBindingContent tileContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.AddTile(CommunityToolkit.WinUI.Notifications.TileSize,CommunityToolkit.WinUI.Notifications.ITileBindingContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTile (size As TileSize, Optional tileContent As ITileBindingContent = Nothing) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.AddTile : CommunityToolkit.WinUI.Notifications.TileSize * CommunityToolkit.WinUI.Notifications.ITileBindingContent -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.AddTile (size, tileContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
        <Parameter Name="tileContent" Type="CommunityToolkit.WinUI.Notifications.ITileBindingContent" />
      </Parameters>
      <Docs>
        <param name="size">The size of tile that the notification will be displayed on.</param>
        <param name="tileContent">Specialized tile content. Use for special tile template. Default to NULL.</param>
        <summary>
            Add a tile layout size that the notification will be displayed on.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllSize">
      <MemberSignature Language="C#" Value="public const CommunityToolkit.WinUI.Notifications.TileSize AllSize = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype CommunityToolkit.WinUI.Notifications.TileSize AllSize = (15)" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.Notifications.TileContentBuilder.AllSize" />
      <MemberSignature Language="VB.NET" Value="Public Const AllSize As TileSize  = 15" />
      <MemberSignature Language="F#" Value="val mutable AllSize : CommunityToolkit.WinUI.Notifications.TileSize" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.AllSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileSize</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>
            Flag used to create all tile size (Small , Medium, Large and Wide)
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContent Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.Notifications.TileContent Content" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.TileContentBuilder.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As TileContent" />
      <MemberSignature Language="F#" Value="member this.Content : CommunityToolkit.WinUI.Notifications.TileContent" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets internal instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContent" />. This is equivalent to the call to <see cref="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.GetTileContent" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContactTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentContact CreateContactTileContent (Uri contactImageUri, string contactName, string contactImageAltText = default, bool? contactImageAddImageQuery = default, string textLanguage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentContact CreateContactTileContent(class System.Uri contactImageUri, string contactName, string contactImageAltText, valuetype System.Nullable`1&lt;bool&gt; contactImageAddImageQuery, string textLanguage) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreateContactTileContent(System.Uri,System.String,System.String,System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateContactTileContent (contactImageUri As Uri, contactName As String, Optional contactImageAltText As String = Nothing, Optional contactImageAddImageQuery As Nullable(Of Boolean) = Nothing, Optional textLanguage As String = Nothing) As TileBindingContentContact" />
      <MemberSignature Language="F#" Value="static member CreateContactTileContent : Uri * string * string * Nullable&lt;bool&gt; * string -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentContact" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreateContactTileContent (contactImageUri, contactName, contactImageAltText, contactImageAddImageQuery, textLanguage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contactImageUri" Type="System.Uri" />
        <Parameter Name="contactName" Type="System.String" />
        <Parameter Name="contactImageAltText" Type="System.String" />
        <Parameter Name="contactImageAddImageQuery" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="textLanguage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contactImageUri">Source for the contact picture</param>
        <param name="contactName">Name of the contact</param>
        <param name="contactImageAltText">A description of the contact image, for users of assistive technologies.</param>
        <param name="contactImageAddImageQuery">Indicating whether Windows should append a query string to the image URI supplied in the Tile notification.</param>
        <param name="textLanguage">Gets or sets the target locale of the XML payload, specified as a BCP-47 language tags such as "en-US" or "fr-FR". The locale specified here overrides any other specified locale, such as that in binding or visual.</param>
        <summary>
            Helper method for creating a tile notification content for using Contact tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentContact" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIconicTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentIconic CreateIconicTileContent (Uri iconImageUri, string iconImageAltText = default, bool? iconImageAddImageQuery = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentIconic CreateIconicTileContent(class System.Uri iconImageUri, string iconImageAltText, valuetype System.Nullable`1&lt;bool&gt; iconImageAddImageQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreateIconicTileContent(System.Uri,System.String,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateIconicTileContent (iconImageUri As Uri, Optional iconImageAltText As String = Nothing, Optional iconImageAddImageQuery As Nullable(Of Boolean) = Nothing) As TileBindingContentIconic" />
      <MemberSignature Language="F#" Value="static member CreateIconicTileContent : Uri * string * Nullable&lt;bool&gt; -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentIconic" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreateIconicTileContent (iconImageUri, iconImageAltText, iconImageAddImageQuery)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentIconic</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iconImageUri" Type="System.Uri" />
        <Parameter Name="iconImageAltText" Type="System.String" />
        <Parameter Name="iconImageAddImageQuery" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="iconImageUri">Source of the icon image.</param>
        <param name="iconImageAltText">A description of the icon image, for users of assistive technologies.</param>
        <param name="iconImageAddImageQuery">Indicating whether Windows should append a query string to the image URI supplied in the Tile notification.</param>
        <summary>
            Helper method for creating a tile notification content for using Iconic tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentIconic" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePeopleTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentPeople CreatePeopleTileContent (System.Collections.Generic.IEnumerable&lt;CommunityToolkit.WinUI.Notifications.TileBasicImage&gt; peoplePictures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentPeople CreatePeopleTileContent(class System.Collections.Generic.IEnumerable`1&lt;class CommunityToolkit.WinUI.Notifications.TileBasicImage&gt; peoplePictures) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePeopleTileContent(System.Collections.Generic.IEnumerable{CommunityToolkit.WinUI.Notifications.TileBasicImage})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePeopleTileContent (peoplePictures As IEnumerable(Of TileBasicImage)) As TileBindingContentPeople" />
      <MemberSignature Language="F#" Value="static member CreatePeopleTileContent : seq&lt;CommunityToolkit.WinUI.Notifications.TileBasicImage&gt; -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentPeople" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePeopleTileContent peoplePictures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentPeople</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peoplePictures" Type="System.Collections.Generic.IEnumerable&lt;CommunityToolkit.WinUI.Notifications.TileBasicImage&gt;" />
      </Parameters>
      <Docs>
        <param name="peoplePictures">Pictures that will be used on the people tile.</param>
        <summary>
            Helper method for creating a tile notification content for using People tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentPeople" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePeopleTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentPeople CreatePeopleTileContent (params Uri[] peoplePictureSources);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentPeople CreatePeopleTileContent(class System.Uri[] peoplePictureSources) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePeopleTileContent(System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePeopleTileContent (ParamArray peoplePictureSources As Uri()) As TileBindingContentPeople" />
      <MemberSignature Language="F#" Value="static member CreatePeopleTileContent : Uri[] -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentPeople" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePeopleTileContent peoplePictureSources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentPeople</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peoplePictureSources" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peoplePictureSources">Sources of pictures that will be used on the people tile.</param>
        <summary>
            Helper method for creating a tile notification content for using People tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentPeople" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePeopleTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentPeople CreatePeopleTileContent (params (Uri source, string imageAltText, bool? addImageQuery)[] peoplePictures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentPeople CreatePeopleTileContent(valuetype System.ValueTuple`3&lt;class System.Uri, string, valuetype System.Nullable`1&lt;bool&gt;&gt;[] peoplePictures) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePeopleTileContent(System.ValueTuple{System.Uri,System.String,System.Nullable{System.Boolean}}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePeopleTileContent (ParamArray peoplePictures As ValueTuple(Of Uri, String, Nullable(Of Boolean))()) As TileBindingContentPeople" />
      <MemberSignature Language="F#" Value="static member CreatePeopleTileContent : ValueTuple&lt;Uri, string, Nullable&lt;bool&gt;&gt;[] -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentPeople" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePeopleTileContent peoplePictures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentPeople</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peoplePictures" Type="System.ValueTuple&lt;System.Uri,System.String,System.Nullable&lt;System.Boolean&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "source", "imageAltText", "addImageQuery" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "source", "imageAltText", "addImageQuery" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="peoplePictures">Sources of pictures with description and image query indicator that will be used on the people tile.</param>
        <summary>
            Helper method for creating a tile notification content for using People tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentPeople" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePhotosTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos CreatePhotosTileContent (System.Collections.Generic.IEnumerable&lt;CommunityToolkit.WinUI.Notifications.TileBasicImage&gt; photos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos CreatePhotosTileContent(class System.Collections.Generic.IEnumerable`1&lt;class CommunityToolkit.WinUI.Notifications.TileBasicImage&gt; photos) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePhotosTileContent(System.Collections.Generic.IEnumerable{CommunityToolkit.WinUI.Notifications.TileBasicImage})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePhotosTileContent (photos As IEnumerable(Of TileBasicImage)) As TileBindingContentPhotos" />
      <MemberSignature Language="F#" Value="static member CreatePhotosTileContent : seq&lt;CommunityToolkit.WinUI.Notifications.TileBasicImage&gt; -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePhotosTileContent photos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="photos" Type="System.Collections.Generic.IEnumerable&lt;CommunityToolkit.WinUI.Notifications.TileBasicImage&gt;" />
      </Parameters>
      <Docs>
        <param name="photos">Pictures that will be used for the photos tile.</param>
        <summary>
            Helper method for creating a tile notification content for using Photos tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePhotosTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos CreatePhotosTileContent (params Uri[] photoSources);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos CreatePhotosTileContent(class System.Uri[] photoSources) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePhotosTileContent(System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePhotosTileContent (ParamArray photoSources As Uri()) As TileBindingContentPhotos" />
      <MemberSignature Language="F#" Value="static member CreatePhotosTileContent : Uri[] -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePhotosTileContent photoSources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="photoSources" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="photoSources">Sources of pictures that will be used on the photos tile.</param>
        <summary>
            Helper method for creating a tile notification content for using Photos tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePhotosTileContent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos CreatePhotosTileContent (params (Uri source, string imageAltText, bool? addImageQuery)[] photos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos CreatePhotosTileContent(valuetype System.ValueTuple`3&lt;class System.Uri, string, valuetype System.Nullable`1&lt;bool&gt;&gt;[] photos) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePhotosTileContent(System.ValueTuple{System.Uri,System.String,System.Nullable{System.Boolean}}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePhotosTileContent (ParamArray photos As ValueTuple(Of Uri, String, Nullable(Of Boolean))()) As TileBindingContentPhotos" />
      <MemberSignature Language="F#" Value="static member CreatePhotosTileContent : ValueTuple&lt;Uri, string, Nullable&lt;bool&gt;&gt;[] -&gt; CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos" Usage="CommunityToolkit.WinUI.Notifications.TileContentBuilder.CreatePhotosTileContent photos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="photos" Type="System.ValueTuple&lt;System.Uri,System.String,System.Nullable&lt;System.Boolean&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "source", "imageAltText", "addImageQuery" })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "source", "imageAltText", "addImageQuery" })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="photos">Sources of pictures with description and addImageQuery indicator that will be used for the photos tile.</param>
        <summary>
            Helper method for creating a tile notification content for using Photos tile template.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBindingContentPhotos" /> represent a payload of a tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTileContent">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContent GetTileContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContent GetTileContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.GetTileContent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTileContent () As TileContent" />
      <MemberSignature Language="F#" Value="member this.GetTileContent : unit -&gt; CommunityToolkit.WinUI.Notifications.TileContent" Usage="tileContentBuilder.GetTileContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContent" /> that has been built by the builder with specified configuration so far.
            </summary>
        <returns>An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContent" /> that can be used to create tile notification.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActivationArgument">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetActivationArgument (string args, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetActivationArgument(string args, valuetype CommunityToolkit.WinUI.Notifications.TileSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetActivationArgument(System.String,CommunityToolkit.WinUI.Notifications.TileSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetActivationArgument (args As String, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetActivationArgument : string * CommunityToolkit.WinUI.Notifications.TileSize -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetActivationArgument (args, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
      </Parameters>
      <Docs>
        <param name="args">App-Defined custom arguments that will be passed in when the user click on the tile when this tile notification is being displayed.</param>
        <param name="size">The tile size that the custom argument should be applied to. Default to all currently supported tile size.</param>
        <summary>
            Set the tile's activation arguments for tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundImage">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetBackgroundImage (CommunityToolkit.WinUI.Notifications.TileBackgroundImage backgroundImage, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetBackgroundImage(class CommunityToolkit.WinUI.Notifications.TileBackgroundImage backgroundImage, valuetype CommunityToolkit.WinUI.Notifications.TileSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetBackgroundImage(CommunityToolkit.WinUI.Notifications.TileBackgroundImage,CommunityToolkit.WinUI.Notifications.TileSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBackgroundImage (backgroundImage As TileBackgroundImage, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetBackgroundImage : CommunityToolkit.WinUI.Notifications.TileBackgroundImage * CommunityToolkit.WinUI.Notifications.TileSize -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetBackgroundImage (backgroundImage, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backgroundImage" Type="CommunityToolkit.WinUI.Notifications.TileBackgroundImage" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
      </Parameters>
      <Docs>
        <param name="backgroundImage">An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileBackgroundImage" /> as the background image for the tile.</param>
        <param name="size">The tile size that the background image should be applied to. Default to all currently supported tile size.</param>
        <summary>
            Set the optional background image that stays behind the tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundImage">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetBackgroundImage (Uri imageUri, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide, string alternateText = default, bool? addImageQuery = default, int? hintOverlay = default, CommunityToolkit.WinUI.Notifications.TileBackgroundImageCrop hintCrop = CommunityToolkit.WinUI.Notifications.TileBackgroundImageCrop.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetBackgroundImage(class System.Uri imageUri, valuetype CommunityToolkit.WinUI.Notifications.TileSize size, string alternateText, valuetype System.Nullable`1&lt;bool&gt; addImageQuery, valuetype System.Nullable`1&lt;int32&gt; hintOverlay, valuetype CommunityToolkit.WinUI.Notifications.TileBackgroundImageCrop hintCrop) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetBackgroundImage(System.Uri,CommunityToolkit.WinUI.Notifications.TileSize,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},CommunityToolkit.WinUI.Notifications.TileBackgroundImageCrop)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBackgroundImage (imageUri As Uri, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide, Optional alternateText As String = Nothing, Optional addImageQuery As Nullable(Of Boolean) = Nothing, Optional hintOverlay As Nullable(Of Integer) = Nothing, Optional hintCrop As TileBackgroundImageCrop = CommunityToolkit.WinUI.Notifications.TileBackgroundImageCrop.Default) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetBackgroundImage : Uri * CommunityToolkit.WinUI.Notifications.TileSize * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * CommunityToolkit.WinUI.Notifications.TileBackgroundImageCrop -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetBackgroundImage (imageUri, size, alternateText, addImageQuery, hintOverlay, hintCrop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageUri" Type="System.Uri" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
        <Parameter Name="alternateText" Type="System.String" />
        <Parameter Name="addImageQuery" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hintOverlay" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="hintCrop" Type="CommunityToolkit.WinUI.Notifications.TileBackgroundImageCrop" />
      </Parameters>
      <Docs>
        <param name="imageUri">Source of the background image</param>
        <param name="size">The tile size that the background image should be applied to. Default to all currently supported tile size.</param>
        <param name="alternateText">Description of the background image, for user of assistance technology</param>
        <param name="addImageQuery">
            Indicating whether Windows should append a query string to the image URI supplied in the Tile notification.
            Use this attribute if your server hosts images and can handle query strings, either by retrieving an image variant based on the query strings or by ignoring the query string and returning the image as specified without the query string.
            This query string specifies scale, contrast setting, and language.
            </param>
        <param name="hintOverlay">The opacity of the black overlay on the background image.</param>
        <param name="hintCrop">Desired cropping of the image.</param>
        <summary>
            Set the optional background image that stays behind the tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBranding">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetBranding (CommunityToolkit.WinUI.Notifications.TileBranding branding, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetBranding(valuetype CommunityToolkit.WinUI.Notifications.TileBranding branding, valuetype CommunityToolkit.WinUI.Notifications.TileSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetBranding(CommunityToolkit.WinUI.Notifications.TileBranding,CommunityToolkit.WinUI.Notifications.TileSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBranding (branding As TileBranding, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetBranding : CommunityToolkit.WinUI.Notifications.TileBranding * CommunityToolkit.WinUI.Notifications.TileSize -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetBranding (branding, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="branding" Type="CommunityToolkit.WinUI.Notifications.TileBranding" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
      </Parameters>
      <Docs>
        <param name="branding">How branding should appear on the tile</param>
        <param name="size">The tile size that the <paramref name="branding" /> parameter should be applied to. Default to all currently supported tile size.</param>
        <summary>
            Set how the tile notification should display the application branding.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayName">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetDisplayName (string displayName, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetDisplayName(string displayName, valuetype CommunityToolkit.WinUI.Notifications.TileSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetDisplayName(System.String,CommunityToolkit.WinUI.Notifications.TileSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDisplayName (displayName As String, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetDisplayName : string * CommunityToolkit.WinUI.Notifications.TileSize -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetDisplayName (displayName, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
      </Parameters>
      <Docs>
        <param name="displayName">Custom name to display on the tile in place of the application's name</param>
        <param name="size">The tile size that <paramref name="displayName" /> parameter should be applied to. Default to all currently supported tile size.</param>
        <summary>
            Set the name that will be used to override the application's name on the tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPeekImage">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetPeekImage (CommunityToolkit.WinUI.Notifications.TilePeekImage peekImage, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetPeekImage(class CommunityToolkit.WinUI.Notifications.TilePeekImage peekImage, valuetype CommunityToolkit.WinUI.Notifications.TileSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetPeekImage(CommunityToolkit.WinUI.Notifications.TilePeekImage,CommunityToolkit.WinUI.Notifications.TileSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPeekImage (peekImage As TilePeekImage, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetPeekImage : CommunityToolkit.WinUI.Notifications.TilePeekImage * CommunityToolkit.WinUI.Notifications.TileSize -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetPeekImage (peekImage, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peekImage" Type="CommunityToolkit.WinUI.Notifications.TilePeekImage" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
      </Parameters>
      <Docs>
        <param name="peekImage">An instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TilePeekImage" /> for the Tile's peek image </param>
        <param name="size">The tile size that the peek image should be applied to. Default to all currently supported tile size.</param>
        <summary>
            Set the Tile's Peek Image that animate from the top of the tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPeekImage">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetPeekImage (Uri imageUri, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide, string alternateText = default, bool? addImageQuery = default, int? hintOverlay = default, CommunityToolkit.WinUI.Notifications.TilePeekImageCrop hintCrop = CommunityToolkit.WinUI.Notifications.TilePeekImageCrop.Default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetPeekImage(class System.Uri imageUri, valuetype CommunityToolkit.WinUI.Notifications.TileSize size, string alternateText, valuetype System.Nullable`1&lt;bool&gt; addImageQuery, valuetype System.Nullable`1&lt;int32&gt; hintOverlay, valuetype CommunityToolkit.WinUI.Notifications.TilePeekImageCrop hintCrop) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetPeekImage(System.Uri,CommunityToolkit.WinUI.Notifications.TileSize,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},CommunityToolkit.WinUI.Notifications.TilePeekImageCrop)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPeekImage (imageUri As Uri, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide, Optional alternateText As String = Nothing, Optional addImageQuery As Nullable(Of Boolean) = Nothing, Optional hintOverlay As Nullable(Of Integer) = Nothing, Optional hintCrop As TilePeekImageCrop = CommunityToolkit.WinUI.Notifications.TilePeekImageCrop.Default) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetPeekImage : Uri * CommunityToolkit.WinUI.Notifications.TileSize * string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * CommunityToolkit.WinUI.Notifications.TilePeekImageCrop -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetPeekImage (imageUri, size, alternateText, addImageQuery, hintOverlay, hintCrop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageUri" Type="System.Uri" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
        <Parameter Name="alternateText" Type="System.String" />
        <Parameter Name="addImageQuery" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="hintOverlay" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="hintCrop" Type="CommunityToolkit.WinUI.Notifications.TilePeekImageCrop" />
      </Parameters>
      <Docs>
        <param name="imageUri">Source of the peek image</param>
        <param name="size">The tile size that the peek image should be applied to. Default to all currently supported tile size.</param>
        <param name="alternateText">Description of the peek image, for user of assistance technology</param>
        <param name="addImageQuery">
            Indicating whether Windows should append a query string to the image URI supplied in the Tile notification.
            Use this attribute if your server hosts images and can handle query strings, either by retrieving an image variant based on the query strings or by ignoring the query string and returning the image as specified without the query string.
            This query string specifies scale, contrast setting, and language.
            </param>
        <param name="hintOverlay">The opacity of the black overlay on the peek image.</param>
        <param name="hintCrop">Desired cropping of the image.</param>
        <summary>
            Set the Tile's Peek Image that animate from the top of the tile notification.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextStacking">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.TileContentBuilder SetTextStacking (CommunityToolkit.WinUI.Notifications.TileTextStacking textStacking, CommunityToolkit.WinUI.Notifications.TileSize size = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CommunityToolkit.WinUI.Notifications.TileContentBuilder SetTextStacking(valuetype CommunityToolkit.WinUI.Notifications.TileTextStacking textStacking, valuetype CommunityToolkit.WinUI.Notifications.TileSize size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.TileContentBuilder.SetTextStacking(CommunityToolkit.WinUI.Notifications.TileTextStacking,CommunityToolkit.WinUI.Notifications.TileSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTextStacking (textStacking As TileTextStacking, Optional size As TileSize = CommunityToolkit.WinUI.Notifications.TileSize.Large | CommunityToolkit.WinUI.Notifications.TileSize.Medium | CommunityToolkit.WinUI.Notifications.TileSize.Small | CommunityToolkit.WinUI.Notifications.TileSize.Wide) As TileContentBuilder" />
      <MemberSignature Language="F#" Value="member this.SetTextStacking : CommunityToolkit.WinUI.Notifications.TileTextStacking * CommunityToolkit.WinUI.Notifications.TileSize -&gt; CommunityToolkit.WinUI.Notifications.TileContentBuilder" Usage="tileContentBuilder.SetTextStacking (textStacking, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.TileContentBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textStacking" Type="CommunityToolkit.WinUI.Notifications.TileTextStacking" />
        <Parameter Name="size" Type="CommunityToolkit.WinUI.Notifications.TileSize" />
      </Parameters>
      <Docs>
        <param name="textStacking">Text Stacking Option</param>
        <param name="size">The tile size that the peek image should be applied to. Default to all currently supported tile size.</param>
        <summary>
            Set the text stacking (vertical alignment) of the entire binding element.
            </summary>
        <returns>The current instance of <see cref="T:CommunityToolkit.WinUI.Notifications.TileContentBuilder" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
