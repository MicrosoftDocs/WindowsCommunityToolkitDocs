<Type Name="AdaptiveSubgroup" FullName="CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup">
  <TypeSignature Language="C#" Value="public sealed class AdaptiveSubgroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AdaptiveSubgroup extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AdaptiveSubgroup" />
  <TypeSignature Language="F#" Value="type AdaptiveSubgroup = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Subgroups are vertical columns that can contain text and images. Supported on Tiles since RTM. Supported on Toasts since Anniversary Update.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AdaptiveSubgroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;CommunityToolkit.WinUI.Notifications.IAdaptiveSubgroupChild&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class CommunityToolkit.WinUI.Notifications.IAdaptiveSubgroupChild&gt; Children" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As IList(Of IAdaptiveSubgroupChild)" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.Generic.IList&lt;CommunityToolkit.WinUI.Notifications.IAdaptiveSubgroupChild&gt;" Usage="CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;CommunityToolkit.WinUI.Notifications.IAdaptiveSubgroupChild&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of Children. <see cref="T:CommunityToolkit.WinUI.Notifications.AdaptiveText" /> and <see cref="T:CommunityToolkit.WinUI.Notifications.AdaptiveImage" /> are valid children of subgroups.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintTextStacking">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.AdaptiveSubgroupTextStacking HintTextStacking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CommunityToolkit.WinUI.Notifications.AdaptiveSubgroupTextStacking HintTextStacking" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup.HintTextStacking" />
      <MemberSignature Language="VB.NET" Value="Public Property HintTextStacking As AdaptiveSubgroupTextStacking" />
      <MemberSignature Language="F#" Value="member this.HintTextStacking : CommunityToolkit.WinUI.Notifications.AdaptiveSubgroupTextStacking with get, set" Usage="CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup.HintTextStacking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.AdaptiveSubgroupTextStacking</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the vertical alignment of this subgroup's content.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintWeight">
      <MemberSignature Language="C#" Value="public int? HintWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; HintWeight" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup.HintWeight" />
      <MemberSignature Language="VB.NET" Value="Public Property HintWeight As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.HintWeight : Nullable&lt;int&gt; with get, set" Usage="CommunityToolkit.WinUI.Notifications.AdaptiveSubgroup.HintWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the width of this subgroup column by specifying the weight, relative to the other subgroups.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
