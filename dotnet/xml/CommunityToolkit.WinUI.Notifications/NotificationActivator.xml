<Type Name="NotificationActivator" FullName="CommunityToolkit.WinUI.Notifications.NotificationActivator">
  <TypeSignature Language="C#" Value="public abstract class NotificationActivator : CommunityToolkit.WinUI.Notifications.NotificationActivator.INotificationActivationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NotificationActivator extends System.Object implements class CommunityToolkit.WinUI.Notifications.NotificationActivator/INotificationActivationCallback" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Notifications.NotificationActivator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NotificationActivator&#xA;Implements NotificationActivator.INotificationActivationCallback" />
  <TypeSignature Language="F#" Value="type NotificationActivator = class&#xA;    interface NotificationActivator.INotificationActivationCallback" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CommunityToolkit.WinUI.Notifications.NotificationActivator+INotificationActivationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("You can now subscribe to activation by simpy using the ToastNotificationManagerCompat.OnActivated event. We recommend deleting your NotificationActivator and switching to using the event.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("You can now subscribe to activation by simpy using the ToastNotificationManagerCompat.OnActivated event. We recommend deleting your NotificationActivator and switching to using the event.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Apps must implement this activator to handle notification activation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotificationActivator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.NotificationActivator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate (string appUserModelId, string invokedArgs, CommunityToolkit.WinUI.Notifications.NotificationActivator.NOTIFICATION_USER_INPUT_DATA[] data, uint dataCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate(string appUserModelId, string invokedArgs, valuetype CommunityToolkit.WinUI.Notifications.NotificationActivator/NOTIFICATION_USER_INPUT_DATA[] data, unsigned int32 dataCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.NotificationActivator.Activate(System.String,System.String,CommunityToolkit.WinUI.Notifications.NotificationActivator.NOTIFICATION_USER_INPUT_DATA[],System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate (appUserModelId As String, invokedArgs As String, data As NotificationActivator.NOTIFICATION_USER_INPUT_DATA(), dataCount As UInteger)" />
      <MemberSignature Language="F#" Value="abstract member Activate : string * string * CommunityToolkit.WinUI.Notifications.NotificationActivator.NOTIFICATION_USER_INPUT_DATA[] * uint32 -&gt; unit&#xA;override this.Activate : string * string * CommunityToolkit.WinUI.Notifications.NotificationActivator.NOTIFICATION_USER_INPUT_DATA[] * uint32 -&gt; unit" Usage="notificationActivator.Activate (appUserModelId, invokedArgs, data, dataCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CommunityToolkit.WinUI.Notifications.NotificationActivator.INotificationActivationCallback.Activate(System.String,System.String,CommunityToolkit.WinUI.Notifications.NotificationActivator.NOTIFICATION_USER_INPUT_DATA[],System.UInt32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appUserModelId" Type="System.String" />
        <Parameter Name="invokedArgs" Type="System.String" />
        <Parameter Name="data" Type="CommunityToolkit.WinUI.Notifications.NotificationActivator+NOTIFICATION_USER_INPUT_DATA[]" />
        <Parameter Name="dataCount" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="appUserModelId">To be added.</param>
        <param name="invokedArgs">To be added.</param>
        <param name="data">To be added.</param>
        <param name="dataCount">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="public abstract void OnActivated (string arguments, CommunityToolkit.WinUI.Notifications.NotificationUserInput userInput, string appUserModelId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActivated(string arguments, class CommunityToolkit.WinUI.Notifications.NotificationUserInput userInput, string appUserModelId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.NotificationActivator.OnActivated(System.String,CommunityToolkit.WinUI.Notifications.NotificationUserInput,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub OnActivated (arguments As String, userInput As NotificationUserInput, appUserModelId As String)" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : string * CommunityToolkit.WinUI.Notifications.NotificationUserInput * string -&gt; unit" Usage="notificationActivator.OnActivated (arguments, userInput, appUserModelId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.String" />
        <Parameter Name="userInput" Type="CommunityToolkit.WinUI.Notifications.NotificationUserInput" />
        <Parameter Name="appUserModelId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arguments">The arguments from the original notification. This is either the launch argument if the user clicked the body of your toast, or the arguments from a button on your toast.</param>
        <param name="userInput">Text and selection values that the user entered in your toast.</param>
        <param name="appUserModelId">Your AUMID.</param>
        <summary>
            This method will be called when the user clicks on a foreground or background activation on a toast. Parent app must implement this method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
