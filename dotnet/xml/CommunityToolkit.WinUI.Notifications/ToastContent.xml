<Type Name="ToastContent" FullName="CommunityToolkit.WinUI.Notifications.ToastContent">
  <TypeSignature Language="C#" Value="public sealed class ToastContent : CommunityToolkit.WinUI.Notifications.INotificationContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToastContent extends System.Object implements class CommunityToolkit.WinUI.Notifications.INotificationContent" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Notifications.ToastContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToastContent&#xA;Implements INotificationContent" />
  <TypeSignature Language="F#" Value="type ToastContent = class&#xA;    interface INotificationContent" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CommunityToolkit.WinUI.Notifications.INotificationContent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base Toast element, which contains at least a visual element.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToastContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.ToastContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.IToastActions Actions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.Notifications.IToastActions Actions" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.Actions" />
      <MemberSignature Language="VB.NET" Value="Public Property Actions As IToastActions" />
      <MemberSignature Language="F#" Value="member this.Actions : CommunityToolkit.WinUI.Notifications.IToastActions with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.IToastActions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets optional custom actions with buttons and inputs (using <see cref="T:CommunityToolkit.WinUI.Notifications.ToastActionsCustom" />)
            or optionally use the system-default snooze/dismiss controls (with <see cref="T:CommunityToolkit.WinUI.Notifications.ToastActionsSnoozeAndDismiss" />).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivationOptions">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastActivationOptions ActivationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.Notifications.ToastActivationOptions ActivationOptions" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.ActivationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivationOptions As ToastActivationOptions" />
      <MemberSignature Language="F#" Value="member this.ActivationOptions : CommunityToolkit.WinUI.Notifications.ToastActivationOptions with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.ActivationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastActivationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets additional options relating to activation of the toast notification. Requires Creators Updated
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivationType">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastActivationType ActivationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CommunityToolkit.WinUI.Notifications.ToastActivationType ActivationType" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.ActivationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivationType As ToastActivationType" />
      <MemberSignature Language="F#" Value="member this.ActivationType : CommunityToolkit.WinUI.Notifications.ToastActivationType with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.ActivationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastActivationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets what activation type will be used when the user clicks the body of this Toast.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; AdditionalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; AdditionalProperties" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.AdditionalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.AdditionalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.AdditionalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a dictionary where you can assign additional properties.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Audio">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastAudio Audio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.Notifications.ToastAudio Audio" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.Audio" />
      <MemberSignature Language="VB.NET" Value="Public Property Audio As ToastAudio" />
      <MemberSignature Language="F#" Value="member this.Audio : CommunityToolkit.WinUI.Notifications.ToastAudio with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.Audio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastAudio</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets custom audio options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayTimestamp">
      <MemberSignature Language="C#" Value="public DateTimeOffset? DisplayTimestamp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; DisplayTimestamp" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.DisplayTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayTimestamp As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.DisplayTimestamp : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.DisplayTimestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional custom time to use for the notification's timestamp, visible within Action Center.
            If provided, this date/time will be used on the notification instead of the date/time that the notification was received.
            Requires Creators Update
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastDuration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CommunityToolkit.WinUI.Notifications.ToastDuration Duration" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As ToastDuration" />
      <MemberSignature Language="F#" Value="member this.Duration : CommunityToolkit.WinUI.Notifications.ToastDuration with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastDuration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the amount of time the Toast should display. You typically should use the
            Scenario attribute instead, which impacts how long a Toast stays on screen.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContent">
      <MemberSignature Language="C#" Value="public string GetContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.ToastContent.GetContent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContent () As String" />
      <MemberSignature Language="F#" Value="abstract member GetContent : unit -&gt; string&#xA;override this.GetContent : unit -&gt; string" Usage="toastContent.GetContent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CommunityToolkit.WinUI.Notifications.INotificationContent.GetContent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves the notification XML content as a string, so that it can be sent with a HTTP POST in a push notification.
            </summary>
        <returns>The notification XML content as a string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public Windows.Data.Xml.Dom.XmlDocument GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Data.Xml.Dom.XmlDocument GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Notifications.ToastContent.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlDocument" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; Windows.Data.Xml.Dom.XmlDocument&#xA;override this.GetXml : unit -&gt; Windows.Data.Xml.Dom.XmlDocument" Usage="toastContent.GetXml " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CommunityToolkit.WinUI.Notifications.INotificationContent.GetXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Data.Xml.Dom.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves the notification XML content as a WinRT XmlDocument, so that it can be used with a local Toast notification's constructor on either <see cref="T:Windows.UI.Notifications.ToastNotification" /> or <see cref="T:Windows.UI.Notifications.ScheduledToastNotification" />.
            </summary>
        <returns>The notification XML content as a WinRT XmlDocument.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastHeader Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.Notifications.ToastHeader Header" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.Header" />
      <MemberSignature Language="VB.NET" Value="Public Property Header As ToastHeader" />
      <MemberSignature Language="F#" Value="member this.Header : CommunityToolkit.WinUI.Notifications.ToastHeader with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional header for the toast notification. Requires Creators Update
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintPeople">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastPeople HintPeople { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.Notifications.ToastPeople HintPeople" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.HintPeople" />
      <MemberSignature Language="VB.NET" Value="Public Property HintPeople As ToastPeople" />
      <MemberSignature Language="F#" Value="member this.HintPeople : CommunityToolkit.WinUI.Notifications.ToastPeople with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.HintPeople" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastPeople</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the person that this toast is related to. For more info, see the My People documentation. New in Fall Creators Update.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintToastId">
      <MemberSignature Language="C#" Value="public string HintToastId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HintToastId" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.HintToastId" />
      <MemberSignature Language="VB.NET" Value="Public Property HintToastId As String" />
      <MemberSignature Language="F#" Value="member this.HintToastId : string with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.HintToastId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an identifier used in telemetry to identify your category of toast notification. This should be something
            like "NewMessage", "AppointmentReminder", "Promo30Off", or "PleaseRate". In the upcoming toast telemetry dashboard
            in Dev Center, you will be able to view activation info filtered by toast identifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Launch">
      <MemberSignature Language="C#" Value="public string Launch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Launch" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.Launch" />
      <MemberSignature Language="VB.NET" Value="Public Property Launch As String" />
      <MemberSignature Language="F#" Value="member this.Launch : string with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.Launch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a string that is passed to the application when it is activated by the Toast.
            The format and contents of this string are defined by the app for its own use. When the user
            taps or clicks the Toast to launch its associated app, the launch string provides the context
            to the app that allows it to show the user a view relevant to the Toast content, rather than
            launching in its default way.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenario">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastScenario Scenario { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CommunityToolkit.WinUI.Notifications.ToastScenario Scenario" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.Scenario" />
      <MemberSignature Language="VB.NET" Value="Public Property Scenario As ToastScenario" />
      <MemberSignature Language="F#" Value="member this.Scenario : CommunityToolkit.WinUI.Notifications.ToastScenario with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.Scenario" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastScenario</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the scenario, to make the Toast behave like an alarm, reminder, or more.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public CommunityToolkit.WinUI.Notifications.ToastVisual Visual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CommunityToolkit.WinUI.Notifications.ToastVisual Visual" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Notifications.ToastContent.Visual" />
      <MemberSignature Language="VB.NET" Value="Public Property Visual As ToastVisual" />
      <MemberSignature Language="F#" Value="member this.Visual : CommunityToolkit.WinUI.Notifications.ToastVisual with get, set" Usage="CommunityToolkit.WinUI.Notifications.ToastContent.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Notifications</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Notifications.ToastVisual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the visual element (Required).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
