<Type Name="IBuffer&lt;T&gt;" FullName="CommunityToolkit.HighPerformance.Buffers.IBuffer&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IBuffer&lt;T&gt; : System.Buffers.IBufferWriter&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuffer`1&lt;T&gt; implements class System.Buffers.IBufferWriter`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.HighPerformance.Buffers.IBuffer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuffer(Of T)&#xA;Implements IBufferWriter(Of T)" />
  <TypeSignature Language="F#" Value="type IBuffer&lt;'T&gt; = interface&#xA;    interface IBufferWriter&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Buffers.IBufferWriter&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">The type of items in the current buffer.</typeparam>
    <summary>
            An interface that expands <see cref="T:System.Buffers.IBufferWriter`1" /> with the ability to also inspect
            the written data, and to reset the underlying buffer to write again from the start.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.HighPerformance.Buffers.IBuffer`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Capacity As Integer" />
      <MemberSignature Language="F#" Value="member this.Capacity : int" Usage="CommunityToolkit.HighPerformance.Buffers.IBuffer&lt;'T&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the total amount of space within the underlying buffer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.HighPerformance.Buffers.IBuffer`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iBuffer.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Clears the data written to the underlying buffer.
            </summary>
        <remarks>
            You must clear the <see cref="T:CommunityToolkit.HighPerformance.Buffers.IBuffer`1" /> instance before trying to re-use it.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeCapacity">
      <MemberSignature Language="C#" Value="public int FreeCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FreeCapacity" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.HighPerformance.Buffers.IBuffer`1.FreeCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FreeCapacity As Integer" />
      <MemberSignature Language="F#" Value="member this.FreeCapacity : int" Usage="CommunityToolkit.HighPerformance.Buffers.IBuffer&lt;'T&gt;.FreeCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrittenCount">
      <MemberSignature Language="C#" Value="public int WrittenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WrittenCount" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.HighPerformance.Buffers.IBuffer`1.WrittenCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrittenCount As Integer" />
      <MemberSignature Language="F#" Value="member this.WrittenCount : int" Usage="CommunityToolkit.HighPerformance.Buffers.IBuffer&lt;'T&gt;.WrittenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the amount of data written to the underlying buffer so far.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrittenMemory">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;T&gt; WrittenMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;!T&gt; WrittenMemory" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.HighPerformance.Buffers.IBuffer`1.WrittenMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrittenMemory As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="F#" Value="member this.WrittenMemory : ReadOnlyMemory&lt;'T&gt;" Usage="CommunityToolkit.HighPerformance.Buffers.IBuffer&lt;'T&gt;.WrittenMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrittenSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; WrittenSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;!T&gt; WrittenSpan" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.HighPerformance.Buffers.IBuffer`1.WrittenSpan" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrittenSpan As ReadOnlySpan(Of T)" />
      <MemberSignature Language="F#" Value="member this.WrittenSpan : ReadOnlySpan&lt;'T&gt;" Usage="CommunityToolkit.HighPerformance.Buffers.IBuffer&lt;'T&gt;.WrittenSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
