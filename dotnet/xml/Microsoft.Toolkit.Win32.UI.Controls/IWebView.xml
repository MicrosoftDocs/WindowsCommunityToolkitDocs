<Type Name="IWebView" FullName="Microsoft.Toolkit.Win32.UI.Controls.IWebView">
  <TypeSignature Language="C#" Value="public interface IWebView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebView" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebView" />
  <TypeSignature Language="F#" Value="type IWebView = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides a control that hosts HTML content in an app.
            </summary>
    <remarks>
            Subset of functionality from <see cref="T:Windows.Web.UI.IWebViewControl" /></remarks>
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyPressed">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlAcceleratorKeyPressedEventArgs&gt; AcceleratorKeyPressed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlAcceleratorKeyPressedEventArgs&gt; AcceleratorKeyPressed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.AcceleratorKeyPressed" />
      <MemberSignature Language="VB.NET" Value="Event AcceleratorKeyPressed As EventHandler(Of WebViewControlAcceleratorKeyPressedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.AcceleratorKeyPressed : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlAcceleratorKeyPressedEventArgs&gt; " Usage="member this.AcceleratorKeyPressed : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlAcceleratorKeyPressedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlAcceleratorKeyPressedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that is triggered when the accelerator key is pressed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitializeScript">
      <MemberSignature Language="C#" Value="public void AddInitializeScript (string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddInitializeScript(string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.AddInitializeScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitializeScript (script As String)" />
      <MemberSignature Language="F#" Value="abstract member AddInitializeScript : string -&gt; unit" Usage="iWebView.AddInitializeScript script" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="script">The script.</param>
        <summary>
            Adds the script to be loaded before any others on the page.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreLoadedScript">
      <MemberSignature Language="C#" Value="public void AddPreLoadedScript (string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPreLoadedScript(string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.AddPreLoadedScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPreLoadedScript (script As String)" />
      <MemberSignature Language="F#" Value="abstract member AddPreLoadedScript : string -&gt; unit" Usage="iWebView.AddPreLoadedScript script" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This item has been depreciated and will be removed in a future version. Use AddInitializeScript(string script) instead.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This item has been depreciated and will be removed in a future version. Use AddInitializeScript(string script) instead.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="script">The script.</param>
        <summary>
            Adds the script to be loaded before any others on the page.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether there is at least one page in the backward navigation history.
            </summary>
        <value>
          <c>true</c> if the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> can navigate backward; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether there is at least one page in the forward navigation history.
            </summary>
        <value>
          <c>true</c> if the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> can navigate forward; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iWebView.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Closes this instance.
            </summary>
        <remarks>Equivalent to calling <see cref="M:System.IDisposable.Dispose" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsFullScreenElement">
      <MemberSignature Language="C#" Value="public bool ContainsFullScreenElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsFullScreenElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.ContainsFullScreenElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsFullScreenElement As Boolean" />
      <MemberSignature Language="F#" Value="member this.ContainsFullScreenElement : bool" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.ContainsFullScreenElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> contains an element that supports full screen.
            </summary>
        <value>
          <see langword="true" /> if the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> contains an element that supports full screen; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsFullScreenElementChanged">
      <MemberSignature Language="C#" Value="event EventHandler&lt;object&gt; ContainsFullScreenElementChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;object&gt; ContainsFullScreenElementChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.ContainsFullScreenElementChanged" />
      <MemberSignature Language="VB.NET" Value="Event ContainsFullScreenElementChanged As EventHandler(Of Object) " />
      <MemberSignature Language="F#" Value="member this.ContainsFullScreenElementChanged : EventHandler&lt;obj&gt; " Usage="member this.ContainsFullScreenElementChanged : System.EventHandler&lt;System.obj&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the status of whether the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> currently contains a full screen element or not changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLoading">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; ContentLoading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; ContentLoading" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.ContentLoading" />
      <MemberSignature Language="VB.NET" Value="Event ContentLoading As EventHandler(Of WebViewControlContentLoadingEventArgs) " />
      <MemberSignature Language="F#" Value="member this.ContentLoading : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; " Usage="member this.ContentLoading : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> has started loading new content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentTitle">
      <MemberSignature Language="C#" Value="public string DocumentTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.DocumentTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentTitle As String" />
      <MemberSignature Language="F#" Value="member this.DocumentTitle : string" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.DocumentTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the title of the page currently displayed in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.
            </summary>
        <value>The page title.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DOMContentLoaded">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; DOMContentLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; DOMContentLoaded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.DOMContentLoaded" />
      <MemberSignature Language="VB.NET" Value="Event DOMContentLoaded As EventHandler(Of WebViewControlDOMContentLoadedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.DOMContentLoaded : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; " Usage="member this.DOMContentLoaded : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> finished parsing the current content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterpriseId">
      <MemberSignature Language="C#" Value="public string EnterpriseId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnterpriseId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.EnterpriseId" />
      <MemberSignature Language="VB.NET" Value="Public Property EnterpriseId As String" />
      <MemberSignature Language="F#" Value="member this.EnterpriseId : string with get, set" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.EnterpriseId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an enterprise ID for this process.
            </summary>
        <value>The enterprise ID of this process.</value>
        <remarks>Value can be set prior to the component being initialized.</remarks>
        <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcessOptions.EnterpriseId" />
      </Docs>
    </Member>
    <Member MemberName="FrameContentLoading">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; FrameContentLoading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; FrameContentLoading" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.FrameContentLoading" />
      <MemberSignature Language="VB.NET" Value="Event FrameContentLoading As EventHandler(Of WebViewControlContentLoadingEventArgs) " />
      <MemberSignature Language="F#" Value="member this.FrameContentLoading : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; " Usage="member this.FrameContentLoading : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlContentLoadingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a frame in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> has started loading new content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameDOMContentLoaded">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; FrameDOMContentLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; FrameDOMContentLoaded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.FrameDOMContentLoaded" />
      <MemberSignature Language="VB.NET" Value="Event FrameDOMContentLoaded As EventHandler(Of WebViewControlDOMContentLoadedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.FrameDOMContentLoaded : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; " Usage="member this.FrameDOMContentLoaded : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDOMContentLoadedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a frame in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> finished parsing its current content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameNavigationCompleted">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; FrameNavigationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; FrameNavigationCompleted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.FrameNavigationCompleted" />
      <MemberSignature Language="VB.NET" Value="Event FrameNavigationCompleted As EventHandler(Of WebViewControlNavigationCompletedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.FrameNavigationCompleted : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; " Usage="member this.FrameNavigationCompleted : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a frame in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> finished navigating to new content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameNavigationStarting">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; FrameNavigationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; FrameNavigationStarting" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.FrameNavigationStarting" />
      <MemberSignature Language="VB.NET" Value="Event FrameNavigationStarting As EventHandler(Of WebViewControlNavigationStartingEventArgs) " />
      <MemberSignature Language="F#" Value="member this.FrameNavigationStarting : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; " Usage="member this.FrameNavigationStarting : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a frame in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> navigates to new content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeferredPermissionRequestById">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDeferredPermissionRequest GetDeferredPermissionRequestById (uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDeferredPermissionRequest GetDeferredPermissionRequestById(unsigned int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.GetDeferredPermissionRequestById(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeferredPermissionRequestById (id As UInteger) As WebViewControlDeferredPermissionRequest" />
      <MemberSignature Language="F#" Value="abstract member GetDeferredPermissionRequestById : uint32 -&gt; Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDeferredPermissionRequest" Usage="iWebView.GetDeferredPermissionRequestById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDeferredPermissionRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="id">The <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequest.Id" /> of the deferred permission request.</param>
        <summary>
            Gets the deferred permission request with the specified <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequest.Id" />.
            </summary>
        <returns>
          <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlDeferredPermissionRequest" /> The deferred permission request with the specified <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequest.Id" />, or null if no permission request with the specified <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequest.Id" /> was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public bool GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Function GoBack () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member GoBack : unit -&gt; bool" Usage="iWebView.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Navigates the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> to the previous page in the navigation history.
            </summary>
        <returns>
          <c>true</c> if the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> navigation to the previous page in the navigation history is successful; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public bool GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Function GoForward () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member GoForward : unit -&gt; bool" Usage="iWebView.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Navigates the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> to the next page in the navigation history.
            </summary>
        <returns>
          <c>true</c> if the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> navigation to the next page in the navigation history is successful; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public string InvokeScript (string scriptName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string InvokeScript(string scriptName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.InvokeScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String) As String" />
      <MemberSignature Language="F#" Value="abstract member InvokeScript : string -&gt; string" Usage="iWebView.InvokeScript scriptName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName">Name of the script function to invoke.</param>
        <summary>
            Executes the specified script function from the currently loaded HTML, with no arguments, as a synchronous action.
            </summary>
        <returns>When this method returns, the <see cref="T:System.String" /> result of the script invocation.</returns>
        <remarks>To prevent malicious code from exploiting your app, be sure to call this method to invoke only scripts that you trust.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public string InvokeScript (string scriptName, System.Collections.Generic.IEnumerable&lt;string&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string InvokeScript(string scriptName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.InvokeScript(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String, arguments As IEnumerable(Of String)) As String" />
      <MemberSignature Language="F#" Value="abstract member InvokeScript : string * seq&lt;string&gt; -&gt; string" Usage="iWebView.InvokeScript (scriptName, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="scriptName">Name of the script function to invoke.</param>
        <param name="arguments">A string array that packages arguments to the script function.</param>
        <summary>
            Executes the specified script function from the currently loaded HTML, with no arguments, as a synchronous action.
            </summary>
        <returns>When this method returns, the <see cref="T:System.String" /> result of the script invocation.</returns>
        <remarks>
            To prevent malicious code from exploiting your app, be sure to call this method to invoke only scripts that you trust.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public string InvokeScript (string scriptName, params string[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string InvokeScript(string scriptName, string[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.InvokeScript(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String, ParamArray arguments As String()) As String" />
      <MemberSignature Language="F#" Value="abstract member InvokeScript : string * string[] -&gt; string" Usage="iWebView.InvokeScript (scriptName, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="scriptName">Name of the script function to invoke.</param>
        <param name="arguments">A string array that packages arguments to the script function.</param>
        <summary>
            Executes the specified script function from the currently loaded HTML, with no arguments, as a synchronous action.
            </summary>
        <returns>When this method returns, the <see cref="T:System.String" /> result of the script invocation.</returns>
        <remarks>
            To prevent malicious code from exploiting your app, be sure to call this method to invoke only scripts that you trust.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScriptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; InvokeScriptAsync (string scriptName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; InvokeScriptAsync(string scriptName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.InvokeScriptAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScriptAsync (scriptName As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member InvokeScriptAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iWebView.InvokeScriptAsync scriptName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName">Name of the script function to invoke.</param>
        <summary>
            Executes the specified script function from the currently loaded HTML, with no arguments, as an asynchronous action.
            </summary>
        <returns>When this method returns, the <see cref="T:System.String" /> result of the script invocation.</returns>
        <remarks>
            To prevent malicious code from exploiting your app, be sure to call this method to invoke only scripts that you trust.
            The invoked script can only return string values.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScriptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; InvokeScriptAsync (string scriptName, System.Collections.Generic.IEnumerable&lt;string&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; InvokeScriptAsync(string scriptName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.InvokeScriptAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScriptAsync (scriptName As String, arguments As IEnumerable(Of String)) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member InvokeScriptAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iWebView.InvokeScriptAsync (scriptName, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="scriptName">Name of the script function to invoke.</param>
        <param name="arguments">A string array that packages arguments to the script function.</param>
        <summary>
            Executes the specified script function from the currently loaded HTML, with no arguments, as an asynchronous action.
            </summary>
        <returns>When this method returns, the <see cref="T:System.String" /> result of the script invocation.</returns>
        <remarks>
            To prevent malicious code from exploiting your app, be sure to call this method to invoke only scripts that you trust.
            The invoked script can only return string values.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeScriptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; InvokeScriptAsync (string scriptName, params string[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; InvokeScriptAsync(string scriptName, string[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.InvokeScriptAsync(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScriptAsync (scriptName As String, ParamArray arguments As String()) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member InvokeScriptAsync : string * string[] -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iWebView.InvokeScriptAsync (scriptName, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="scriptName">Name of the script function to invoke.</param>
        <param name="arguments">A string array that packages arguments to the script function.</param>
        <summary>
            Executes the specified script function from the currently loaded HTML, with no arguments, as an asynchronous action.
            </summary>
        <returns>When this method returns, the <see cref="T:System.String" /> result of the script invocation.</returns>
        <remarks>
            To prevent malicious code from exploiting your app, be sure to call this method to invoke only scripts that you trust.
            The invoked script can only return string values.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndexedDBEnabled">
      <MemberSignature Language="C#" Value="public bool IsIndexedDBEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIndexedDBEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsIndexedDBEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsIndexedDBEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsIndexedDBEnabled : bool with get, set" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsIndexedDBEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the use of IndexedDB is allowed.
            </summary>
        <value>
          <c>true</c> if IndexedDB is allowed; otherwise, <c>false</c>. The default is <c>true</c>.</value>
        <remarks>To be added.</remarks>
        <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings.IsIndexedDBEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsJavaScriptEnabled">
      <MemberSignature Language="C#" Value="public bool IsJavaScriptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsJavaScriptEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsJavaScriptEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsJavaScriptEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsJavaScriptEnabled : bool with get, set" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsJavaScriptEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the use of JavaScript is allowed.
            </summary>
        <value> true if JavaScript is allowed in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />; otherwise, false. The default is true.</value>
        <remarks>To be added.</remarks>
        <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings.IsJavaScriptEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsPrivateNetworkClientServerCapabilityEnabled">
      <MemberSignature Language="C#" Value="public bool IsPrivateNetworkClientServerCapabilityEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivateNetworkClientServerCapabilityEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsPrivateNetworkClientServerCapabilityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrivateNetworkClientServerCapabilityEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPrivateNetworkClientServerCapabilityEnabled : bool with get, set" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsPrivateNetworkClientServerCapabilityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcess.IsPrivateNetworkClientServerCapabilityEnabled" /></summary>
        <value>
          <see langword="true" /> if this instance is private network client server capability enabled; otherwise, <see langword="false" />.</value>
        <remarks>Value can be set prior to the component being initialized.</remarks>
        <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcessOptions.PrivateNetworkClientServerCapability" />
      </Docs>
    </Member>
    <Member MemberName="IsScriptNotifyAllowed">
      <MemberSignature Language="C#" Value="public bool IsScriptNotifyAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsScriptNotifyAllowed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsScriptNotifyAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsScriptNotifyAllowed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsScriptNotifyAllowed : bool with get, set" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.IsScriptNotifyAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether <see cref="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.ScriptNotify" /> is allowed.
            </summary>
        <value>Whether <see cref="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.ScriptNotify" /> is allowed.</value>
        <remarks>To be added.</remarks>
        <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings.IsScriptNotifyAllowed" />
      </Docs>
    </Member>
    <Member MemberName="LongRunningScriptDetected">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs&gt; LongRunningScriptDetected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs&gt; LongRunningScriptDetected" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.LongRunningScriptDetected" />
      <MemberSignature Language="VB.NET" Value="Event LongRunningScriptDetected As EventHandler(Of WebViewControlLongRunningScriptDetectedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.LongRunningScriptDetected : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs&gt; " Usage="member this.LongRunningScriptDetected : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs periodically while the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> executes JavaScript, letting you halt the script.
            </summary>
        <remarks>
            Your app might appear unresponsive while scripts are running. This event provides an opportunity to interrupt a long-running
            script. To determine how long the script has been running, check the <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs.ExecutionTime" />
            property of the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs" /> object. To halt the script, set the event args
            <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs.StopPageScriptExecution" /> property to true. The halted script will
            not execute again unless it is reloaded during a subsequent <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> navigation.
            </remarks>
        <altmember cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs.ExecutionTime" />
        <altmember cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs.StopPageScriptExecution" />
        <altmember cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlLongRunningScriptDetectedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public void MoveFocus (Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusReason reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveFocus(valuetype Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusReason reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.MoveFocus(Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusReason)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFocus (reason As WebViewControlMoveFocusReason)" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusReason -&gt; unit" Usage="iWebView.MoveFocus reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusReason" />
      </Parameters>
      <Docs>
        <param name="reason">The reason.</param>
        <summary>
            Moves the focus.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusRequested">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusRequestedEventArgs&gt; MoveFocusRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusRequestedEventArgs&gt; MoveFocusRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.MoveFocusRequested" />
      <MemberSignature Language="VB.NET" Value="Event MoveFocusRequested As EventHandler(Of WebViewControlMoveFocusRequestedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.MoveFocusRequested : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusRequestedEventArgs&gt; " Usage="member this.MoveFocusRequested : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusRequestedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlMoveFocusRequestedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a focus move is requested.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigate(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As String)" />
      <MemberSignature Language="F#" Value="abstract member Navigate : string -&gt; unit" Usage="iWebView.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">The Uniform Resource Identifier (URI) to load.</param>
        <summary>
            Loads the HTML content at the specified Uniform Resource Identifier (URI).
            </summary>
        <remarks>To be added.</remarks>
        <see cref="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Navigate(System.String)" />
        <see cref="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As Uri)" />
      <MemberSignature Language="F#" Value="abstract member Navigate : Uri -&gt; unit" Usage="iWebView.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">The Uniform Resource Identifier (URI) to load.</param>
        <summary>
            Loads the HTML content at the specified Uniform Resource Identifier (URI).
            </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Uri" />
        <see cref="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Navigate(System.Uri)" />
        <see cref="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri requestUri, System.Net.Http.HttpMethod httpMethod, string content = default, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; headers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigate(class System.Uri requestUri, class System.Net.Http.HttpMethod httpMethod, string content, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Navigate(System.Uri,System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (requestUri As Uri, httpMethod As HttpMethod, Optional content As String = Nothing, Optional headers As IEnumerable(Of KeyValuePair(Of String, String)) = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Navigate : Uri * System.Net.Http.HttpMethod * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; unit" Usage="iWebView.Navigate (requestUri, httpMethod, content, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="httpMethod" Type="System.Net.Http.HttpMethod" />
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="requestUri">The Uniform Resource Identifier (URI) to send the request.</param>
        <param name="httpMethod">The HTTP method of the request.</param>
        <param name="content">Optional content to send with the request.</param>
        <param name="headers">Optional headers to send with the request.</param>
        <summary>
            Navigates the web view with the URI with a HTTP request and HTTP headers.
            </summary>
        <remarks>
            This method only supports <see cref="P:System.Net.Http.HttpMethod.Get" /> and <see cref="P:System.Net.Http.HttpMethod.Post" /> for the <paramref name="httpMethod" /> parameter.
            </remarks>
        <altmember cref="M:Windows.Web.UI.Interop.WebViewControl.NavigateWithHttpRequestMessage(Windows.Web.Http.HttpRequestMessage)" />
      </Docs>
    </Member>
    <Member MemberName="NavigateToLocal">
      <MemberSignature Language="C#" Value="public void NavigateToLocal (string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NavigateToLocal(string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigateToLocal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateToLocal (relativePath As String)" />
      <MemberSignature Language="F#" Value="abstract member NavigateToLocal : string -&gt; unit" Usage="iWebView.NavigateToLocal relativePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativePath">The relative path.</param>
        <summary>
            Loads the specified HTML content relative to the location of the current executable.
            </summary>
        <remarks>To be added.</remarks>
        <see cref="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigateToLocal(System.String)" />
        <see cref="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="NavigateToLocalStreamUri">
      <MemberSignature Language="C#" Value="public void NavigateToLocalStreamUri (Uri relativePath, Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.IUriToStreamResolver streamResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NavigateToLocalStreamUri(class System.Uri relativePath, class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.IUriToStreamResolver streamResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigateToLocalStreamUri(System.Uri,Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.IUriToStreamResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateToLocalStreamUri (relativePath As Uri, streamResolver As IUriToStreamResolver)" />
      <MemberSignature Language="F#" Value="abstract member NavigateToLocalStreamUri : Uri * Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.IUriToStreamResolver -&gt; unit" Usage="iWebView.NavigateToLocalStreamUri (relativePath, streamResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativePath" Type="System.Uri" />
        <Parameter Name="streamResolver" Type="Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.IUriToStreamResolver" />
      </Parameters>
      <Docs>
        <param name="relativePath">A path identifying the local HTML content to load.</param>
        <param name="streamResolver">A <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.IUriToStreamResolver" /> instance that converts a Uniform Resource Identifier (URI) into a stream to load.</param>
        <summary>
            Loads local web content at the specified Uniform Resource Identifier (URI) using an <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.IUriToStreamResolver" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateToString">
      <MemberSignature Language="C#" Value="public void NavigateToString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NavigateToString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigateToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateToString (text As String)" />
      <MemberSignature Language="F#" Value="abstract member NavigateToString : string -&gt; unit" Usage="iWebView.NavigateToString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The HTML content to display in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.</param>
        <summary>
             Loads the specified HTML content as a new document.
             </summary>
        <remarks>
          <see cref="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigateToString(System.String)" /> is asynchronous. Use the <see cref="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigationCompleted" /> event to detect when
             navigation has completed.
            
             <see cref="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigateToString(System.String)" /> supports content with references to external files such as CSS, scripts, images,
              and fonts. However, it does not provide a way to generate or provide these resources programmatically.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCompleted">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; NavigationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; NavigationCompleted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigationCompleted" />
      <MemberSignature Language="VB.NET" Value="Event NavigationCompleted As EventHandler(Of WebViewControlNavigationCompletedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.NavigationCompleted : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; " Usage="member this.NavigationCompleted : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> control finished navigating to new content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStarting">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; NavigationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; NavigationStarting" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NavigationStarting" />
      <MemberSignature Language="VB.NET" Value="Event NavigationStarting As EventHandler(Of WebViewControlNavigationStartingEventArgs) " />
      <MemberSignature Language="F#" Value="member this.NavigationStarting : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; " Usage="member this.NavigationStarting : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNavigationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs before the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> navigates to new content.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindowRequested">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNewWindowRequestedEventArgs&gt; NewWindowRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNewWindowRequestedEventArgs&gt; NewWindowRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.NewWindowRequested" />
      <MemberSignature Language="VB.NET" Value="Event NewWindowRequested As EventHandler(Of WebViewControlNewWindowRequestedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.NewWindowRequested : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNewWindowRequestedEventArgs&gt; " Usage="member this.NewWindowRequested : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNewWindowRequestedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlNewWindowRequestedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when an action is performed that causes content to be opened in a new window.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionRequested">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequestedEventArgs&gt; PermissionRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequestedEventArgs&gt; PermissionRequested" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.PermissionRequested" />
      <MemberSignature Language="VB.NET" Value="Event PermissionRequested As EventHandler(Of WebViewControlPermissionRequestedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.PermissionRequested : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequestedEventArgs&gt; " Usage="member this.PermissionRequested : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequestedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequestedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Occurs when an action in a <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> requires that permission be granted.
             </summary>
        <remarks>
             The types of permission that can be requested are defined in the <see cref="T:Windows.Web.UI.WebViewControlPermissionType" /> enumeration.
            
             If you don't handle the <see cref="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.PermissionRequested" /> event, the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> denies permission by default.
            
             When you handle a permission request in <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />, you get a <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequest" /> object as
             the value of the <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlPermissionRequestedEventArgs.PermissionRequest" /> property. You can call Allow to grant the request,
             Deny to deny the request, or Defer to defer the request until a later time.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcess Process { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcess Process" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Process" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Process As WebViewControlProcess" />
      <MemberSignature Language="F#" Value="member this.Process : Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcess" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.Process" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcess" /> that the control is hosted in.
            </summary>
        <value>The <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlProcess" /> that the control is hosted in.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="F#" Value="abstract member Refresh : unit -&gt; unit" Usage="iWebView.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reloads the current <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Source" /> in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.
            </summary>
        <remarks>If the current source was loaded via <see cref="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Navigate(System.Uri)" />, this method reloads the file without forced cache validation by sending a <c>Pragma:no-cache</c> header to the server.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptNotify">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlScriptNotifyEventArgs&gt; ScriptNotify;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlScriptNotifyEventArgs&gt; ScriptNotify" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.ScriptNotify" />
      <MemberSignature Language="VB.NET" Value="Event ScriptNotify As EventHandler(Of WebViewControlScriptNotifyEventArgs) " />
      <MemberSignature Language="F#" Value="member this.ScriptNotify : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlScriptNotifyEventArgs&gt; " Usage="member this.ScriptNotify : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlScriptNotifyEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlScriptNotifyEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the content contained in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> control passes a string to the application by using JavaScript.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings Settings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As WebViewControlSettings" />
      <MemberSignature Language="F#" Value="member this.Settings : Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings" /> object that contains properties to enable or disable <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> features.
            </summary>
        <value>A <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings" /> object that contains properties to enable or disable <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> features.</value>
        <remarks>Use the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings" /> object to enable or disable the use of JavaScript, ScriptNotify, and IndexedDB in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.</remarks>
        <altmember cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings.IsJavaScriptEnabled" />
        <altmember cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings.IsIndexedDBEnabled" />
        <altmember cref="P:Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlSettings.IsScriptNotifyAllowed" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Uniform Resource Identifier (URI) source of the HTML content to display in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.
            </summary>
        <value>
            The Uniform Resource Identifier (URI) source of the HTML content to display in the <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit" Usage="iWebView.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Halts the current <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> navigation or download.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeContentWarningDisplaying">
      <MemberSignature Language="C#" Value="event EventHandler&lt;object&gt; UnsafeContentWarningDisplaying;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;object&gt; UnsafeContentWarningDisplaying" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.UnsafeContentWarningDisplaying" />
      <MemberSignature Language="VB.NET" Value="Event UnsafeContentWarningDisplaying As EventHandler(Of Object) " />
      <MemberSignature Language="F#" Value="member this.UnsafeContentWarningDisplaying : EventHandler&lt;obj&gt; " Usage="member this.UnsafeContentWarningDisplaying : System.EventHandler&lt;System.obj&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> shows a warning page for content that was reported as unsafe by SmartScreen filter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsupportedUriSchemeIdentified">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnsupportedUriSchemeIdentifiedEventArgs&gt; UnsupportedUriSchemeIdentified;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnsupportedUriSchemeIdentifiedEventArgs&gt; UnsupportedUriSchemeIdentified" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.UnsupportedUriSchemeIdentified" />
      <MemberSignature Language="VB.NET" Value="Event UnsupportedUriSchemeIdentified As EventHandler(Of WebViewControlUnsupportedUriSchemeIdentifiedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.UnsupportedUriSchemeIdentified : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnsupportedUriSchemeIdentifiedEventArgs&gt; " Usage="member this.UnsupportedUriSchemeIdentified : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnsupportedUriSchemeIdentifiedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnsupportedUriSchemeIdentifiedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when an attempt is made to navigate to a <see cref="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Source" /> using a scheme that <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> does not support.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnviewableContentIdentified">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnviewableContentIdentifiedEventArgs&gt; UnviewableContentIdentified;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnviewableContentIdentifiedEventArgs&gt; UnviewableContentIdentified" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Toolkit.Win32.UI.Controls.IWebView.UnviewableContentIdentified" />
      <MemberSignature Language="VB.NET" Value="Event UnviewableContentIdentified As EventHandler(Of WebViewControlUnviewableContentIdentifiedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.UnviewableContentIdentified : EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnviewableContentIdentifiedEventArgs&gt; " Usage="member this.UnviewableContentIdentified : System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnviewableContentIdentifiedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.Toolkit.Win32.UI.Controls.Interop.WinRT.WebViewControlUnviewableContentIdentifiedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" /> attempts to navigate to a content type it cannot render. Like other navigation events, it is only triggered by top level navigations.
            </summary>
        <remarks>
            Event is triggered as soon as the content that can be identified is unsupported. For HTTP(s) content, this is right after the headers have been received.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Win32.UI.Controls.IWebView.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="Microsoft.Toolkit.Win32.UI.Controls.IWebView.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Forms.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Wpf.UI.Controls.WebView</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the version of EDGEHTML.DLL used by <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.
            </summary>
        <value>The version of EDGEHTML.DLL used by <see cref="T:Microsoft.Toolkit.Win32.UI.Controls.IWebView" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
