<Type Name="ITranslatorService" FullName="Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService">
  <TypeSignature Language="C#" Value="public interface ITranslatorService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITranslatorService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITranslatorService" />
  <TypeSignature Language="F#" Value="type ITranslatorService = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The <strong>ITranslatorServiceClient</strong> interface specifies properties and methods to translate text in various supported languages.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DetectLanguageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DetectLanguageAsync (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; DetectLanguageAsync(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.DetectLanguageAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetectLanguageAsync (input As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member DetectLanguageAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTranslatorService.DetectLanguageAsync input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text whose language must be detected.</param>
        <summary>
            Detects the language of a text.
            </summary>
        <returns>A string containing a two-character Language code for the given text.</returns>
        <remarks>
          <para>This method performs a non-blocking request for language detection.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-detect.
            </para>
        </remarks>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
      </Docs>
    </Member>
    <Member MemberName="DetectLanguagesWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt;&gt; DetectLanguagesWithResponseAsync (System.Collections.Generic.IEnumerable&lt;string&gt; input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt;&gt; DetectLanguagesWithResponseAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.DetectLanguagesWithResponseAsync(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function DetectLanguagesWithResponseAsync (input As IEnumerable(Of String)) As Task(Of IEnumerable(Of DetectedLanguageResponse))" />
      <MemberSignature Language="F#" Value="abstract member DetectLanguagesWithResponseAsync : seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt;&gt;" Usage="iTranslatorService.DetectLanguagesWithResponseAsync input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="input">A string array containing the sentences whose language must be detected.</param>
        <summary>
            Detects the language of a text.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse" /> array with one result for each string in the input array. Each object contains information about the detected language.</returns>
        <remarks>
          <para>This method performs a non-blocking request for language detection.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-detect.
            </para>
        </remarks>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
        <exception cref="T:System.ArgumentException">
          <list type="bullet">
            <term>The <paramref name="input" /> parameter doesn't contain any element.</term>
            <term>The <paramref name="input" /> array contains more than 100 elements.</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> array is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic).</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
      </Docs>
    </Member>
    <Member MemberName="DetectLanguageWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt; DetectLanguageWithResponseAsync (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt; DetectLanguageWithResponseAsync(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.DetectLanguageWithResponseAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetectLanguageWithResponseAsync (input As String) As Task(Of DetectedLanguageResponse)" />
      <MemberSignature Language="F#" Value="abstract member DetectLanguageWithResponseAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt;" Usage="iTranslatorService.DetectLanguageWithResponseAsync input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text whose language must be detected.</param>
        <summary>
            Detects the language of a text.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.DetectedLanguageResponse" /> object containing information about the detected language.</returns>
        <remarks>
          <para>This method performs a non-blocking request for language detection.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-detect.
            </para>
        </remarks>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageNamesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.ServiceLanguage&gt;&gt; GetLanguageNamesAsync (string language = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.ServiceLanguage&gt;&gt; GetLanguageNamesAsync(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguageNamesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguageNamesAsync (Optional language As String = Nothing) As Task(Of IEnumerable(Of ServiceLanguage))" />
      <MemberSignature Language="F#" Value="abstract member GetLanguageNamesAsync : string -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.ServiceLanguage&gt;&gt;" Usage="iTranslatorService.GetLanguageNamesAsync language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.ServiceLanguage&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">The language used to localize the language names. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Retrieves friendly names for the languages available for text translation.
            </summary>
        <returns>An array of <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.ServiceLanguage" /> containing the language codes and names supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
        <remarks>
          <para>This method performs a non-blocking request for language names.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-languages.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; GetLanguagesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt; GetLanguagesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguagesAsync () As Task(Of IEnumerable(Of String))" />
      <MemberSignature Language="F#" Value="abstract member GetLanguagesAsync : unit -&gt; System.Threading.Tasks.Task&lt;seq&lt;string&gt;&gt;" Usage="iTranslatorService.GetLanguagesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves the languages available for translation.
            </summary>
        <returns>A string array containing the language codes supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
        <remarks>
          <para>This method performs a non-blocking request for language codes.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-languages.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguageNamesAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InitializeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task InitializeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.InitializeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member InitializeAsync : unit -&gt; System.Threading.Tasks.Task" Usage="iTranslatorService.InitializeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Initializes the <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorService" /> class by getting an access token for the service.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the initialize operation.</returns>
        <remarks>Calling this method isn't mandatory, because the token is get/refreshed everytime is needed. However, it is called at startup, it can speed-up subsequest requests.</remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InitializeAsync (string subscriptionKey, string language = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task InitializeAsync(string subscriptionKey, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.InitializeAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeAsync (subscriptionKey As String, Optional language As String = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member InitializeAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="iTranslatorService.InitializeAsync (subscriptionKey, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionKey" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionKey">The subscription key for the Microsoft Translator Service on Azure.</param>
        <param name="language">A string representing the supported language code to speak the text in. The code must be present in the list of codes returned from the method <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />.</param>
        <summary>
            Initializes the <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorService" /> class by getting an access token for the service.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that represents the initialize operation.</returns>
        <remarks>
          <para>Calling this method isn't mandatory, because the token is get/refreshed everytime is needed. However, it is called at startup, it can speed-up subsequest requests.</para>
          <para>You must register Microsoft Translator on https://portal.azure.com to obtain the Subscription key needed to use the service.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="F#" Value="member this.Language : string with get, set" Usage="Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the string representing the supported language code to translate the text in.
            </summary>
        <value>The string representing the supported language code to translate the text in. The code must be present in the list of codes returned from the method <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
      </Docs>
    </Member>
    <Member MemberName="SubscriptionKey">
      <MemberSignature Language="C#" Value="public string SubscriptionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubscriptionKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscriptionKey As String" />
      <MemberSignature Language="F#" Value="member this.SubscriptionKey : string with get, set" Usage="Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Subscription key that is necessary to use <strong>Microsoft Translator Service</strong>.
            </summary>
        <value>The Subscription Key.</value>
        <remarks>
          <para>You must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key needed to use the service.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; TranslateAsync (string input, string to = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; TranslateAsync(string input, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAsync (input As String, Optional to As String = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member TranslateAsync : string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTranslatorService.TranslateAsync (input, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text to translate.</param>
        <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a text string into the specified language.
            </summary>
        <returns>A string representing the translated text.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> parameter is longer than 1000 characters.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; TranslateAsync (string input, string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; TranslateAsync(string input, string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAsync (input As String, from As String, to As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member TranslateAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="iTranslatorService.TranslateAsync (input, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text to translate.</param>
        <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a text string into the specified language.
            </summary>
        <returns>A string representing the translated text.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> parameter is longer than 1000 characters.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt; TranslateWithResponseAsync (System.Collections.Generic.IEnumerable&lt;string&gt; input, System.Collections.Generic.IEnumerable&lt;string&gt; to = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt; TranslateWithResponseAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; input, class System.Collections.Generic.IEnumerable`1&lt;string&gt; to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateWithResponseAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateWithResponseAsync (input As IEnumerable(Of String), Optional to As IEnumerable(Of String) = Nothing) As Task(Of IEnumerable(Of TranslationResponse))" />
      <MemberSignature Language="F#" Value="abstract member TranslateWithResponseAsync : seq&lt;string&gt; * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt;" Usage="iTranslatorService.TranslateWithResponseAsync (input, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="to" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="input">A string array containing the sentences to translate.</param>
        <param name="to">A string array representing the language codes to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a list of sentences into the specified languages.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse" /> array with one result for each language code in the <paramref name="to" /> array. Each object contains translated text and information.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic).</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">
          <list type="bullet">
            <term>The <paramref name="input" /> parameter is longer than 1000 characters.</term>
            <term>The <paramref name="input" /> array contains more than 25 elements.</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync (string input, System.Collections.Generic.IEnumerable&lt;string&gt; to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync(string input, class System.Collections.Generic.IEnumerable`1&lt;string&gt; to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateWithResponseAsync(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateWithResponseAsync (input As String, to As IEnumerable(Of String)) As Task(Of TranslationResponse)" />
      <MemberSignature Language="F#" Value="abstract member TranslateWithResponseAsync : string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;" Usage="iTranslatorService.TranslateWithResponseAsync (input, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="to" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text to translate.</param>
        <param name="to">A string array representing the language codes to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a text string into the specified languages.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse" /> object containing translated text and information.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">
          <list type="bullet">
            <term>The <paramref name="input" /> parameter is longer than 1000 characters.</term>
            <term>The <paramref name="to" /> array contains more than 25 elements.</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync (string input, string to = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync(string input, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateWithResponseAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateWithResponseAsync (input As String, Optional to As String = Nothing) As Task(Of TranslationResponse)" />
      <MemberSignature Language="F#" Value="abstract member TranslateWithResponseAsync : string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;" Usage="iTranslatorService.TranslateWithResponseAsync (input, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text to translate.</param>
        <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a text string into the specified language.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse" /> object containing translated text and information.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> parameter is longer than 1000 characters.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt; TranslateWithResponseAsync (System.Collections.Generic.IEnumerable&lt;string&gt; input, string from, System.Collections.Generic.IEnumerable&lt;string&gt; to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt; TranslateWithResponseAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; input, string from, class System.Collections.Generic.IEnumerable`1&lt;string&gt; to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateWithResponseAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateWithResponseAsync (input As IEnumerable(Of String), from As String, to As IEnumerable(Of String)) As Task(Of IEnumerable(Of TranslationResponse))" />
      <MemberSignature Language="F#" Value="abstract member TranslateWithResponseAsync : seq&lt;string&gt; * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt;" Usage="iTranslatorService.TranslateWithResponseAsync (input, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="input">A string array containing the sentences to translate.</param>
        <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <param name="to">A string array representing the language codes to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a list of sentences into the specified languages.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse" /> array with one result for each language code in the <paramref name="to" /> array. Each object contains translated text and information.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic).</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">
          <list type="bullet">
            <term>The <paramref name="input" /> parameter is longer than 1000 characters.</term>
            <term>The <paramref name="input" /> array contains more than 25 elements.</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt; TranslateWithResponseAsync (System.Collections.Generic.IEnumerable&lt;string&gt; input, string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt; TranslateWithResponseAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; input, string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateWithResponseAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateWithResponseAsync (input As IEnumerable(Of String), from As String, to As String) As Task(Of IEnumerable(Of TranslationResponse))" />
      <MemberSignature Language="F#" Value="abstract member TranslateWithResponseAsync : seq&lt;string&gt; * string * string -&gt; System.Threading.Tasks.Task&lt;seq&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt;" Usage="iTranslatorService.TranslateWithResponseAsync (input, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A string array containing the sentences to translate.</param>
        <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a list of sentences into the specified language.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse" /> array with one result for each language code in the <paramref name="to" /> array. Each object contains translated text and information.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic).</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">
          <list type="bullet">
            <term>The <paramref name="input" /> parameter is longer than 1000 characters.</term>
            <term>The <paramref name="input" /> array contains more than 25 elements.</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync (string input, string from, System.Collections.Generic.IEnumerable&lt;string&gt; to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync(string input, string from, class System.Collections.Generic.IEnumerable`1&lt;string&gt; to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateWithResponseAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateWithResponseAsync (input As String, from As String, to As IEnumerable(Of String)) As Task(Of TranslationResponse)" />
      <MemberSignature Language="F#" Value="abstract member TranslateWithResponseAsync : string * string * seq&lt;string&gt; -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;" Usage="iTranslatorService.TranslateWithResponseAsync (input, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text to translate.</param>
        <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <param name="to">A string array representing the language codes to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a text into the specified languages.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse" /> object containing translated text and information.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">
          <list type="bullet">
            <term>The <paramref name="input" /> parameter is longer than 1000 characters.</term>
            <term>The <paramref name="to" /> array contains more than 25 elements.</term>
          </list>
        </exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
    <Member MemberName="TranslateWithResponseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync (string input, string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt; TranslateWithResponseAsync(string input, string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.TranslateWithResponseAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateWithResponseAsync (input As String, from As String, to As String) As Task(Of TranslationResponse)" />
      <MemberSignature Language="F#" Value="abstract member TranslateWithResponseAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;" Usage="iTranslatorService.TranslateWithResponseAsync (input, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Services</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A string representing the text to translate.</param>
        <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" /> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" /> property will be used.</param>
        <summary>
            Translates a text string into the specified languages.
            </summary>
        <returns>A <see cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslationResponse" /> object containing translated text and information.</returns>
        <remarks>
          <para>This method perform a non-blocking request for text translation.</para>
          <para>For more information, go to https://docs.microsoft.com/azure/cognitive-services/translator/reference/v3-0-translate.
            </para>
        </remarks>
        <altmember cref="M:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.GetLanguagesAsync" />
        <exception cref="T:System.ArgumentNullException">
          <list type="bullet">
            <term>The <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> property hasn't been set.</term>
            <term>The <paramref name="input" /> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
          </list>
        </exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> parameter is longer than 1000 characters.</exception>
        <exception cref="T:Microsoft.Toolkit.Services.MicrosoftTranslator.TranslatorServiceException">The provided <see cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.SubscriptionKey" /> isn't valid or has expired.</exception>
        <altmember cref="P:Microsoft.Toolkit.Services.MicrosoftTranslator.ITranslatorService.Language" />
      </Docs>
    </Member>
  </Members>
</Type>
