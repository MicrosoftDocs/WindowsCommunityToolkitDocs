<Type Name="CompositionExtensions" FullName="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions">
  <TypeSignature Language="C#" Value="public static class CompositionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CompositionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CompositionExtensions" />
  <TypeSignature Language="F#" Value="type CompositionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class CompositionExtensions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode GetReference (this Windows.UI.Composition.AmbientLight compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode GetReference(class Windows.UI.Composition.AmbientLight compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.AmbientLight)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As AmbientLight) As AmbientLightReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.AmbientLight -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.AmbientLight" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>AmbientLightReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode GetReference (this Windows.UI.Composition.CompositionColorBrush compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode GetReference(class Windows.UI.Composition.CompositionColorBrush compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionColorBrush)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As CompositionColorBrush) As ColorBrushReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.CompositionColorBrush -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionColorBrush" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>ColorBrushReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode GetReference (this Windows.UI.Composition.CompositionNineGridBrush compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode GetReference(class Windows.UI.Composition.CompositionNineGridBrush compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionNineGridBrush)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As CompositionNineGridBrush) As NineGridBrushReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.CompositionNineGridBrush -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionNineGridBrush" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>NineGridBrushReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode GetReference (this Windows.UI.Composition.CompositionPropertySet compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode GetReference(class Windows.UI.Composition.CompositionPropertySet compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionPropertySet)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As CompositionPropertySet) As PropertySetReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.CompositionPropertySet -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionPropertySet" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>PropertySetReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode GetReference (this Windows.UI.Composition.CompositionSurfaceBrush compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode GetReference(class Windows.UI.Composition.CompositionSurfaceBrush compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionSurfaceBrush)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As CompositionSurfaceBrush) As SurfaceBrushReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.CompositionSurfaceBrush -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionSurfaceBrush" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>SurfaceBrushReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode GetReference (this Windows.UI.Composition.DistantLight compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode GetReference(class Windows.UI.Composition.DistantLight compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DistantLight)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As DistantLight) As DistantLightReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.DistantLight -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.DistantLight" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>DistantLightReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode GetReference (this Windows.UI.Composition.DropShadow compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode GetReference(class Windows.UI.Composition.DropShadow compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DropShadow)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As DropShadow) As DropShadowReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.DropShadow -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.DropShadow" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>DropShadowReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode GetReference (this Windows.UI.Composition.InsetClip compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode GetReference(class Windows.UI.Composition.InsetClip compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.InsetClip)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As InsetClip) As InsetClipReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.InsetClip -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.InsetClip" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>InsetClipReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode GetReference (this Windows.UI.Composition.Interactions.InteractionTracker compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode GetReference(class Windows.UI.Composition.Interactions.InteractionTracker compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Interactions.InteractionTracker)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As InteractionTracker) As InteractionTrackerReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.Interactions.InteractionTracker -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.Interactions.InteractionTracker" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>InteractionTrackerReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode GetReference (this Windows.UI.Composition.PointLight compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode GetReference(class Windows.UI.Composition.PointLight compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.PointLight)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As PointLight) As PointLightReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.PointLight -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.PointLight" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>PointLightReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode GetReference (this Windows.UI.Composition.SpotLight compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode GetReference(class Windows.UI.Composition.SpotLight compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.SpotLight)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As SpotLight) As SpotLightReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.SpotLight -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.SpotLight" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>SpotLightReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public static Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode GetReference (this Windows.UI.Composition.Visual compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode GetReference(class Windows.UI.Composition.Visual compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Visual)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetReference (compObj As Visual) As VisualReferenceNode" />
      <MemberSignature Language="F#" Value="static member GetReference : Windows.UI.Composition.Visual -&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference compObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObj" Type="Windows.UI.Composition.Visual" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compObj">The comp object.</param>
        <summary>
            Create an ExpressionNode reference to this CompositionObject.
            </summary>
        <returns>VisualReferenceNode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpecializedReference&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetSpecializedReference&lt;T&gt; (this Windows.UI.Composition.CompositionPropertySet ps) where T : Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetSpecializedReference&lt;(class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode) T&gt;(class Windows.UI.Composition.CompositionPropertySet ps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference``1(Windows.UI.Composition.CompositionPropertySet)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSpecializedReference(Of T As PropertySetReferenceNode) (ps As CompositionPropertySet) As T" />
      <MemberSignature Language="F#" Value="static member GetSpecializedReference : Windows.UI.Composition.CompositionPropertySet -&gt; 'T (requires 'T :&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode)" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference ps" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="ps" Type="Windows.UI.Composition.CompositionPropertySet" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">A class that derives from PropertySetReferenceNode.</typeparam>
        <param name="ps">The ps.</param>
        <summary>
            Create an ExpressionNode reference to this specialized PropertySet.
            </summary>
        <returns>T.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Invalid property set specialization</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertExpressionKeyFrame">
      <MemberSignature Language="C#" Value="public static void InsertExpressionKeyFrame (this Windows.UI.Composition.KeyFrameAnimation keyframeAnimation, float normalizedProgressKey, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode, Windows.UI.Composition.CompositionEasingFunction easing = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertExpressionKeyFrame(class Windows.UI.Composition.KeyFrameAnimation keyframeAnimation, float32 normalizedProgressKey, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode, class Windows.UI.Composition.CompositionEasingFunction easing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation,System.Single,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode,Windows.UI.Composition.CompositionEasingFunction)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub InsertExpressionKeyFrame (keyframeAnimation As KeyFrameAnimation, normalizedProgressKey As Single, expressionNode As ExpressionNode, Optional easing As CompositionEasingFunction = Nothing)" />
      <MemberSignature Language="F#" Value="static member InsertExpressionKeyFrame : Windows.UI.Composition.KeyFrameAnimation * single * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode * Windows.UI.Composition.CompositionEasingFunction -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame (keyframeAnimation, normalizedProgressKey, expressionNode, easing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyframeAnimation" Type="Windows.UI.Composition.KeyFrameAnimation" RefType="this" />
        <Parameter Name="normalizedProgressKey" Type="System.Single" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
        <Parameter Name="easing" Type="Windows.UI.Composition.CompositionEasingFunction" />
      </Parameters>
      <Docs>
        <param name="keyframeAnimation">The keyframe animation.</param>
        <param name="normalizedProgressKey">The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <param name="easing">The easing function to use when interpolating between frames.</param>
        <summary>
            Inserts a KeyFrame whose value is calculated using the specified ExpressionNode.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCondition">
      <MemberSignature Language="C#" Value="public static void SetCondition (this Windows.UI.Composition.Interactions.CompositionConditionalValue modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(class Windows.UI.Composition.Interactions.CompositionConditionalValue modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.CompositionConditionalValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetCondition (modifier As CompositionConditionalValue, expressionNode As ExpressionNode)" />
      <MemberSignature Language="F#" Value="static member SetCondition : Windows.UI.Composition.Interactions.CompositionConditionalValue * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition (modifier, expressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.CompositionConditionalValue" RefType="this" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0;win-comm-toolkit-dotnet-7.1" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0;win-comm-toolkit-dotnet-7.1" />
      </Parameters>
      <Docs>
        <param name="modifier">The modifier.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <summary>
            Use the value of specified ExpressionNode to determine if this composition conditional value modifier should be chosen.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCondition">
      <MemberSignature Language="C#" Value="public static void SetCondition (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetCondition (modifier As InteractionTrackerInertiaMotion, expressionNode As ExpressionNode)" />
      <MemberSignature Language="F#" Value="static member SetCondition : Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition (modifier, expressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion" RefType="this" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
      </Parameters>
      <Docs>
        <param name="modifier">The modifier.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <summary>
            Use the value of specified ExpressionNode to determine if this inertia modifier should be chosen.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCondition">
      <MemberSignature Language="C#" Value="public static void SetCondition (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetCondition (modifier As InteractionTrackerInertiaRestingValue, expressionNode As ExpressionNode)" />
      <MemberSignature Language="F#" Value="static member SetCondition : Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition (modifier, expressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue" RefType="this" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
      </Parameters>
      <Docs>
        <param name="modifier">The modifier.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <summary>
            Use the value of specified ExpressionNode to determine if this inertia modifier should be chosen.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMotion">
      <MemberSignature Language="C#" Value="public static void SetMotion (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMotion(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetMotion (modifier As InteractionTrackerInertiaMotion, expressionNode As ExpressionNode)" />
      <MemberSignature Language="F#" Value="static member SetMotion : Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion (modifier, expressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion" RefType="this" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
      </Parameters>
      <Docs>
        <param name="modifier">The modifier.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <summary>
            Use the value of specified ExpressionNode to dictate the motion for this inertia modifier.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRestingValue">
      <MemberSignature Language="C#" Value="public static void SetRestingValue (this Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRestingValue(class Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetRestingValue (modifier As InteractionTrackerInertiaRestingValue, expressionNode As ExpressionNode)" />
      <MemberSignature Language="F#" Value="static member SetRestingValue : Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue (modifier, expressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue" RefType="this" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
      </Parameters>
      <Docs>
        <param name="modifier">The modifier.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <summary>
            Use the value of specified ExpressionNode as the resting value for this inertia modifier.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (this Windows.UI.Composition.Interactions.CompositionConditionalValue modifier, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(class Windows.UI.Composition.Interactions.CompositionConditionalValue modifier, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetValue(Windows.UI.Composition.Interactions.CompositionConditionalValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetValue (modifier As CompositionConditionalValue, expressionNode As ExpressionNode)" />
      <MemberSignature Language="F#" Value="static member SetValue : Windows.UI.Composition.Interactions.CompositionConditionalValue * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetValue (modifier, expressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifier" Type="Windows.UI.Composition.Interactions.CompositionConditionalValue" RefType="this" Index="0" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0;win-comm-toolkit-dotnet-7.1" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" Index="1" FrameworkAlternate="win-comm-toolkit-dotnet-stable;win-comm-toolkit-dotnet-7.0;win-comm-toolkit-dotnet-7.1" />
      </Parameters>
      <Docs>
        <param name="modifier">The modifier.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <summary>
            Use the value of specified ExpressionNode as the value for this composition conditional value
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAnimation">
      <MemberSignature Language="C#" Value="public static void StartAnimation (this Windows.UI.Composition.CompositionObject compObject, string propertyName, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartAnimation(class Windows.UI.Composition.CompositionObject compObject, string propertyName, class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode expressionNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation(Windows.UI.Composition.CompositionObject,System.String,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub StartAnimation (compObject As CompositionObject, propertyName As String, expressionNode As ExpressionNode)" />
      <MemberSignature Language="F#" Value="static member StartAnimation : Windows.UI.Composition.CompositionObject * string * Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode -&gt; unit" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation (compObject, propertyName, expressionNode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compObject" Type="Windows.UI.Composition.CompositionObject" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="expressionNode" Type="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
      </Parameters>
      <Docs>
        <param name="compObject">The comp object.</param>
        <param name="propertyName">The name of the property that the expression will target.</param>
        <param name="expressionNode">The root ExpressionNode that represents the ExpressionAnimation.</param>
        <summary>
            Connects the specified ExpressionNode with the specified property of the object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
