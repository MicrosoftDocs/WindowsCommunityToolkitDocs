<Type Name="ExpressionNode" FullName="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode">
  <TypeSignature Language="C#" Value="public abstract class ExpressionNode : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionNode extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionNode&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ExpressionNode = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
    <AssemblyVersion>5.1.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.1.0.0</AssemblyVersion>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>7.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Class ExpressionNode.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="expressionNode.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all resources used by this ExpressionNode.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected internal abstract string GetValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetValue () As String" />
      <MemberSignature Language="F#" Value="abstract member GetValue : unit -&gt; string" Usage="expressionNode.GetValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the value.
            </summary>
        <returns>System.String.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateParameterNodes">
      <MemberSignature Language="C#" Value="protected internal void PopulateParameterNodes (ref System.Collections.Generic.Dictionary&lt;string,object&gt; constParamMap, ref System.Collections.Generic.HashSet&lt;Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode&gt; referenceNodes);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void PopulateParameterNodes(class System.Collections.Generic.Dictionary`2&lt;string, object&gt;&amp; constParamMap, class System.Collections.Generic.HashSet`1&lt;class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode&gt;&amp; referenceNodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub PopulateParameterNodes (ByRef constParamMap As Dictionary(Of String, Object), ByRef referenceNodes As HashSet(Of ReferenceNode))" />
      <MemberSignature Language="F#" Value="member this.PopulateParameterNodes : Dictionary * HashSet -&gt; unit" Usage="expressionNode.PopulateParameterNodes (constParamMap, referenceNodes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constParamMap" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" RefType="ref" />
        <Parameter Name="referenceNodes" Type="System.Collections.Generic.HashSet&lt;Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="constParamMap">The constant parameter map.</param>
        <param name="referenceNodes">The reference nodes.</param>
        <summary>
            Populates the parameter nodes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBooleanParameter">
      <MemberSignature Language="C#" Value="public void SetBooleanParameter (string parameterName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBooleanParameter(string parameterName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBooleanParameter (parameterName As String, value As Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetBooleanParameter : string * bool -&gt; unit" Usage="expressionNode.SetBooleanParameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the boolean value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorParameter">
      <MemberSignature Language="C#" Value="public void SetColorParameter (string parameterName, Windows.UI.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorParameter(string parameterName, valuetype Windows.UI.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter(System.String,Windows.UI.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorParameter (parameterName As String, value As Color)" />
      <MemberSignature Language="F#" Value="member this.SetColorParameter : string * Windows.UI.Color -&gt; unit" Usage="expressionNode.SetColorParameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="Windows.UI.Color" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the Color value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMatrix3x2Parameter">
      <MemberSignature Language="C#" Value="public void SetMatrix3x2Parameter (string parameterName, System.Numerics.Matrix3x2 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMatrix3x2Parameter(string parameterName, valuetype System.Numerics.Matrix3x2 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter(System.String,System.Numerics.Matrix3x2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMatrix3x2Parameter (parameterName As String, value As Matrix3x2)" />
      <MemberSignature Language="F#" Value="member this.SetMatrix3x2Parameter : string * System.Numerics.Matrix3x2 -&gt; unit" Usage="expressionNode.SetMatrix3x2Parameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Numerics.Matrix3x2" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the Matrix3x2 value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMatrix4x4Parameter">
      <MemberSignature Language="C#" Value="public void SetMatrix4x4Parameter (string parameterName, System.Numerics.Matrix4x4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMatrix4x4Parameter(string parameterName, valuetype System.Numerics.Matrix4x4 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter(System.String,System.Numerics.Matrix4x4)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMatrix4x4Parameter (parameterName As String, value As Matrix4x4)" />
      <MemberSignature Language="F#" Value="member this.SetMatrix4x4Parameter : string * System.Numerics.Matrix4x4 -&gt; unit" Usage="expressionNode.SetMatrix4x4Parameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Numerics.Matrix4x4" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the Matrix4x4 value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetQuaternionParameter">
      <MemberSignature Language="C#" Value="public void SetQuaternionParameter (string parameterName, System.Numerics.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetQuaternionParameter(string parameterName, valuetype System.Numerics.Quaternion value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter(System.String,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetQuaternionParameter (parameterName As String, value As Quaternion)" />
      <MemberSignature Language="F#" Value="member this.SetQuaternionParameter : string * System.Numerics.Quaternion -&gt; unit" Usage="expressionNode.SetQuaternionParameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the Quaternion value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReferenceParameter">
      <MemberSignature Language="C#" Value="public void SetReferenceParameter (string parameterName, Windows.UI.Composition.CompositionObject compObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetReferenceParameter(string parameterName, class Windows.UI.Composition.CompositionObject compObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter(System.String,Windows.UI.Composition.CompositionObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetReferenceParameter (parameterName As String, compObj As CompositionObject)" />
      <MemberSignature Language="F#" Value="member this.SetReferenceParameter : string * Windows.UI.Composition.CompositionObject -&gt; unit" Usage="expressionNode.SetReferenceParameter (parameterName, compObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="compObj" Type="Windows.UI.Composition.CompositionObject" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="compObj">The composition object that the parameter should resolve to.</param>
        <summary>
            Resolve a named reference parameter to the CompositionObject it will refer to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScalarParameter">
      <MemberSignature Language="C#" Value="public void SetScalarParameter (string parameterName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScalarParameter(string parameterName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetScalarParameter (parameterName As String, value As Single)" />
      <MemberSignature Language="F#" Value="member this.SetScalarParameter : string * single -&gt; unit" Usage="expressionNode.SetScalarParameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the float value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVector2Parameter">
      <MemberSignature Language="C#" Value="public void SetVector2Parameter (string parameterName, System.Numerics.Vector2 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVector2Parameter(string parameterName, valuetype System.Numerics.Vector2 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter(System.String,System.Numerics.Vector2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVector2Parameter (parameterName As String, value As Vector2)" />
      <MemberSignature Language="F#" Value="member this.SetVector2Parameter : string * System.Numerics.Vector2 -&gt; unit" Usage="expressionNode.SetVector2Parameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Numerics.Vector2" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the Vector2 value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVector3Parameter">
      <MemberSignature Language="C#" Value="public void SetVector3Parameter (string parameterName, System.Numerics.Vector3 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVector3Parameter(string parameterName, valuetype System.Numerics.Vector3 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter(System.String,System.Numerics.Vector3)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVector3Parameter (parameterName As String, value As Vector3)" />
      <MemberSignature Language="F#" Value="member this.SetVector3Parameter : string * System.Numerics.Vector3 -&gt; unit" Usage="expressionNode.SetVector3Parameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Numerics.Vector3" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the Vector3 value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVector4Parameter">
      <MemberSignature Language="C#" Value="public void SetVector4Parameter (string parameterName, System.Numerics.Vector4 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVector4Parameter(string parameterName, valuetype System.Numerics.Vector4 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter(System.String,System.Numerics.Vector4)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVector4Parameter (parameterName As String, value As Vector4)" />
      <MemberSignature Language="F#" Value="member this.SetVector4Parameter : string * System.Numerics.Vector4 -&gt; unit" Usage="expressionNode.SetVector4Parameter (parameterName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Numerics.Vector4" />
      </Parameters>
      <Docs>
        <param name="parameterName">The string name of the parameter to be resolved.</param>
        <param name="value">The value that the parameter should resolve to.</param>
        <summary>
            Resolve a named parameter to the Vector4 value it will use.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subchannels">
      <MemberSignature Language="C#" Value="protected internal string[] Subchannels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Subchannels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property Subchannels As String()" />
      <MemberSignature Language="F#" Value="member this.Subchannels : string[] with get, set" Usage="Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the subchannels.
            </summary>
        <value>The subchannels.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubchannelsInternal&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal T SubchannelsInternal&lt;T&gt; (params string[] subchannels) where T : Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance !!T SubchannelsInternal&lt;(class Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode) T&gt;(string[] subchannels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal``1(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function SubchannelsInternal(Of T As ExpressionNode) (ParamArray subchannels As String()) As T" />
      <MemberSignature Language="F#" Value="member this.SubchannelsInternal : string[] -&gt; 'T (requires 'T :&gt; Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)" Usage="expressionNode.SubchannelsInternal subchannels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Toolkit.Uwp.UI.Animations</AssemblyName>
        <AssemblyVersion>6.1.0.0</AssemblyVersion>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>7.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="subchannels" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">A class that derives from ExpressionNode.</typeparam>
        <param name="subchannels">The subchannels.</param>
        <summary>
            Subchannelses the internal.
            </summary>
        <returns>T.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
